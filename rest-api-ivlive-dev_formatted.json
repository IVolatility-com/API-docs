{
  "openapi": "3.0.1",
  "info": {
    "title": "Rest API Documentation",
    "description": "# Introduction\nThe IVolatility&copy; API is based on historical intraday, end-of-day, as well as real-time market data.\n# Authentication\nTo get access to data, you will need to get a bearer token, using GET <code>/token/get</code> endpoint. Your IVolatility&copy; login and password are required. After 30 minutes, the session will expire and you will need to refresh your token.\n\nIf you don’t want to use tokens, you may specify your IVolatility&copy; login and password directly in your data queries.\n# Limitations\nIf the number of records in the result set is more than 500, the result set is saved to a CSV file with GZIP compression. The client gets an HTTP response in JSON format with a link to download the file (once it is available). \n\nExample:  \n\n```json\nHTTP/1.1 200 OK  \nServer: nginx/0.6.31  \nContent-Language: en  \nContent-Type: application/octet-stream  \nConnection: close  \n\n{   \n    status: {  \n        executionTime: 1958,  \n        recordsFound: 30702,   \n        code: 'PENDING',   \n        urlForDetails: '/rest/v2/results?login=test1&token=78FD2DEA286ED8AF1A3122C1368152D5EF5DDC55C51902F92DF5D5B83B57F3BDE715CB98F3899E41387861A96EC7C825&path=/test1/90eb69f2-fa30-4310-9606-fae4c4074a3b/'   \n    },  \n    query: {   \n        dateFrom: '2018-06-18 15:59',  \n        dateTill: '2018-06-19 09:00',  \n        symbol: 'AAPL'  \n    },   \n    data: [  \n    ]  \n}  \n```\n\nThe GZIP file compiles on the server side. Upon completion, the user can download the file with the requested data. \n# Python Implementation\nThe <code>ivolatility</code> Python library was created in order to access the IVolatility&copy; API.\nTo get started, install the library:\n\n```python\npip install ivolatility\n```\n\nCongratulations! You may now start accessing the IVolatility&copy; API using Python.\nLet's start by importing the library:\n\n```python\nimport ivolatility as ivol\n```\n\nThe next step is to log into your IVol account.\nYou can either use your username and password:\n\n```python\nivol.setLoginParams(username='your_IVol_username', password='your_IVol_password')\n```\n\nOr, using your username and password, you can create a login token that will be valid for 30 minutes:\n\n```python\ntoken = ivol.getToken(username='your_IVol_username', password='your_IVol_password')\n```\n\nThe returned <code>token</code> comes back as a text string. Then pass your token as the <code>token</code> parameter:\n\n```python\nivol.setLoginParams(token=token)\n```\n\nOnce you're logged in, you can start retrieving market data from the API that you've subscribed to.\n<p><br>To retrieve market data, you must first specify the API endpoint from which the data will be pulled with a call to <code>ivol.setMethod(endpoint)</code>:\n\n```python\ngetData = ivol.setMethod(endpoint)\n```\n\nThen use the created <code>getData(api_params)</code> method to input the corresponding parameters and retrieve the data: \n\n```python\ndata = getData(param1 = '...', param2 = '...', ...)\n```\n\nTo find the endpoint and parameters that you are looking for, please refer to the full list of IVolatility&copy; API endpoints and their parameters below. \nThe parameters must be entered exactly as specified in the Documentation, followed by an equal sign (<code>=</code>), and the value of the parameter. The data will be returned as a <code>pandas.DataFrame()</code>.\nIf an API call generates more than 500 rows of data, the API creates a <code>data.csv.gz</code> file on the server. The <code>ivolatility</code> library downloads the gzip file to the directory where your script is running and loads the data into a DataFrame, without size restrictions.\n<p><b>NOTE!</b> Some of the endpoints use <code>from</code> as a parameter. Since it is an internal Python keyword, Python will throw a syntax error if it's used as a parameter. Please use any one of the following keywords as a replacement: <code>from_</code>, <code>_from</code>, <code>_from_</code>.<p>\nFor example, to retrieve end-of-day prices for Apple, Inc. (stock symbol: <code>AAPL</code>) during June 2022, make the following call:\n\n```python\ngetMarketData = ivol.setMethod('/equities/eod/stocks-prices')\nmarketData = getMarketData(symbol='AAPL', from_='2022-06-01', to='2022-06-30')\n```\n\n\n# Python Examples\n<h3 style=\"color:Red;\">The information presented is for <u>illustrative purposes only</u> and does not constitute investment advice, exhaustive explanation of the investment process, investment strategies or risk management. There are risks associated with investing in securities. You should not construe any of the presented information or other material as legal, tax, investment, financial, or other advice.</h3>\nFollowing are some examples to demonstrate the usage of the <code>ivolatility</code> Python library.\n\n## Realtime equity options chain\n<h3>Getting realtime prices of an equity options chain</h3>\n\n```python\nimport pandas as pd \nimport ivolatility as ivol \n\nivol.setLoginParams(username='your_IVol_username', password='your_IVol_password')\n\ngetOptionsChain = ivol.setMethod('/equities/option-series') \noptionsChain = getOptionsChain(symbol='SPX', expFrom='2021-12-23', expTo='2025-12-23', strikeFrom=3000, strikeTo=3010, callPut='C') \nprint(optionsChain) \n#optionsChain.to_csv('optionsChain.csv', header=True) \n\ngetMarketData = ivol.setMethod('/equities/rt/options-rawiv') \nmarketData = getMarketData(symbols=optionsChain['optionSymbol']) \nprint(marketData) \n#marketData.to_csv('marketData.csv', header=True) \n```\n\n## Backtesting\n<h4>It is possible to backtest your options strategy with daily options data based on moneyness or delta.<sup>1</sup> To do that, input the days to expiration and moneyness/delta into the <code>/equities/eod/nearest-option-tickers</code> endpoint to find the two nearest options (identified by option ID's<sup>2</sup>) that might be of interest. Then input those option ID's into the <code>/equities/eod/single-stock-option-raw-iv</code> endpoint to retrieve historical data, which you may save into a CSV file for testing your strategy.</h4>\n<h4><sup>1</sup>Moneyness takes precedence over delta.</h4>\n<h4><sup>2</sup>An option's underlying may have had corporate events during the life of an option that might have influenced the option's parameters, such as strike, symbol, etc. In order to preserve the option's history, IVolatility&copy; assigns option ID's to an option, which do not change over the course of the option's life.</h4>\n\n___\n<h4>Let's suppose our trading strategy is buying SPY ATM calls when IV < 25 and selling when IV > 29, and we want to test it on options expiring in 90 days. Therefore, to get the options we are interested in, use the <code>/equities/eod/nearest-option-tickers</code> endpoint with the corresponding params.</h4>\n<h4>Once we get the option ID's of the relevant call options, we will use the <code>/equities/eod/single-stock-option-raw-iv</code> endpoint to get the options' historical data over a period, say, from the beginning of 2021 to the present. </h4>\n\n```python\n#Entry:  Long SPY ATM calls when IV < 25 and short when IV > 29. \n#Exit:   Place the corresponding IV closing sell/buy orders. \n\nimport pandas as pd \nimport ivolatility as ivol \n\nivol.setLoginParams(username='your_IVol_username', password='your_IVol_password')\n\netf = 'SPY'\nmoneyness = 0\ndelta = None #.25\ndte = 90\ncp = 'C'\nfrom_ = '2021-01-01'\nto = '2022-10-30'\ninPosition = False\nentryPrice = 0\nrealizedPnl = 0\ntotalRealizedPnl = 0\nunrealizedPnl = 0\nlowerBound = 0.25\nupperBound = 0.29\n\ngetOptionIds = ivol.setMethod('/equities/eod/nearest-option-tickers')\ngetMarketData = ivol.setMethod('/equities/eod/single-stock-option-raw-iv')\n\nprint(etf)\n\noptionIds = getOptionIds(symbol=etf, dte=dte, moneyness=moneyness, delta=delta, callPut=cp)\nprint(optionIds)\n\nprev_optionId = None\nfor optionId in optionIds['option_id']:\n    if optionId == prev_optionId:\n        continue\n    prev_optionId = optionId\n    #load options data\n    marketData = getMarketData(option_id=optionId, from_=from_, to=to)\n    # print(marketData)\n    # marketData.to_csv(optionSymbol.replace(' ', '') + '.csv', index=False)\n    optionSymbol = optionIds.iloc[optionIds.index[optionIds['option_id'] == optionId][0]]['option_symbol']\n\n    #backtest\n    print(optionId, optionSymbol)\n    for i in range(marketData.shape[0]):\n        #if not in a position, check iv to get into a position\n        if not inPosition: \n            if marketData.iloc[i]['iv'] < lowerBound:\n                entryPrice = marketData.iloc[i]['ask']\n                inPosition = True\n            elif marketData.iloc[i]['iv'] > upperBound:\n                entryPrice = -marketData.iloc[i]['bid']\n                inPosition = True\n\n        #if in a position, update unrealized pnl and check if conditions warrant exiting trade\n        elif inPosition:\n            if entryPrice > 0:\n                if marketData.iloc[i]['iv'] > upperBound:\n                    realizedPnl = marketData.iloc[i]['bid'] - entryPrice\n                    totalRealizedPnl += realizedPnl\n                    inPosition = False\n                    entryPrice = 0\n                    unrealizedPnl = 0\n                else:\n                    unrealizedPnl = marketData.iloc[i]['bid'] - entryPrice\n            elif entryPrice < 0:\n                if marketData.iloc[i]['iv'] < lowerBound:\n                    realizedPnl = marketData.iloc[i]['ask'] - entryPrice\n                    totalRealizedPnl += realizedPnl\n                    inPosition = False\n                    entryPrice = 0\n                    unrealizedPnl = 0\n                else:\n                    unrealizedPnl = marketData.iloc[i]['ask'] - entryPrice\n\n            if not inPosition:\n                print(f'PNL ::: date: {marketData.iloc[i][\"date\"]}, IV = {marketData.iloc[i][\"iv\"]}, PNL = {round(realizedPnl,2)}')\n\n    result = 'Total realized PNL is ' + str(round(totalRealizedPnl,2))\n    if inPosition:\n        result += ' and an open position with unrealized PNL of ' + str(round(unrealizedPnl,2))\n    print(result)\n```\n\n## Auto-ARIMA-GARCH forecasting\n<h3>Using Auto-ARIMA-GARCH models to predict the S&P500</h3>\n\n<a href=\"https://github.com/IVolatility-com/API-docs/blob/main/auto_arima_garch.ipynb\" target=\"_blank\" rel=\"noopener noreferrer\">Auto-ARIMA-GARCH model</a>\n\n```python\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport pmdarima as pm\nimport arch\nimport ivolatility as ivol\n\nivol.setLoginParams(username='your_IVol_username', password='your_IVol_password')\n\ngetMarketData = ivol.setMethod('/equities/eod/stocks-prices')\nmarketData = getMarketData(symbol='SPX', from_='2020-01-01', to='2022-06-30')\n\nmarketData['date'] = pd.to_datetime(marketData['date'])\nmarketData = marketData.sort_values(by='date')\nmarketData = marketData.reset_index(drop=True)\nclose_prices = marketData['close'] * 0.1  #rescaling close_prices by 0.1 to mitigate DataScaleWarning\n\nmodel = pm.auto_arima(close_prices, start_p=1, start_q=1,\n                                    test='adf',\n                                    max_p=3, \n                                    max_q=3, \n                                    m=12,\n                                    start_P=0, \n                                    seasonal=False,\n                                    d=None, \n                                    D=1, \n                                    trace=True,\n                                    error_action='ignore',  \n                                    suppress_warnings=True, \n                                    stepwise=False)\n\n#Print ARIMA results\nprint(model.summary())\n\nmodel.plot_diagnostics(figsize=(7,5))\nplt.show()\n\n#Get ARIMA residuals\narima_residuals = model.arima_res_.resid\n\n#fit a GARCH(1,1) model on the residuals of the ARIMA model\ngarch = arch.arch_model(arima_residuals, p=1, q=1)\ngarch_fitted = garch.fit()\n\n#Print GARCH results\nprint(garch_fitted.summary())\ngarch_fitted.plot(annualize='D')\nplt.show()\n\n#Forecast\nn_periods = 90\nindex_of_fc = np.arange(len(close_prices), len(close_prices)+n_periods)\n\n#Use ARIMA to predict mu\npredicted_mu, confint = model.predict(n_periods=n_periods, return_conf_int=True)\n\n#Use GARCH to predict the residual\ngarch_forecast = garch_fitted.forecast(horizon=n_periods)\npredicted_et = garch_forecast.mean['h.01'].iloc[-1]\nprediction = predicted_mu + predicted_et\n\nfitted_series = pd.Series(prediction, index=index_of_fc)\nlower_series = pd.Series(confint[:, 0], index=index_of_fc)\nupper_series = pd.Series(confint[:, 1], index=index_of_fc)\n\n#Print prediction\nprint(prediction)\n\n#Plot\nplt.plot(close_prices)\nplt.plot(fitted_series, color='darkgreen')\nplt.fill_between(lower_series.index, \n                 lower_series, \n                 upper_series, \n                 color='k', alpha=.15)\n\nplt.title('Forecast of SPX')\nplt.show()\n```\n\n## Trading strategy\n<h3>A simple countertrend trading strategy on the daily timeframe</h3>\n\n```python\n#Entry:  If the previous day's closing candle was positive, sell at the next day's open; \n#        and vice versa. If candle was unchanged, do nothing.\n#Exit:   Place closing order at EOD.\n\nimport pandas as pd \nimport numpy as np \nimport matplotlib.pyplot as plt \nimport ivolatility as ivol \n\nivol.setLoginParams(username='your_IVol_username', password='your_IVol_password')\n\n#______________________________________________________________________________\n#Test trading strategy on SPX's daily data for 1980-2021.\n\ngetMarketData = ivol.setMethod('/equities/eod/stocks-prices')\nmarketData = getMarketData(symbol='SPX', from_='1980-01-01', to='2021-12-31')\n\nmarketData['date'] = pd.to_datetime(marketData['date'])\nmarketData = marketData.sort_values(by='date')\n\npnl_df = pd.DataFrame(columns=['date', 'day_pnl', 'total_pnl'])\ndate_col = marketData.columns.get_loc('date')\nopen_col = marketData.columns.get_loc('open')\nclose_col = marketData.columns.get_loc('close')\n\npnl = 0\nloc = 0\nfor i in range(marketData.shape[0]-1):\n    currentTrade = -np.sign(marketData.iat[i, close_col] - marketData.iat[i, open_col]) * marketData.iat[i+1, open_col]\n    if currentTrade == 0:\n        continue\n    currentTrade = np.sign(currentTrade)*marketData.iat[i+1, close_col] - currentTrade\n    pnl += currentTrade\n    pnl_df.loc[loc] = [marketData.iat[i+1, date_col], currentTrade, pnl]\n    loc += 1\n\npnl_df.plot(title='SPX', x='date', y='total_pnl', kind='line')\nplt.show()\n```\n\n## Options pricing with QuantLib\n<h3>Building a Black-Scholes-Merton QuantLib options pricing engine</h3>\n\n```python\nimport pandas as pd \nimport datetime \nimport QuantLib as ql \nimport matplotlib.pyplot as plt \nfrom statistics import mean \nimport ivolatility as ivol \n\nivol.setLoginParams(username='your_IVol_username', password='your_IVol_password')\n\nperiod = 360 \nOTMpct = 20 \noptType = 'C' \ndate_str = '2022-06-30' \ndate = datetime.datetime.strptime(date_str, '%Y-%m-%d') \n\noption_type = ql.Option.Call \ncalculation_date = ql.Date(date.day, date.month, date.year) \nmaturity_date = calculation_date + period \n\ngetMarketData = ivol.setMethod('/equities/eod/stocks-prices') \nspot_price = getMarketData(symbol='AAPL', from_=date_str, to=date_str).at[0, 'close'] \n\ngetMarketData = ivol.setMethod('/equities/eod/ivs') \nmarketData = getMarketData(symbol='AAPL', from_=date_str, to=date_str) \nmarketData['period'] = pd.to_numeric(marketData['period']) \nmarketData = marketData.loc[(marketData['call/put'] == optType) & (marketData['out-of-the-money_%'] == OTMpct) & (marketData['period'] == period)] \n\nstrike_price = marketData['strike'].values[0] \nvolatility = marketData['iv'].values[0] \ndividend_rate =  0.023 \nrisk_free_rate = 0.001 \nday_count = ql.Actual365Fixed() \ncalendar = ql.UnitedStates() \nql.Settings.instance().evaluationDate = calculation_date \npayoff = ql.PlainVanillaPayoff(option_type, strike_price) \nsettlement = calculation_date \nam_exercise = ql.AmericanExercise(settlement, maturity_date) \namerican_option = ql.VanillaOption(payoff, am_exercise) \neu_exercise = ql.EuropeanExercise(maturity_date) \neuropean_option = ql.VanillaOption(payoff, eu_exercise) \nspot_handle = ql.QuoteHandle( ql.SimpleQuote(spot_price) ) \nflat_ts = ql.YieldTermStructureHandle( ql.FlatForward(calculation_date, risk_free_rate, day_count) ) \ndividend_yield = ql.YieldTermStructureHandle( ql.FlatForward(calculation_date, dividend_rate, day_count) ) \nflat_vol_ts = ql.BlackVolTermStructureHandle( ql.BlackConstantVol(calculation_date, calendar, volatility, day_count) ) \nbsm_process = ql.BlackScholesMertonProcess(spot_handle, dividend_yield, flat_ts, flat_vol_ts) \n\ndef binomial_price(option, process, steps): \n    binomial_engine = ql.BinomialVanillaEngine(process, 'crr', steps) \n    option.setPricingEngine(binomial_engine) \n    return option.NPV() \n\nsteps = range(5, 200, 1) \neu_prices = [binomial_price(european_option, bsm_process, step) for step in steps] \nam_prices = [binomial_price(american_option, bsm_process, step) for step in steps] \n\n#theoretical European option price \neuropean_option.setPricingEngine(ql.AnalyticEuropeanEngine(bsm_process)) \nbsm_price = european_option.NPV() \n\nprint('BSM price:', bsm_price) \nprint('European option:', mean(eu_prices)) \nprint('American option:', mean(am_prices)) \n\nplt.plot(steps, am_prices, label='American Option', lw=2, alpha=0.6) \nplt.plot(steps, eu_prices, label='European Option', lw=2, alpha=0.6) \nplt.plot([5,200],[bsm_price, bsm_price], 'r--', label='BlackScholesMerton', lw=2, alpha=0.6) \nplt.xlabel('Steps') \nplt.ylabel('Price') \nplt.legend() \nplt.show() \n```\n\n## CAPM model\n<h3>Visualize descriptive statistics that are often used in portfolio optimization</h3>\n\n<a href=\"https://github.com/IVolatility-com/API-docs/blob/main/CAPM_IVOL.ipynb\" target=\"_blank\" rel=\"noopener noreferrer\">CAPM model</a>\n\n```python\nimport numpy as np \nimport pandas as pd \nimport datetime \nimport matplotlib.pyplot as plt \nimport seaborn as sns \nfrom sklearn.metrics import r2_score \nimport ivolatility as ivol \n\nivol.setLoginParams(username='your_IVol_username', password='your_IVol_password')\n\ninstruments = {'AAPL': 'Apple', 'MSFT': 'Microsoft', 'AMZN' : 'Amazon', 'GOOG': 'Google', 'META': 'Facebook', 'NFLX': 'Netflix' , 'NVDA': 'NVIDIA', 'SPX': 'SP500', 'NDX': 'NASDAQ'}\n\nstart = '2020-07-01'\nend   = '2021-06-30'\n\ngetMarketData = ivol.setMethod('/equities/eod/stocks-prices')\ngetIVX = ivol.setMethod('/equities/eod/ivx')\n\naggregate_marketData = pd.DataFrame()\naggregate_IVX = pd.DataFrame()\n\nfor ticker, instrument in instruments.items():\n    print('Loading market data for instrument {} with ticker = {}'.format(instrument, ticker))\n    marketData = getMarketData(symbol=ticker, from_=start, to=end)[['date', 'close']]\n    marketData['date'] = pd.to_datetime(marketData['date'])\n    marketData.columns = ['date', ticker]\n\n    #Using 360d (1-year) IV as the stock volatility\n    IVX = getIVX(symbol=ticker, from_=start, to=end)[['date', '360d_iv_mean']]\n    IVX['date'] = pd.to_datetime(IVX['date'])\n    IVX.columns = ['date', ticker]\n\n    if aggregate_marketData.empty:\n        aggregate_marketData = marketData\n        aggregate_IVX = IVX\n    else:\n        aggregate_marketData = pd.merge(aggregate_marketData, marketData, how='outer', on=['date'])\n        aggregate_IVX = pd.merge(aggregate_IVX, IVX, how='outer', on=['date'])\n\naggregate_marketData = aggregate_marketData.dropna().set_index('date').sort_index()\naggregate_IVX = aggregate_IVX.dropna().set_index('date').sort_index()\n\n#aggregate_marketData.to_csv('marketData.csv')\n#aggregate_IVX.to_csv('IVX.csv')\n\n#Plot closing prices\nfig, ax = plt.subplots(figsize=(16,12))\naggregate_marketData.plot(ax=plt.gca(), grid=True)\nax.set_yscale('log')\nax.set_title('Closing prices for all instruments')\nax.set_facecolor((0.95, 0.95, 0.99))\nax.grid(c = (0.75, 0.75, 0.99))\nplt.show()\n\nlog_returns = np.log(1 + aggregate_marketData.pct_change()).dropna(how='all')\nAPY_avg = [log_returns[x].mean()*252 for x in log_returns]\nIVX_avg = [aggregate_IVX[x].mean() for x in aggregate_IVX]\ncorr_mat = log_returns.corr()\n\n#Configuration - generate different colors & sizes\ncolors = ['red' if x < 0 else 'green' for x in APY_avg]\nsizes = list(map(lambda x : abs(x) * 1000, APY_avg))\n\n#Plot IVX vs APY\nfig, ax = plt.subplots(figsize = (16,12))\nax.set_title(r'Risk ($IVX$) vs Return ($APY$) of all instruments')\nax.set_facecolor((0.95, 0.95, 0.99))\nax.grid(c = (0.75, 0.75, 0.99))\nax.set_xlabel(r'Implied Volatility Mean(Call+Put)')\nax.set_ylabel(r'Annualized Percentage Yield $APY$')\nax.scatter(IVX_avg, APY_avg, s = sizes, c = colors, cmap = 'Blues', alpha = 0.4, edgecolors = 'grey', linewidth = 2)\nax.axhline(y = 0.0, xmin = 0, xmax = 5, c = 'blue', linewidth = 1.5, zorder = 0, linestyle = 'dashed')\nax.axvline(x = 0.0, ymin = 0, ymax = 40, c = 'blue', linewidth = 1.5, zorder = 0, linestyle = 'dashed')\nfor idx, instr in enumerate(list(aggregate_IVX.columns)):\n    ax.annotate(instr, (IVX_avg[idx] + 0.01, APY_avg[idx]))\nplt.show()\n\n#Plot correlation matrix\nfig, ax = plt.subplots(figsize=(12, 8))\nax.set_title(r'Correlation Matrix')\nsns.heatmap(corr_mat, mask=np.zeros_like(corr_mat, dtype=bool), cmap=sns.diverging_palette(220, 10, as_cmap=True), square=True, ax=ax)\nplt.show()\n\n###############################################################################################\n## Additional Statistics (Extra Risk & Return Analysis) — Capital Asset Pricing Model (CAPM) ##\n###############################################################################################\n\ndef CAPM(APR_avg, APR_avg_market, STD_avg, STD_avg_market, risk_free, corr):\n############################################################\n##          Expanded Capital Asset Pricing Model          ##\n## ______________________________________________________ ##\n##       E[R] - R_f  = α + β * (E[R_M] - R_f) + 𝜖         ##\n##                                                        ##\n##       INPUT :  [*] E[R] = log returns, σ = STD         ##\n##       OUTPUT : [*] α,β                                 ##\n############################################################\n    APR_premium        = APR_avg - risk_free\n    APR_market_premium = APR_avg_market - risk_free\n\n    #Calculate α, β\n    beta  = corr *  STD_avg / STD_avg_market\n    alpha = APR_premium - beta * APR_market_premium \n\n    return alpha, beta\n\ndef visualize_statistic(statistic, tickers, title, limit = 0):\n    # Configuration\n    fig, ax = plt.subplots(figsize = (12,8))\n    ax.set_facecolor((0.95, 0.95, 0.99))\n    ax.grid(c = (0.75, 0.75, 0.99), axis = 'y')\n    colors = sns.color_palette('Reds', n_colors = len(statistic))\n    barlist = ax.bar(x = np.arange(len(statistic)), height =  statistic)\n\n    for b, c in zip(barlist, colors):\n        b.set_color(c)\n    ax.axhline(y = limit, xmin = -1, xmax = 1, c = 'blue', linewidth = 1.5, zorder = 0, linestyle = 'dashed')\n\n    for i, v in enumerate(statistic):\n        ax.text( i - 0.22,v + 0.01 , str(round(v,3)), color = 'blue', fontweight='bold')\n    plt.xticks(np.arange(len(statistic)), tickers)\n    plt.title(r'{} for every instrument with respect to the NASDAQ market'.format(title))\n    plt.xlabel(r'Instrument')\n    plt.ylabel(r'{} value'.format(title))\n    plt.show()\n\n############################\n## Descriptive Statistics ##\n############################\n\n# Risk-free rate\ngetInterestRates = ivol.setMethod('/equities/interest-rates')\nrisk_free_rate = getInterestRates(from_=end, till=end)\nrisk_free_rate = float(risk_free_rate.loc[risk_free_rate['period'] == 1, 'rate'])\n\n# RETURN\nAPR_total         = log_returns.groupby([log_returns.index.year]).agg('sum')\nAPR_avg_total     = APR_total.mean()\nAPR_avg_market    = APR_avg_total['NDX']\ndescriptive_stats = pd.DataFrame(APR_avg_total, columns = ['Average APR'])\n\n# RISK\ndescriptive_stats = pd.merge(descriptive_stats, pd.DataFrame(aggregate_IVX.mean(), columns = ['Average IVX']), left_index=True,  right_index=True, how='inner')\nSTD_total         = log_returns.groupby([log_returns.index.year]).agg('std') * np.sqrt(252)\nSTD_avg_total     = STD_total.mean()\nSTD_avg_market    = STD_avg_total['NDX']\ndescriptive_stats = pd.merge(descriptive_stats, pd.DataFrame(STD_avg_total, columns = ['Average STD']), left_index=True,  right_index=True, how='inner')\n\n# R-squared between all instruments & market (NASDAQ)\nr2_scores = {}\nfor ticker in log_returns.columns:\n    r2_scores[ticker] = [r2_score(log_returns[ticker], log_returns['NDX'])]\ndescriptive_stats = pd.merge(descriptive_stats, pd.DataFrame.from_dict(r2_scores, orient='index', columns = ['R2 Score w.r.t. NDX']).drop('NDX'), left_index=True, right_index=True, how='outer')\n\nalpha, beta = CAPM(APR_avg=APR_avg_total.drop('NDX'), APR_avg_market=APR_avg_total['NDX'], STD_avg=STD_avg_total.drop('NDX'), STD_avg_market=STD_avg_total['NDX'], risk_free=risk_free_rate, corr=corr_mat.loc['NDX'].drop('NDX'))\nalpha_beta = pd.merge(pd.DataFrame(alpha, columns=['Alpha']), pd.DataFrame(beta, columns=['Beta']), left_index=True,  right_index=True, how='inner')\nvisualize_statistic(alpha.values, alpha.index, 'α')\nvisualize_statistic(beta.values, beta.index, 'β', limit = 1)\n\ndescriptive_stats = pd.merge(descriptive_stats, alpha_beta, left_index=True,  right_index=True, how='outer')\nportfolio_description = pd.DataFrame(descriptive_stats.mean(), columns=['Portfolio']).T\nprint(portfolio_description)\n```\n\n",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://192.168.25.168:8791",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/data-download-ui": {
      "get": {
        "tags": [
          "data-download-ui-controller"
        ],
        "operationId": "getCsv",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          },
          {
            "name": "dataType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "EOD_EQUITY_HV",
                "EOD_EQUITY_IVX",
                "EOD_EQUITY_IVS",
                "EOD_EQUITY_RAWIV",
                "EOD_EQUITY_OPTNBBO",
                "EOD_EQUITY_PRICES",
                "EOD_FUTURES_PRICES",
                "EOD_FUTURES_RAWIV",
                "EOD_FUTURES_OPTNBBO",
                "EOD_FUTURES_HV",
                "EOD_FUTURES_IVX",
                "EOD_FUTURES_IVS",
                "INTRADAY_EQUITY_PRICES",
                "INTRADAY_EQUITY_OPTIONS",
                "SINGLE"
              ]
            }
          },
          {
            "name": "expDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "strike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "optType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "CALL",
                "PUT",
                "ALL"
              ]
            }
          },
          {
            "name": "minuteType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "MINUTE_1",
                "MINUTE_5",
                "MINUTE_15",
                "MINUTE_30",
                "HOUR",
                "CUSTOM",
                "DAILY"
              ]
            }
          },
          {
            "name": "minutes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "data-download-ui-controller"
        ],
        "operationId": "makeOrder",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          },
          {
            "name": "dataType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "EOD_EQUITY_HV",
                "EOD_EQUITY_IVX",
                "EOD_EQUITY_IVS",
                "EOD_EQUITY_RAWIV",
                "EOD_EQUITY_OPTNBBO",
                "EOD_EQUITY_PRICES",
                "EOD_FUTURES_PRICES",
                "EOD_FUTURES_RAWIV",
                "EOD_FUTURES_OPTNBBO",
                "EOD_FUTURES_HV",
                "EOD_FUTURES_IVX",
                "EOD_FUTURES_IVS",
                "INTRADAY_EQUITY_PRICES",
                "INTRADAY_EQUITY_OPTIONS",
                "SINGLE"
              ]
            }
          },
          {
            "name": "expDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "strike",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "optType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "CALL",
                "PUT",
                "ALL"
              ]
            }
          },
          {
            "name": "minuteType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "MINUTE_1",
                "MINUTE_5",
                "MINUTE_15",
                "MINUTE_30",
                "HOUR",
                "CUSTOM",
                "DAILY"
              ]
            }
          },
          {
            "name": "minutes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/token/get": {
      "get": {
        "tags": [
          "Get API Token"
        ],
        "operationId": "Get Token",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/options": {
      "get": {
        "tags": [
          "Live"
        ],
        "description": "Retrieves equity options data, including National Best Bid and Offer (NBBO), open interest (OI), implied volatility (IV), and greeks. The NBBO is sourced from all exchanges.\n<br>Query filters include expiration dates and strikes. \n<p>The returned data includes all traded expirations and strikes for the following types of options:</p>\n\n* regular options expired on 3rd Friday/Saturday\n* weeklies\n* quarterlies\n* leaps\n\nNon-standard options, issued after corporate actions, are **not** included in the data.\n| Example Request | http://restapi.ivolatility.com/quotes/options?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&strikeMin=100&strikeMax=300&expMin=2022-12-01&expMax=2022-12-31 |\n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/quotes/options')\nmarketData = getMarketData(symbol='AAPL', strikeMin=100, strikeMax=300, expMin='2022-12-01', expMax='2022-12-31')\n```\n\n",
        "operationId": "Equity Options Extended Filters",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity ticker. Ex: AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "strikeMin",
            "in": "query",
            "description": "The minimum strike price of the options for the requested underlying.",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "strikeMax",
            "in": "query",
            "description": "The maximum strike price of the options for the requested underlying.",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "expMin",
            "in": "query",
            "description": "The minimum expiration date, specified in yyyy-mm-dd format, of the options for the requested underlying.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expMax",
            "in": "query",
            "description": "The maximum expiration date, specified in yyyy-mm-dd format, of the options for the requested underlying.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string"
                },
                "example": "symbol,underlyingPrice,openInterest,delta,forwardPrice,type,theta,cumulativeVolume,askExchange,theoPrice,lastExchange,bidExchange,askSize,expirationDate,lastDate,timestamp,askPrice,bidSize,strike,iv,bidPrice,preIv,impliedYield,volume,lastSize,stockId,rho,style,bidDate,askDate,vega,gamma,lastPrice\nAAPL  211231C00170000,172.99,64012,0.764849,0,C,-0.140682,96552,,0,,,2,\"2021-12-31T00:00:00.0000-0500\",18991230000000,\"2021-12-23T03:02:20.4120-0500\",6.9,22,170,0.297887,6.7,0.297887,,,,799,0.031408,A,20211222160000,20211222160000,0.08473,0.037441,0\nAAPL  211231P00170000,172.99,25599,-0.234188,0,P,-0.139344,30110,,0,,,31,\"2021-12-31T00:00:00.0000-0500\",18991230000000,\"2021-12-23T03:02:20.4120-0500\",1.19,12,170,0.296511,1.1,0.296511,,,,799,-0.010411,A,20211222160000,20211222160000,0.084538,0.03753,0\n"
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/options/realtime": {
      "get": {
        "tags": [
          "Realtime"
        ],
        "description": "Retrieves realtime equity options data, including National Best Bid and Offer (NBBO), open interest (OI), implied volatility (IV), and greeks. The NBBO is sourced from all exchanges.\n\n* US data starts from November 2000, SPX - from 1990;\n* European data - from 4/19/2011;\n* Asian data, including ASX and HKEX – from 6/12/2013, NSX – from 4/24/2016, OSE/TSE – from 7/18/2016.\n\n| Example Request | http://restapi.ivolatility.com/quotes/options/realtime?username=your_IVol_username&password=your_IVol_password&symbols=SPX%20%20%20251219C04100000,SPX%20%20%20251219P04100000 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/quotes/options/realtime')\nmarketData = getMarketData(symbols='SPX   251219C04100000,SPX   251219P04100000')\n```\n\n",
        "operationId": "Equity Options (Realtime)",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbols",
            "in": "query",
            "description": "Comma-separated list of options tickers. Ex: SPX   251219C04100000,SPX   251219P04100000",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                },
                "example": {
                  "status": {
                    "executionTime": 10,
                    "recordsFound": 1,
                    "code": "DONE"
                  },
                  "query": {
                    "requestUUID": "451e1db0-e2da-4d69-bf80-d430ca55223e",
                    "symbols": "SPXW 211223P03890000"
                  },
                  "data": [
                    {
                      "symbol": "SPXW 211223P03890000",
                      "stockId": 9327,
                      "expirationDate": "2021-12-23T00:00:00.0000-0500",
                      "strike": 3890.0,
                      "type": "P",
                      "style": "E",
                      "openInterest": 88,
                      "bidPrice": 0.0,
                      "askPrice": 0.0,
                      "lastPrice": 0.0,
                      "bidDate": "20211223000000",
                      "askDate": "20211223000000",
                      "lastDate": "20211227000000",
                      "bidSize": 0,
                      "askSize": 0,
                      "underlyingPrice": 4735.353,
                      "iv": 0.207512,
                      "delta": 0.0,
                      "vega": 0.0,
                      "gamma": 0.0,
                      "theta": -0.0,
                      "rho": 0.0,
                      "preIv": -1.0,
                      "theoPrice": 0.0,
                      "forwardPrice": 0.0,
                      "timestamp": "2021-12-27T05:27:49.2660-0500",
                      "sentToESTimestamp": "2021-12-27T05:28:02.1170-0500"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/options/delayed": {
      "get": {
        "tags": [
          "Delayed"
        ],
        "description": "Retrieves 20-minute delayed equity options data, including National Best Bid and Offer (NBBO), open interest (OI), implied volatility (IV), and greeks. The NBBO is sourced from all exchanges.\n<p>The returned data includes all traded expirations and strikes for the following types of options:</p>\n\n* regular options expired on 3rd Friday/Saturday\n* weeklies\n* quarterlies\n* leaps\n\nNon-standard options, issued after corporate actions, are **not** included in the data.\n| Example Request | http://restapi.ivolatility.com/quotes/options/delayed?username=your_IVol_username&password=your_IVol_password&symbols=SPX%20%20%20251219C04100000,SPX%20%20%20251219P04100000 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/quotes/options/delayed')\nmarketData = getMarketData(symbols='SPX   251219C04100000,SPX   251219P04100000')\n```\n\n",
        "operationId": "Equity Options (Delayed)",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbols",
            "in": "query",
            "description": "Comma-separated list of options tickers. Ex: SPX   251219C04100000,SPX   251219P04100000",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                },
                "example": {
                  "status": {
                    "executionTime": 12,
                    "recordsFound": 1,
                    "code": "DONE"
                  },
                  "query": {
                    "requestUUID": "1ebd88d1-5cea-4111-8461-774ec8bdb024",
                    "symbols": "SPXW 220103C04725000"
                  },
                  "data": [
                    {
                      "symbol": "SPXW 220103C04725000",
                      "stockId": 9327,
                      "expirationDate": "2022-01-03T00:00:00.0000-0500",
                      "strike": 4725.0,
                      "type": "C",
                      "style": "E",
                      "openInterest": 925,
                      "bidPrice": 36.0,
                      "askPrice": 36.7,
                      "lastPrice": 37.38,
                      "bidDate": "20211223161448",
                      "askDate": "20211223161448",
                      "lastDate": "20211223160247",
                      "bidSize": 15,
                      "askSize": 16,
                      "cumulativeVolume": 795,
                      "underlyingPrice": 4728.838,
                      "iv": 0.107974,
                      "delta": 0.512717,
                      "vega": 3.270273,
                      "gamma": 0.004499,
                      "theta": -1.522691,
                      "rho": 0.718981,
                      "preIv": 0.107974,
                      "theoPrice": 36.35,
                      "forwardPrice": 4705.5376,
                      "timestamp": "2021-12-23T16:16:35.7400-0500",
                      "sentToESTimestamp": "2021-12-23T16:16:41.8210-0500"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/proxy/yield": {
      "get": {
        "tags": [
          "End-Of-Day"
        ],
        "description": "Retrieves 12-month average dividend yield of an equity index; also used in indexes' implied volatility calculations.\n\n| Example Request | http://restapi.ivolatility.com/proxy/yield?username=your_IVol_username&password=your_IVol_password&symbol=SPX | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/proxy/yield')\nmarketData = getMarketData(symbol='SPX')\n```\n\n",
        "operationId": "Equity Index Dividend Yield",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Index ticker. Ex: SPX",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                },
                "example": {
                  "status": {
                    "executionTime": 105,
                    "recordsFound": 467,
                    "code": "DONE"
                  },
                  "query": {
                    "symbol": "SPX",
                    "token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxODg3ODYiLCJsb2dpbiI6ImR2b3JvbnRzb3YiLCJzdXVpZCI6IjY4Y2IzMjc1LWM4MGQtNDkyNy1iMjIzLTUwNTg0OWExNmIwMSIsImRhdGEiOiI0NT02XG42OT02XG4xMDIwPTdcbjEzMD02XG40NTA9NlxuNDUxPTZcbjExMD02XG4xMjc3PTZcbjc3Nz03XG4xMTc3PTZcbjEwMTI9NlxuOTE9NlxuNzA9NlxuOTI9NlxuOTM9NlxuNTA9N1xuNzE3PTZcbjc3PTZcbjEyPTZcbjEwMTE9NlxuMTA3Nz02XG4xMDEwPTZcbjE0MD02XG4xMjA9NlxuMTAwOD02XG4xMjE9NlxuMTAwPTZcbjEwMDc9NlxuMTEwNT02XG4xMDA2PTZcbjEwMDU9N1xuMTAwND02XG4xNDAwPTdcbjU9NlxuMTMwMD02XG4xMDAzPTZcbjY9N1xuMTAwMj02XG4zNjk9NlxuMTAwMT02XG45MDA9N1xuOT03XG45MDE9NlxuOTAyPTZcbjkwMz02XG40MD02XG4yMD02XG4xMDA5PTYiLCJpYXQiOjE2NDAzNTEzNTAsImV4cCI6MTY0MDM1MzE1MH0.VNdtQkVHUJE2k_wjGOb8LpmTCWLPK2TajXjz4JQnukQ"
                  },
                  "data": [
                    {
                      "calc_date": "2011-04-29",
                      "stock_id": 9327,
                      "t_date": "1989-12-29",
                      "yield": 0.031177
                    },
                    {
                      "calc_date": "2011-04-29",
                      "stock_id": 9327,
                      "t_date": "1990-01-31",
                      "yield": 0.033718
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/proxy/underlying-info": {
      "get": {
        "tags": [
          "End-Of-Day"
        ],
        "description": "Retrieves financial instrument's reference information.\n\n| Example Request | http://restapi.ivolatility.com/proxy/underlying-info?username=your_IVol_username&password=your_IVol_password&symbol=AAPL | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/proxy/underlying-info')\nmarketData = getMarketData(symbol='AAPL')\n```\n\n",
        "operationId": "Equities Underlying Info",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity ticker. Ex: AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Equity region",
            "required": false,
            "schema": {
              "type": "string",
              "default": "USA",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                },
                "example": {
                  "status": {
                    "executionTime": 4137,
                    "recordsFound": 1,
                    "code": "DONE"
                  },
                  "query": {
                    "stock_ids": "799",
                    "token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxODg3ODYiLCJsb2dpbiI6ImR2b3JvbnRzb3YiLCJzdXVpZCI6ImM0NDEwY2VkLTRlZmItNDliYi04MDQ5LTg0MjhkZTM0MDcxYSIsImRhdGEiOiI0NT02XG42OT02XG4xMDIwPTdcbjEzMD02XG40NTA9NlxuNDUxPTZcbjExMD02XG4xMjc3PTZcbjc3Nz03XG4xMTc3PTZcbjEwMTI9NlxuOTE9NlxuNzA9NlxuOTI9NlxuOTM9NlxuNTA9N1xuNzE3PTZcbjc3PTZcbjEyPTZcbjEwMTE9NlxuMTA3Nz02XG4xMDEwPTZcbjE0MD02XG4xMjA9NlxuMTAwOD02XG4xMjE9NlxuMTAwPTZcbjEwMDc9NlxuMTEwNT02XG4xMDA2PTZcbjEwMDU9N1xuMTAwND02XG4xNDAwPTdcbjU9NlxuMTMwMD02XG4xMDAzPTZcbjY9N1xuMTAwMj02XG4zNjk9NlxuMTAwMT02XG45MDA9N1xuOT03XG45MDE9NlxuOTAyPTZcbjkwMz02XG40MD02XG4yMD02XG4xMDA5PTYiLCJpYXQiOjE2NDAyNDUyNDYsImV4cCI6MTY0MDI0NzA0Nn0.PhAWjibdNQmXgz5QHQbyIh7AJjNiI2fjasrGa2GizKk"
                  },
                  "data": [
                    {
                      "ccy": "USD",
                      "company_name": "Apple Inc",
                      "dividend_convention": "Discrete dividends",
                      "exchange_code": "NASDAQ",
                      "exchange_name": "NASDAQ Stocks Exchange",
                      "internal_stockid": 799,
                      "isin": "US0378331005",
                      "region": "USA",
                      "stock_ticker": "AAPL",
                      "type": "S"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/proxy/realtime-stocks": {
      "get": {
        "tags": [
          "Realtime"
        ],
        "description": "Retrieves realtime price and volume data for the requested financial instrument, i.e. stock, ETF, index.\n\n| Example Request | http://restapi.ivolatility.com/proxy/realtime-stocks?username=your_IVol_username&password=your_IVol_password&symbol=SPX,AAPL | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/proxy/realtime-stocks')\nmarketData = getMarketData(symbol='SPX,AAPL')\n```\n\n",
        "operationId": "Equity Prices (Realtime)",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Comma-separated list of equity tickers. Ex: SPX,AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                },
                "example": {
                  "status": {
                    "executionTime": 14,
                    "code": "DONE",
                    "queriesLeft": 4999969,
                    "recordsFound": 1
                  },
                  "query": {
                    "requestUUID": "fbd9c182-fbb0-40a1-bc92-8e7dd8c6b5e7",
                    "symbols": "AAPL"
                  },
                  "data": [
                    {
                      "symbol": "AAPL",
                      "askPrice": 176.15,
                      "bidSize": 1,
                      "openPrice": 0,
                      "bidPrice": 176.11,
                      "cumulativeVolume": 66512713,
                      "lowPrice": 0,
                      "stockId": 799,
                      "highPrice": 0,
                      "askSize": 5,
                      "dumpTimestamp": "2021-12-23T16:16:00.0000-0500",
                      "officialClose": 176.28,
                      "lastPrice": 176.28,
                      "timestamp": "2021-12-27T03:02:29.8700-0500"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/proxy/option-series": {
      "get": {
        "tags": [
          "End-Of-Day"
        ],
        "description": "Retrieves options chain data for the provided equity ticker.\n\n| Example Request | http://restapi.ivolatility.com/proxy/option-series?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&expFrom=2022-10-21&expTo=2022-10-21&strikeFrom=100&strikeTo=105&callPut=C | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/proxy/option-series')\nmarketData = getMarketData(symbol='AAPL', expFrom='2022-10-21', expTo='2022-10-21', strikeFrom=100, strikeTo=105, callPut='C')\n```\n\n",
        "operationId": "Equity Option Series",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity ticker. Ex: AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expFrom",
            "in": "query",
            "description": "Date of equity option's expiration, expressed in yyyy-mm-dd format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expTo",
            "in": "query",
            "description": "Date of equity option's expiration, expressed in yyyy-mm-dd format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "strikeFrom",
            "in": "query",
            "description": "Equity option's strike price",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "strikeTo",
            "in": "query",
            "description": "Equity option's strike price",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "callPut",
            "in": "query",
            "description": "Call (C) or Put (P)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OptionSeries"
                },
                "example": {
                  "status": {
                    "code": "DONE",
                    "recordsFound": 2
                  },
                  "query": {
                    "requestUUID": null
                  },
                  "data": [
                    {
                      "callPut": "C",
                      "stockSymbol": "AAPL",
                      "optionSymbol": "AAPL 221021C00100000",
                      "strike": 100,
                      "expirationDate": "2022-10-21"
                    },
                    {
                      "callPut": "C",
                      "stockSymbol": "AAPL",
                      "optionSymbol": "AAPL 221021C00105000",
                      "strike": 105,
                      "expirationDate": "2022-10-21"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/proxy/interest-rates": {
      "get": {
        "tags": [
          "End-Of-Day"
        ],
        "description": "Retrieves interpolated inter-bank offered rates, such as LIBORs, with a 1-day delay (until end of 2021);\n<br>ISDA Fallback rates, with a 1-day delay (starting 2022).\n\n| Example Request | http://restapi.ivolatility.com/proxy/interest-rates?username=your_IVol_username&password=your_IVol_password&from=2021-12-24&till=2021-12-24 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/proxy/interest-rates')\nmarketData = getMarketData(from_='2021-12-24', till='2021-12-24')\n```\n\n",
        "operationId": "Interest Rates",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "till",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                },
                "example": {
                  "status": {
                    "executionTime": 10,
                    "recordsFound": 1800,
                    "code": "PENDING",
                    "urlForDetails": "https://cloud.ivolatility.com/api/rest/v2/results?ts=1663222825294&token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxODg3ODYiLCJsb2dpbiI6ImR2b3JvbnRzb3YiLCJzdXVpZCI6IjI5Y2UwZTA5LWIyM2QtNGZlMS1iYzE3LWZlOWZlZDkwMmRiYiIsImRhdGEiOiI0NT02XG42OT02XG4xMDIwPTdcbjEzMD02XG40NTE9NlxuMTEwPTZcbjc3Nz02XG43MD03XG45Mz02XG41MD03XG4xMj02XG4xMDEwPTZcbjE0MD02XG4xMjA9NlxuMTAwOD02XG4xMDA9NlxuMTEwNT02XG4xMDA1PTdcbjEwMDQ9NlxuMTQwMD03XG41PTdcbjY9NlxuMzY5PTZcbjkwMD03XG45PTdcbjkwMT03XG45MDI9NlxuOTAzPTdcbjQwPTZcbjIwPTdcbjEwMDk9NiIsImlhdCI6MTY2MzIyMjgwNywiZXhwIjoxNjYzMjI0NjA3fQ.Ja5WM8f4XqPpcVpZ0jmL2yUWpKzMUhyyfp8BShF0mME&path=/your_IVol_username/.6e5122f6-cd50-3632-a6b6-934c1e6b1575/"
                  },
                  "query": {
                    "till": "2021-12-24",
                    "requestUUID": "6e5122f6-cd50-3632-a6b6-934c1e6b1575",
                    "from": "2021-12-24",
                    "token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxODg3ODYiLCJsb2dpbiI6ImR2b3JvbnRzb3YiLCJzdXVpZCI6IjI5Y2UwZTA5LWIyM2QtNGZlMS1iYzE3LWZlOWZlZDkwMmRiYiIsImRhdGEiOiI0NT02XG42OT02XG4xMDIwPTdcbjEzMD02XG40NTE9NlxuMTEwPTZcbjc3Nz02XG43MD03XG45Mz02XG41MD03XG4xMj02XG4xMDEwPTZcbjE0MD02XG4xMjA9NlxuMTAwOD02XG4xMDA9NlxuMTEwNT02XG4xMDA1PTdcbjEwMDQ9NlxuMTQwMD03XG41PTdcbjY9NlxuMzY5PTZcbjkwMD03XG45PTdcbjkwMT03XG45MDI9NlxuOTAzPTdcbjQwPTZcbjIwPTdcbjEwMDk9NiIsImlhdCI6MTY2MzIyMjgwNywiZXhwIjoxNjYzMjI0NjA3fQ.Ja5WM8f4XqPpcVpZ0jmL2yUWpKzMUhyyfp8BShF0mME"
                  },
                  "data": [

                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/proxy/delayed-stocks": {
      "get": {
        "tags": [
          "Delayed"
        ],
        "description": "Retrieves 20-minute delayed price and volume data for the requested financial instrument, i.e. stock, ETF, index.\n\n| Example Request | http://restapi.ivolatility.com/proxy/delayed-stocks?username=your_IVol_username&password=your_IVol_password&symbol=SPX,AAPL | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/proxy/delayed-stocks')\nmarketData = getMarketData(symbol='SPX,AAPL')\n```\n\n",
        "operationId": "Delayed Stock Prices",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Comma-separated list of equity tickers. Ex: SPX,AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                },
                "example": {
                  "status": {
                    "executionTime": 13,
                    "code": "DONE",
                    "queriesLeft": 99180,
                    "recordsFound": 1
                  },
                  "query": {
                    "requestUUID": "e6c58169-e798-4d67-b090-694bf753abe8",
                    "symbols": "SPX"
                  },
                  "data": [
                    {
                      "symbol": "SPX",
                      "askPrice": 4819.03,
                      "bidSize": 0,
                      "openPrice": 4703.96,
                      "bidPrice": 4664.16,
                      "lowPrice": 4703.96,
                      "stockId": 9327,
                      "highPrice": 4740.74,
                      "askSize": 0,
                      "dumpTimestamp": "2021-12-23T16:12:32.0000-0500",
                      "officialClose": 4725.79,
                      "lastPrice": 4725.79,
                      "timestamp": "2021-12-23T16:10:41.1470-0500"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/futures/single-futures": {
      "get": {
        "tags": [
          "ㅤEOD Futures"
        ],
        "description": "Retrieves EOD single future data, including National Best Bid and Offer (NBBO), OHLC, open interest (OI), volume, and expiration date. The NBBO is sourced from all exchanges. \n<br>Futures data for the Canadian market is **not** available.\n| Example Request | http://restapi.ivolatility.com/futures/single-futures?username=your_IVol_username&password=your_IVol_password&symbol=ES/22H.CM&from=2022-01-01&to=2022-03-31 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/futures/single-futures')\nmarketData = getMarketData(symbol='ES/22H.CM', from_='2022-01-01', to='2022-03-31')\n```\n\n",
        "operationId": "EOD Single Futures Contract",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Full future's ticker. Ex: ES/22H.CM",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                },
                "example": {
                  "status": {
                    "executionTime": null,
                    "recordsFound": 1,
                    "code": null,
                    "urlForDetails": null,
                    "queriesLeftEOD": 10,
                    "queriesLeftIntraday": 400
                  },
                  "query": null,
                  "data": [
                    {
                      "date": "2021-12-20",
                      "symbol": "ES",
                      "Future symbol": "ES/22H.CM",
                      "exchange": "CME",
                      "Future expiration": "2022-03-18",
                      "bid": 4569.25,
                      "ask": 4569.5,
                      "Open price": 4612.0,
                      "High price": 4621.5,
                      "Low price": 4520.25,
                      "Close price": 4558.5,
                      "volume": 2027645,
                      "Open interest": 2246488
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/futures/single-future-option": {
      "get": {
        "tags": [
          "ㅤEOD Futures Options"
        ],
        "description": "Retrieves EOD single futures option data, including National Best Bid and Offer (NBBO), OHLC, open interest (OI), volume, and expiration date. The NBBO is sourced from all exchanges.\n\n* Bid/ask prices<sup>1</sup> for US data start from 5/22/2014\n* European data - from 4/19/2011;\n* Asian data, including ASX and HKEX – from 6/12/2013, NSX – from 4/24/2016, OSE/TSE – from 7/18/2016.\n\nFutures options data for the Canadian market is **not** available.\n<p><sup>1</sup> The most recent bid/ask prices just before market close. If there were no updates to bid/ask prices before the close, these prices are not recorded and cleared by the exchange.\n\n| Example Request | http://restapi.ivolatility.com/futures/single-future-option?username=your_IVol_username&password=your_IVol_password&symbol=E2A/22M/39250000P.CMG&from=2022-05-10&to=2022-05-10 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/futures/single-future-option')\nmarketData = getMarketData(symbol='E2A/22M/39250000P.CMG', from_='2022-05-10', to='2022-05-10')\n```\n\n",
        "operationId": "EOD Single Futures Option",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Futures option ticker. Ex: E2A/22M/39250000P.CMG",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                },
                "example": {
                  "status": {
                    "executionTime": null,
                    "recordsFound": 1,
                    "code": null,
                    "urlForDetails": null,
                    "queriesLeftEOD": 10,
                    "queriesLeftIntraday": 400
                  },
                  "query": null,
                  "data": [
                    {
                      "date": "2021-12-22",
                      "symbol": "ES",
                      "option root symbol": "E5C",
                      "Future symbol": "ES/22H.CM",
                      "exchange": "CME",
                      "Future expiration": "2022-03-18",
                      "Adjusted close": 4686.0,
                      "expiration": "12/29/2021",
                      "strike": 4555.0,
                      "Call/Put": "P",
                      "style": "E",
                      "ask": 4.05,
                      "bid": 3.75,
                      "Settlement price": 3.85,
                      "volume": 284,
                      "Open interest": 248
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/futures/rt/single-fut-opt-rawiv": {
      "get": {
        "tags": [
          "ㅤRT Futures Options"
        ],
        "description": "Retrieves realtime futures option data, including National Best Bid and Offer (NBBO), open interest (OI), volume, implied volatility (IV), and greeks. The NBBO is sourced from all exchanges. \n\n| Example Request | http://restapi.ivolatility.com/futures/rt/single-fut-opt-rawiv?username=your_IVol_username&password=your_IVol_password&optionSymbol=CL/22V/5000C.NXG,ES/26Z/44000000C.CMG | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/futures/rt/single-fut-opt-rawiv')\nmarketData = getMarketData(optionSymbol='CL/22V/5000C.NXG,ES/26Z/44000000C.CMG')\n```\n\n",
        "operationId": "RT Single Futures Option Contract",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optionSymbol",
            "in": "query",
            "description": "Comma-separated list of futures options, including year/month/option type (call/put)/expiration. Ex: CL/22V/5000C.NXG,CL/22V/5000P.NXG,ES/26Z/44000000C.CMG",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                },
                "example": {
                  "status": {
                    "code": "DONE",
                    "recordsFound": 2
                  },
                  "query": {
                    "requestUUID": null
                  },
                  "data": [
                    {
                      "dateHighLifeTime": "1899-12-30T00:00:00.0000-0500",
                      "underlyingPrice": 88.6,
                      "dateLowLifeTime": "1899-12-30T00:00:00.0000-0500",
                      "openInterest": 0,
                      "delta": 0.9999951,
                      "type": "C",
                      "theta": 0,
                      "priceHigh": 0,
                      "priceLowLifeTime": 0,
                      "futureSymbol": "CL/22V.NXG",
                      "settlement": 0,
                      "askExchange": "",
                      "priceLow": 0,
                      "priceClose": 0,
                      "lastExchange": "",
                      "optionSymbol": "CL/22V/5000C.NXG",
                      "bidExchange": "",
                      "askSize": 1,
                      "expirationDate": "2022-09-15T00:00:00.0000-0400",
                      "lastDate": "1899-12-30T00:00:00.0000-0500",
                      "timestamp": "2022-09-15T03:20:12.6360-0400",
                      "askPrice": 88.46,
                      "cumulativePrice": 0,
                      "bidSize": 1,
                      "strike": 0.5,
                      "settlementDate": "1899-12-30T00:00:00.0000-0500",
                      "iv": 2.4296932,
                      "bidPrice": 87.5,
                      "preIv": -1,
                      "volume": 0,
                      "priceHighLifeTime": 0,
                      "lastSize": 0,
                      "rho": 0,
                      "style": "A",
                      "bidDate": "2022-09-15T03:18:39.0000-0400",
                      "askDate": "2022-09-15T03:18:39.0000-0400",
                      "futureRootSymbol": "CL",
                      "open": 0,
                      "vega": 0,
                      "gamma": 0,
                      "cumulativeValue": 0,
                      "lastPrice": 0
                    },
                    {
                      "dateHighLifeTime": "1899-12-30T00:00:00.0000-0500",
                      "underlyingPrice": 4391,
                      "dateLowLifeTime": "1899-12-30T00:00:00.0000-0500",
                      "openInterest": 1,
                      "delta": 0.582856,
                      "type": "C",
                      "theta": -0.1967607,
                      "priceHigh": 0,
                      "priceLowLifeTime": 0,
                      "futureSymbol": "ES/26Z.CMG",
                      "settlement": 699,
                      "askExchange": "*",
                      "priceLow": 0,
                      "priceClose": 699,
                      "lastExchange": "",
                      "optionSymbol": "ES/26Z/44000000C.CMG",
                      "bidExchange": "*",
                      "askSize": 0,
                      "expirationDate": "2026-12-18T00:00:00.0000-0500",
                      "lastDate": "1899-12-30T00:00:00.0000-0500",
                      "timestamp": "2022-09-15T00:02:33.1950-0400",
                      "askPrice": 0,
                      "cumulativePrice": 0,
                      "bidSize": 0,
                      "strike": 4400,
                      "settlementDate": "2022-09-14T18:30:00.0000-0400",
                      "iv": 0.207283,
                      "bidPrice": 0,
                      "preIv": 0.207283,
                      "volume": 0,
                      "priceHighLifeTime": 0,
                      "lastSize": 0,
                      "rho": 0,
                      "style": "A",
                      "bidDate": "1899-12-30T00:00:00.0000-0500",
                      "askDate": "1899-12-30T00:00:00.0000-0500",
                      "futureRootSymbol": "ES",
                      "open": 0,
                      "vega": 33.411427,
                      "gamma": 2.1997266E-4,
                      "cumulativeValue": 0,
                      "lastPrice": 0
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/futures/rt/fut-prices": {
      "get": {
        "tags": [
          "ㅤRT Futures"
        ],
        "description": "Retrieves realtime futures chain data for the provided future's root symbol, including National Best Bid and Offer (NBBO), OHLC, open interest (OI), volume, and expiration date. The NBBO is sourced from all exchanges. \n\n| Example Request | http://restapi.ivolatility.com/futures/rt/fut-prices?username=your_IVol_username&password=your_IVol_password&rootSymbol=KRW <br>OR <br>http://restapi.ivolatility.com/futures/rt/fut-prices?username=your_IVol_username&password=your_IVol_password&rootSymbol=KRW&expDate=2022-10-17 <br>OR <br>http://restapi.ivolatility.com/futures/rt/fut-prices?username=your_IVol_username&password=your_IVol_password&futureSymbols=KRW/22V.CMG,KRW/23G.CMG| \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/futures/rt/fut-prices')\nmarketData = getMarketData(rootSymbol='KRW')\n#OR:\nmarketData = getMarketData(rootSymbol='KRW', expDate='2022-10-17')\n#OR:\nmarketData = getMarketData(futureSymbols='KRW/22V.CMG,KRW/23G.CMG')\n```\n\n",
        "operationId": "RT Futures Prices",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rootSymbol",
            "in": "query",
            "description": "Future's root symbol. Ex: KRW <br>Note: <code>rootSymbol</code> overrides <code>futureSymbols</code> <br>Please see examples above for forming a correct query.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "futureSymbols",
            "in": "query",
            "description": "Comma-separated list of future's tickers, including year+month expiration. Ex: KRW/22V.CMG,KRW/23G.CMG <br>Note: <code>rootSymbol</code> overrides <code>futureSymbols</code> <br>Please see examples above for forming a correct query.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expDate",
            "in": "query",
            "description": "Future's expiration date, expressed in yyyy-mm-dd format..",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                },
                "example": {
                  "status": {
                    "executionTime": 83,
                    "recordsFound": 2,
                    "code": "DONE"
                  },
                  "query": {
                    "requestUUID": "62cf9737-db68-45b7-999e-a847ec1b5270",
                    "futureSymbols": "KRW/22V.CMG,KRW/23G.CMG",
                    "futExpDateFrom": "2022-09-15",
                    "futExpDateTo": "2050-01-01"
                  },
                  "data": [
                    {
                      "futureSymbol": "KRW/23G.CMG",
                      "futureRootSymbol": "KRW",
                      "expirationDate": "2023-02-13T00:00:00.0000-0500",
                      "settlementDate": "2022-09-14T18:30:00.0000-0400",
                      "priceBid": 0.0,
                      "priceAsk": 0.0,
                      "priceLast": 7.218E-4,
                      "dateBid": "2022-09-15T00:15:00.0000-0400",
                      "dateAsk": "2022-09-15T00:15:00.0000-0400",
                      "dateLast": "1899-12-30T00:00:00.0000-0500",
                      "sizeBid": 0,
                      "sizeAsk": 0,
                      "sizeLast": 0,
                      "exchangeBid": "*",
                      "exchangeAsk": "*",
                      "exchangeLast": "*",
                      "volume": 0,
                      "settlement": 7.218E-4,
                      "open": 0.0,
                      "openInterest": 0,
                      "priceClose": 7.218E-4,
                      "priceHigh": 0.0,
                      "priceLow": 0.0,
                      "priceHigh52Wk": 0.0,
                      "dateHigh52Wk": "1899-12-30T00:00:00.0000-0500",
                      "priceLow52Wk": 0.0,
                      "dateLow52Wk": "1899-12-30T00:00:00.0000-0500",
                      "cumulativeValue": 0.0,
                      "cumulativePrice": 0.0,
                      "timestamp": "2022-09-15T00:15:16.2410-0400"
                    },
                    {
                      "futureSymbol": "KRW/22V.CMG",
                      "futureRootSymbol": "KRW",
                      "expirationDate": "2022-10-17T00:00:00.0000-0400",
                      "settlementDate": "2022-09-14T18:31:00.0000-0400",
                      "priceBid": 7.175E-4,
                      "priceAsk": 7.179E-4,
                      "priceLast": 7.177E-4,
                      "dateBid": "2022-09-15T02:22:57.0000-0400",
                      "dateAsk": "2022-09-15T02:22:51.0000-0400",
                      "dateLast": "2022-09-14T21:11:01.0000-0400",
                      "sizeBid": 10,
                      "sizeAsk": 10,
                      "sizeLast": 1,
                      "exchangeBid": "*",
                      "exchangeAsk": "*",
                      "exchangeLast": "*",
                      "volume": 1,
                      "settlement": 7.19E-4,
                      "open": 7.177E-4,
                      "openInterest": 18,
                      "priceClose": 7.19E-4,
                      "priceHigh": 7.177E-4,
                      "priceLow": 7.177E-4,
                      "priceHigh52Wk": 0.0,
                      "dateHigh52Wk": "1899-12-30T00:00:00.0000-0500",
                      "priceLow52Wk": 7.177E-4,
                      "dateLow52Wk": "1899-12-30T00:00:00.0000-0500",
                      "cumulativeValue": 7.177E-4,
                      "cumulativePrice": 7.177E-4,
                      "timestamp": "2022-09-15T03:23:08.8760-0400"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/futures/rt/fut-opt-rawiv": {
      "get": {
        "tags": [
          "ㅤRT Futures Options"
        ],
        "description": "Retrieves realtime futures options chain for the provided future's symbol, including National Best Bid and Offer (NBBO), OHLC, open interest (OI), volume, expiration date, and greeks. \n<br>Query filters include option type, expiration date, and moneyness of the futures options. \n\n| Example Request | http://restapi.ivolatility.com/futures/rt/fut-opt-rawiv?username=your_IVol_username&password=your_IVol_password&futureSymbol=CL/22V.NXG&optExpDate=2022-09-15&moneyness=ATM&optType=ALL | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/futures/rt/fut-opt-rawiv')\nmarketData = getMarketData(futureSymbol='CL/22V.NXG', optExpDate='2022-09-15', moneyness='ATM', optType='ALL')\n```\n\n",
        "operationId": "RT Futures Options Raw IV",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "futureSymbol",
            "in": "query",
            "description": "Full future's ticker with year+month expiration. Ex: KRW/22F.CMG",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optExpDate",
            "in": "query",
            "description": "Future option's expiration date, expressed in yyyy-mm-dd format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moneyness",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "DEEP_OTM",
                "OTM",
                "ATM",
                "ITM",
                "DEEP_ITM"
              ]
            }
          },
          {
            "name": "optType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "CALL",
                "PUT",
                "ALL"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                },
                "example": {
                  "status": {
                    "executionTime": 60,
                    "recordsFound": 108,
                    "code": "DONE"
                  },
                  "query": {
                    "requestUUID": "1c7dc23e-8966-4424-bae2-436c3a700905",
                    "futureSymbol": "KRW/22F.CMG",
                    "optExpDateFrom": "2021-12-27",
                    "optExpDateTo": "2050-01-01",
                    "strikeFrom": "7.95E-4",
                    "strikeTo": "9.25E-4",
                    "ocp": "C"
                  },
                  "data": [
                    {
                      "futureRootSymbol": "CL",
                      "futureSymbol": "CL/22V.NXG",
                      "optionSymbol": "CL/22V/9200C.NX",
                      "expirationDate": "2022-09-15T00:00:00.0000-0400",
                      "strike": 92.0,
                      "type": "C",
                      "style": "A",
                      "openInterest": 0,
                      "priceClose": 1.76,
                      "open": 0.0,
                      "underlyingPrice": 67.63,
                      "bidPrice": 0.0,
                      "askPrice": 0.0,
                      "lastPrice": 0.0,
                      "bidDate": "1899-12-30T00:00:00.0000-0500",
                      "askDate": "1899-12-30T00:00:00.0000-0500",
                      "lastDate": "1899-12-30T00:00:00.0000-0500",
                      "bidSize": 0,
                      "askSize": 0,
                      "lastSize": 0,
                      "bidExchange": "*",
                      "askExchange": "*",
                      "lastExchange": "",
                      "volume": 0,
                      "vega": 0.17772487,
                      "priceHigh": 0.0,
                      "priceLow": 0.0,
                      "timestamp": "2021-09-27T00:03:08.7360-0400"
                    },
                    {
                      "futureRootSymbol": "CL",
                      "futureSymbol": "CL/22V.NXG",
                      "optionSymbol": "CL/22V/8450P.NX",
                      "expirationDate": "2022-09-15T00:00:00.0000-0400",
                      "strike": 84.5,
                      "type": "P",
                      "style": "A",
                      "openInterest": 0,
                      "priceClose": 19.72,
                      "open": 0.0,
                      "underlyingPrice": 67.63,
                      "bidPrice": 0.0,
                      "askPrice": 0.0,
                      "lastPrice": 0.0,
                      "bidDate": "1899-12-30T00:00:00.0000-0500",
                      "askDate": "1899-12-30T00:00:00.0000-0500",
                      "lastDate": "1899-12-30T00:00:00.0000-0500",
                      "bidSize": 0,
                      "askSize": 0,
                      "lastSize": 0,
                      "bidExchange": "*",
                      "askExchange": "*",
                      "lastExchange": "",
                      "volume": 0,
                      "vega": 0.22181828,
                      "priceHigh": 0.0,
                      "priceLow": 0.0,
                      "timestamp": "2021-09-27T00:03:08.7360-0400"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/futures/prices": {
      "get": {
        "tags": [
          "Realtime"
        ],
        "description": "Retrieves realtime futures chain data for the provided future's root symbol, including National Best Bid and Offer (NBBO), OHLC, open interest (OI), volume, and expiration date. The NBBO is sourced from all exchanges. \n\n| Example Request | http://restapi.ivolatility.com/futures/prices?username=your_IVol_username&password=your_IVol_password&rootSymbol=KRW <br>OR <br>http://restapi.ivolatility.com/futures/prices?username=your_IVol_username&password=your_IVol_password&rootSymbol=KRW&expDate=2022-10-17 <br>OR <br>http://restapi.ivolatility.com/futures/prices?username=your_IVol_username&password=your_IVol_password&futureSymbols=KRW/22V.CMG,KRW/23G.CMG| \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/futures/prices')\nmarketData = getMarketData(rootSymbol='KRW')\n#OR:\nmarketData = getMarketData(rootSymbol='KRW', expDate='2022-10-17')\n#OR:\nmarketData = getMarketData(futureSymbols='KRW/22V.CMG,KRW/23G.CMG')\n```\n\n",
        "operationId": "Futures Prices (Realtime)",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rootSymbol",
            "in": "query",
            "description": "Future's root symbol. Ex: KRW <br>Note: <code>rootSymbol</code> overrides <code>futureSymbols</code> <br>Please see examples above for forming a correct query.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "futureSymbols",
            "in": "query",
            "description": "Comma-separated list of future's tickers, including year+month expiration. Ex: KRW/22V.CMG,KRW/23G.CMG <br>Note: <code>rootSymbol</code> overrides <code>futureSymbols</code> <br>Please see examples above for forming a correct query.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expDate",
            "in": "query",
            "description": "Future's expiration date, expressed in yyyy-mm-dd format..",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                },
                "example": {
                  "status": {
                    "executionTime": 83,
                    "recordsFound": 2,
                    "code": "DONE"
                  },
                  "query": {
                    "requestUUID": "62cf9737-db68-45b7-999e-a847ec1b5270",
                    "futureSymbols": "KRW/22V.CMG,KRW/23G.CMG",
                    "futExpDateFrom": "2022-09-15",
                    "futExpDateTo": "2050-01-01"
                  },
                  "data": [
                    {
                      "futureSymbol": "KRW/23G.CMG",
                      "futureRootSymbol": "KRW",
                      "expirationDate": "2023-02-13T00:00:00.0000-0500",
                      "settlementDate": "2022-09-14T18:30:00.0000-0400",
                      "priceBid": 0.0,
                      "priceAsk": 0.0,
                      "priceLast": 7.218E-4,
                      "dateBid": "2022-09-15T00:15:00.0000-0400",
                      "dateAsk": "2022-09-15T00:15:00.0000-0400",
                      "dateLast": "1899-12-30T00:00:00.0000-0500",
                      "sizeBid": 0,
                      "sizeAsk": 0,
                      "sizeLast": 0,
                      "exchangeBid": "*",
                      "exchangeAsk": "*",
                      "exchangeLast": "*",
                      "volume": 0,
                      "settlement": 7.218E-4,
                      "open": 0.0,
                      "openInterest": 0,
                      "priceClose": 7.218E-4,
                      "priceHigh": 0.0,
                      "priceLow": 0.0,
                      "priceHigh52Wk": 0.0,
                      "dateHigh52Wk": "1899-12-30T00:00:00.0000-0500",
                      "priceLow52Wk": 0.0,
                      "dateLow52Wk": "1899-12-30T00:00:00.0000-0500",
                      "cumulativeValue": 0.0,
                      "cumulativePrice": 0.0,
                      "timestamp": "2022-09-15T00:15:16.2410-0400"
                    },
                    {
                      "futureSymbol": "KRW/22V.CMG",
                      "futureRootSymbol": "KRW",
                      "expirationDate": "2022-10-17T00:00:00.0000-0400",
                      "settlementDate": "2022-09-14T18:31:00.0000-0400",
                      "priceBid": 7.175E-4,
                      "priceAsk": 7.179E-4,
                      "priceLast": 7.177E-4,
                      "dateBid": "2022-09-15T02:22:57.0000-0400",
                      "dateAsk": "2022-09-15T02:22:51.0000-0400",
                      "dateLast": "2022-09-14T21:11:01.0000-0400",
                      "sizeBid": 10,
                      "sizeAsk": 10,
                      "sizeLast": 1,
                      "exchangeBid": "*",
                      "exchangeAsk": "*",
                      "exchangeLast": "*",
                      "volume": 1,
                      "settlement": 7.19E-4,
                      "open": 7.177E-4,
                      "openInterest": 18,
                      "priceClose": 7.19E-4,
                      "priceHigh": 7.177E-4,
                      "priceLow": 7.177E-4,
                      "priceHigh52Wk": 0.0,
                      "dateHigh52Wk": "1899-12-30T00:00:00.0000-0500",
                      "priceLow52Wk": 7.177E-4,
                      "dateLow52Wk": "1899-12-30T00:00:00.0000-0500",
                      "cumulativeValue": 7.177E-4,
                      "cumulativePrice": 7.177E-4,
                      "timestamp": "2022-09-15T03:23:08.8760-0400"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/futures/prices/options": {
      "get": {
        "tags": [
          "Realtime"
        ],
        "description": "Retrieves realtime futures option data, including National Best Bid and Offer (NBBO), open interest (OI), volume, implied volatility (IV), and greeks. The NBBO is sourced from all exchanges. \n\n| Example Request | http://restapi.ivolatility.com/futures/prices/options?username=your_IVol_username&password=your_IVol_password&optionSymbol=CL/22V/5000C.NXG,ES/26Z/44000000C.CMG | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/futures/prices/options')\nmarketData = getMarketData(optionSymbol='CL/22V/5000C.NXG,ES/26Z/44000000C.CMG')\n```\n\n",
        "operationId": "Single Futures Option Contract",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optionSymbol",
            "in": "query",
            "description": "Comma-separated list of futures options, including year/month/option type (call/put)/expiration. Ex: CL/22V/5000C.NXG,CL/22V/5000P.NXG,ES/26Z/44000000C.CMG",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                },
                "example": {
                  "status": {
                    "code": "DONE",
                    "recordsFound": 2
                  },
                  "query": {
                    "requestUUID": null
                  },
                  "data": [
                    {
                      "dateHighLifeTime": "1899-12-30T00:00:00.0000-0500",
                      "underlyingPrice": 88.6,
                      "dateLowLifeTime": "1899-12-30T00:00:00.0000-0500",
                      "openInterest": 0,
                      "delta": 0.9999951,
                      "type": "C",
                      "theta": 0,
                      "priceHigh": 0,
                      "priceLowLifeTime": 0,
                      "futureSymbol": "CL/22V.NXG",
                      "settlement": 0,
                      "askExchange": "",
                      "priceLow": 0,
                      "priceClose": 0,
                      "lastExchange": "",
                      "optionSymbol": "CL/22V/5000C.NXG",
                      "bidExchange": "",
                      "askSize": 1,
                      "expirationDate": "2022-09-15T00:00:00.0000-0400",
                      "lastDate": "1899-12-30T00:00:00.0000-0500",
                      "timestamp": "2022-09-15T03:20:12.6360-0400",
                      "askPrice": 88.46,
                      "cumulativePrice": 0,
                      "bidSize": 1,
                      "strike": 0.5,
                      "settlementDate": "1899-12-30T00:00:00.0000-0500",
                      "iv": 2.4296932,
                      "bidPrice": 87.5,
                      "preIv": -1,
                      "volume": 0,
                      "priceHighLifeTime": 0,
                      "lastSize": 0,
                      "rho": 0,
                      "style": "A",
                      "bidDate": "2022-09-15T03:18:39.0000-0400",
                      "askDate": "2022-09-15T03:18:39.0000-0400",
                      "futureRootSymbol": "CL",
                      "open": 0,
                      "vega": 0,
                      "gamma": 0,
                      "cumulativeValue": 0,
                      "lastPrice": 0
                    },
                    {
                      "dateHighLifeTime": "1899-12-30T00:00:00.0000-0500",
                      "underlyingPrice": 4391,
                      "dateLowLifeTime": "1899-12-30T00:00:00.0000-0500",
                      "openInterest": 1,
                      "delta": 0.582856,
                      "type": "C",
                      "theta": -0.1967607,
                      "priceHigh": 0,
                      "priceLowLifeTime": 0,
                      "futureSymbol": "ES/26Z.CMG",
                      "settlement": 699,
                      "askExchange": "*",
                      "priceLow": 0,
                      "priceClose": 699,
                      "lastExchange": "",
                      "optionSymbol": "ES/26Z/44000000C.CMG",
                      "bidExchange": "*",
                      "askSize": 0,
                      "expirationDate": "2026-12-18T00:00:00.0000-0500",
                      "lastDate": "1899-12-30T00:00:00.0000-0500",
                      "timestamp": "2022-09-15T00:02:33.1950-0400",
                      "askPrice": 0,
                      "cumulativePrice": 0,
                      "bidSize": 0,
                      "strike": 4400,
                      "settlementDate": "2022-09-14T18:30:00.0000-0400",
                      "iv": 0.207283,
                      "bidPrice": 0,
                      "preIv": 0.207283,
                      "volume": 0,
                      "priceHighLifeTime": 0,
                      "lastSize": 0,
                      "rho": 0,
                      "style": "A",
                      "bidDate": "1899-12-30T00:00:00.0000-0500",
                      "askDate": "1899-12-30T00:00:00.0000-0500",
                      "futureRootSymbol": "ES",
                      "open": 0,
                      "vega": 33.411427,
                      "gamma": 2.1997266E-4,
                      "cumulativeValue": 0,
                      "lastPrice": 0
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/futures/options": {
      "get": {
        "tags": [
          "Realtime"
        ],
        "description": "Retrieves realtime futures options chain for the provided future's symbol, including National Best Bid and Offer (NBBO), OHLC, open interest (OI), volume, expiration date, and greeks. \n<br>Query filters include option type, expiration date, and moneyness of the futures options. \n\n| Example Request | http://restapi.ivolatility.com/futures/options?username=your_IVol_username&password=your_IVol_password&futureSymbol=CL/22V.NXG&optExpDate=2022-09-15&moneyness=ATM&optType=ALL | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/futures/options')\nmarketData = getMarketData(futureSymbol='CL/22V.NXG', optExpDate='2022-09-15', moneyness='ATM', optType='ALL')\n```\n\n",
        "operationId": "Futures Options",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "futureSymbol",
            "in": "query",
            "description": "Full future's ticker with year+month expiration. Ex: KRW/22F.CMG",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optExpDate",
            "in": "query",
            "description": "Future option's expiration date, expressed in yyyy-mm-dd format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "moneyness",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "DEEP_OTM",
                "OTM",
                "ATM",
                "ITM",
                "DEEP_ITM"
              ]
            }
          },
          {
            "name": "optType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "CALL",
                "PUT",
                "ALL"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                },
                "example": {
                  "status": {
                    "executionTime": 60,
                    "recordsFound": 108,
                    "code": "DONE"
                  },
                  "query": {
                    "requestUUID": "1c7dc23e-8966-4424-bae2-436c3a700905",
                    "futureSymbol": "KRW/22F.CMG",
                    "optExpDateFrom": "2021-12-27",
                    "optExpDateTo": "2050-01-01",
                    "strikeFrom": "7.95E-4",
                    "strikeTo": "9.25E-4",
                    "ocp": "C"
                  },
                  "data": [
                    {
                      "futureRootSymbol": "CL",
                      "futureSymbol": "CL/22V.NXG",
                      "optionSymbol": "CL/22V/9200C.NX",
                      "expirationDate": "2022-09-15T00:00:00.0000-0400",
                      "strike": 92.0,
                      "type": "C",
                      "style": "A",
                      "openInterest": 0,
                      "priceClose": 1.76,
                      "open": 0.0,
                      "underlyingPrice": 67.63,
                      "bidPrice": 0.0,
                      "askPrice": 0.0,
                      "lastPrice": 0.0,
                      "bidDate": "1899-12-30T00:00:00.0000-0500",
                      "askDate": "1899-12-30T00:00:00.0000-0500",
                      "lastDate": "1899-12-30T00:00:00.0000-0500",
                      "bidSize": 0,
                      "askSize": 0,
                      "lastSize": 0,
                      "bidExchange": "*",
                      "askExchange": "*",
                      "lastExchange": "",
                      "volume": 0,
                      "vega": 0.17772487,
                      "priceHigh": 0.0,
                      "priceLow": 0.0,
                      "timestamp": "2021-09-27T00:03:08.7360-0400"
                    },
                    {
                      "futureRootSymbol": "CL",
                      "futureSymbol": "CL/22V.NXG",
                      "optionSymbol": "CL/22V/8450P.NX",
                      "expirationDate": "2022-09-15T00:00:00.0000-0400",
                      "strike": 84.5,
                      "type": "P",
                      "style": "A",
                      "openInterest": 0,
                      "priceClose": 19.72,
                      "open": 0.0,
                      "underlyingPrice": 67.63,
                      "bidPrice": 0.0,
                      "askPrice": 0.0,
                      "lastPrice": 0.0,
                      "bidDate": "1899-12-30T00:00:00.0000-0500",
                      "askDate": "1899-12-30T00:00:00.0000-0500",
                      "lastDate": "1899-12-30T00:00:00.0000-0500",
                      "bidSize": 0,
                      "askSize": 0,
                      "lastSize": 0,
                      "bidExchange": "*",
                      "askExchange": "*",
                      "lastExchange": "",
                      "volume": 0,
                      "vega": 0.22181828,
                      "priceHigh": 0.0,
                      "priceLow": 0.0,
                      "timestamp": "2021-09-27T00:03:08.7360-0400"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/futures/market-structure": {
      "get": {
        "tags": [
          "Realtime"
        ],
        "description": "Retrieves futures options chain data for the provided underlying future.\n\n| Example Request | http://restapi.ivolatility.com/futures/market-structure?username=your_IVol_username&password=your_IVol_password&futureSymbol=KRW/22V.CMG | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/futures/market-structure')\nmarketData = getMarketData(futureSymbol='KRW/22V.CMG')\n```\n\n",
        "operationId": "Futures Options Chain",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "futureSymbol",
            "in": "query",
            "description": "Full future's ticker with year+month expiration. Ex: KRW/22F.CMG",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                },
                "example": {
                  "status": {
                    "executionTime": 27,
                    "code": "DONE",
                    "recordsFound": 344
                  },
                  "query": {
                    "strikeTo": "1000000",
                    "requestUUID": "d88f1e65-6a02-4404-b80b-6da6263c4c6a",
                    "strikeFrom": "0",
                    "optExpDateTo": "2050-01-01",
                    "futureSymbol": "KRW/22V.CMG",
                    "optExpDateFrom": "2022-09-15"
                  },
                  "data": [
                    {
                      "optionSymbol": "KRW/22V/7900000000C.CMG",
                      "strike": 7.9E-4,
                      "style": "E",
                      "type": "C",
                      "futureSymbol": "KRW/22V.CMG",
                      "futureRootSymbol": "KRW",
                      "expirationDate": "2022-10-17T00:00:00.0000-0400"
                    },
                    {
                      "optionSymbol": "KRW4/22U/8000000000P.CMG",
                      "strike": 8.0E-4,
                      "style": "E",
                      "type": "P",
                      "futureSymbol": "KRW/22V.CMG",
                      "futureRootSymbol": "KRW",
                      "expirationDate": "2022-09-23T00:00:00.0000-0400"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/futures/fut-opt-market-structure": {
      "get": {
        "tags": [
          "ㅤRT Futures Options"
        ],
        "description": "Retrieves futures options chain data for the provided underlying future.\n\n| Example Request | http://restapi.ivolatility.com/futures/fut-opt-market-structure?username=your_IVol_username&password=your_IVol_password&futureSymbol=KRW/22V.CMG | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/futures/fut-opt-market-structure')\nmarketData = getMarketData(futureSymbol='KRW/22V.CMG')\n```\n\n",
        "operationId": "RT Futures Options Chain",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "futureSymbol",
            "in": "query",
            "description": "Full future's ticker with year+month expiration. Ex: KRW/22F.CMG",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                },
                "example": {
                  "status": {
                    "executionTime": 27,
                    "code": "DONE",
                    "recordsFound": 344
                  },
                  "query": {
                    "strikeTo": "1000000",
                    "requestUUID": "d88f1e65-6a02-4404-b80b-6da6263c4c6a",
                    "strikeFrom": "0",
                    "optExpDateTo": "2050-01-01",
                    "futureSymbol": "KRW/22V.CMG",
                    "optExpDateFrom": "2022-09-15"
                  },
                  "data": [
                    {
                      "optionSymbol": "KRW/22V/7900000000C.CMG",
                      "strike": 7.9E-4,
                      "style": "E",
                      "type": "C",
                      "futureSymbol": "KRW/22V.CMG",
                      "futureRootSymbol": "KRW",
                      "expirationDate": "2022-10-17T00:00:00.0000-0400"
                    },
                    {
                      "optionSymbol": "KRW4/22U/8000000000P.CMG",
                      "strike": 8.0E-4,
                      "style": "E",
                      "type": "P",
                      "futureSymbol": "KRW/22V.CMG",
                      "futureRootSymbol": "KRW",
                      "expirationDate": "2022-09-23T00:00:00.0000-0400"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/futures/eod/prices": {
      "get": {
        "tags": [
          "ㅤEOD Futures"
        ],
        "description": "Retrieves historical EOD futures chain data for the requested future's root symbol on the specified dates. Data includes the National Best Bid and Offer (NBBO), OHLC, open interest (OI), volume, and expiration date. The NBBO is sourced from all exchanges.\n<br>Futures data for the Canadian market is **not** available.\n\n| Example Request | http://restapi.ivolatility.com/futures/eod/prices?username=your_IVol_username&password=your_IVol_password&symbol=ES&date=2021-12-16<br>OR<br>http://restapi.ivolatility.com/futures/eod/prices?username=your_IVol_username&password=your_IVol_password&symbol=ES&from=2021-12-10&to=2021-12-17 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/futures/eod/prices')\nmarketData = getMarketData(symbol='AAPL', date='2021-12-16')\n#OR:\nmarketData = getMarketData(symbol='ES', from_='2021-12-10', to='2021-12-17')\n```\n\n",
        "operationId": "EOD Futures Prices",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Future's ticker. Ex: ES",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Future's region",
            "required": false,
            "schema": {
              "type": "string",
              "default": "USA",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesPrices"
                },
                "example": {
                  "status": {
                    "executionTime": 4884,
                    "recordsFound": 13,
                    "code": "DONE",
                    "urlForDetails": null,
                    "queriesLeftEOD": 10,
                    "queriesLeftIntraday": 400
                  },
                  "query": {
                    "requestUUID": null
                  },
                  "data": [
                    {
                      "date": "2021-12-16 00:00:00",
                      "symbol": "ES",
                      "exchange": "CME",
                      "bid": 4674.25,
                      "ask": 4675.25,
                      "volume": 435986,
                      "record_no": 1,
                      "future_symbol": "ES/21Z.CM",
                      "future_expiration": "2021-12-17 00:00:00",
                      "open_price": 4711.5,
                      "high_price": 4715.25,
                      "low_price": 4651.25,
                      "close_price": 4668.75,
                      "open_interest": 398267
                    },
                    {
                      "date": "2021-12-16 00:00:00",
                      "symbol": "ES",
                      "exchange": "CME",
                      "bid": 4665.0,
                      "ask": 4665.25,
                      "volume": 2151049,
                      "record_no": 2,
                      "future_symbol": "ES/22H.CM",
                      "future_expiration": "2022-03-18 00:00:00",
                      "open_price": 4702.75,
                      "highPrice": null,
                      "low_price": 4642.0,
                      "close_price": 4659.25,
                      "open_interest": 2227532
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesPrices"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesPrices"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesPrices"
                }
              }
            }
          }
        }
      }
    },
    "/futures/eod/options-rawiv": {
      "get": {
        "tags": [
          "ㅤEOD Futures Options"
        ],
        "description": "Retrieves EOD implied volatilities for the requested underlying future's entire options chain on the specified dates. Data also includes the National Best Bid and Offer (NBBO), open interest (OI), implied volatility (IV), and greeks. The NBBO is sourced from all exchanges. \n\n<p>The returned data includes all traded expirations and strikes for the following types of options:</p>\n\n* regular options expired on 3rd Friday/Saturday\n* weeklies\n* quarterlies\n* leaps\n\nNon-standard options, issued after corporate actions, are **not** included in the data.\n\n* Bid/ask prices<sup>1</sup> for US data start from 5/22/2014\n* European data - from 4/19/2011;\n* Asian data, including ASX and HKEX – from 6/12/2013, NSX – from 4/24/2016, OSE/TSE – from 7/18/2016.\n\nFutures options data for the Canadian market is **not** available.\n<p><sup>1</sup> The most recent bid/ask prices just before market close. If there were no updates to bid/ask prices before the close, these prices are not recorded and cleared by the exchange.\n\n| Example Request | http://restapi.ivolatility.com/futures/eod/options-rawiv?username=your_IVol_username&password=your_IVol_password&symbol=ES&date=2021-12-16<br>OR<br>http://restapi.ivolatility.com/futures/eod/options-rawiv?username=your_IVol_username&password=your_IVol_password&symbol=ES&from=2021-12-10&to=2021-12-17 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/futures/eod/options-rawiv')\nmarketData = getMarketData(symbol='ES', date='2021-12-16')\n#OR:\nmarketData = getMarketData(symbol='ES', from_='2021-12-10', to='2021-12-17')\n```\n\n",
        "operationId": "EOD Futures Options Raw IV",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Future's ticker. Ex: ES",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Future's region",
            "required": false,
            "schema": {
              "type": "string",
              "default": "USA",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesRawIv"
                },
                "example": "1,2021-12-16 00:00:00,ES,ES,ES/21Z.CM,CME,2021-12-17 00:00:00,4668.75,12/17/2021,700,C,A,0,0,3968.75,-1,0.5,0,5,1,0,0,0\n2,2021-12-16 00:00:00,ES,ES,ES/21Z.CM,CME,2021-12-17 00:00:00,4668.75,12/17/2021,700,P,A,0.05,0,0.05,-1,0.5,0,11188,0,0,0,0\n"
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesRawIv"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesRawIv"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesRawIv"
                }
              }
            }
          }
        }
      }
    },
    "/futures/eod/options-nbbo": {
      "get": {
        "tags": [
          "ㅤEOD Futures Options"
        ],
        "description": "Retrieves EOD National Best Bid and Offer (NBBO) for the requested underlying future's entire options chain for the specified dates. The NBBO is sourced from all exchanges. \n\n* Bid/ask prices<sup>1</sup> for US data start from 5/22/2014\n* European data - from 4/19/2011;\n* Asian data, including ASX and HKEX – from 6/12/2013, NSX – from 4/24/2016, OSE/TSE – from 7/18/2016.\n\nFutures options data for the Canadian market is **not** available.\n<p><sup>1</sup> The most recent bid/ask prices just before market close. If there were no updates to bid/ask prices before the close, these prices are not recorded and cleared by the exchange.\n\n| Example Request | http://restapi.ivolatility.com/futures/eod/options-nbbo?username=your_IVol_username&password=your_IVol_password&symbol=ES&date=2021-12-16<br>OR<br>http://restapi.ivolatility.com/futures/eod/options-nbbo?username=your_IVol_username&password=your_IVol_password&symbol=ES&from=2021-12-10&to=2021-12-17 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/futures/eod/options-nbbo')\nmarketData = getMarketData(symbol='ES', date='2021-12-16')\n#OR:\nmarketData = getMarketData(symbol='ES', from_='2021-12-10', to='2021-12-17')\n```\n\n",
        "operationId": "EOD Futures Options NBBO",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Future's ticker. Ex: ES",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Future's region",
            "required": false,
            "schema": {
              "type": "string",
              "default": "USA",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesOptnbbo"
                },
                "example": "1,2021-12-16 00:00:00,ES,ES,ES/21Z.CM,CME,2021-12-17 00:00:00,4668.75,12/17/2021,700,C,A,0,0,3968.75,0,5\n2,2021-12-16 00:00:00,ES,ES,ES/21Z.CM,CME,2021-12-17 00:00:00,4668.75,12/17/2021,700,P,A,0.05,0,0.05,0,11188\n"
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesOptnbbo"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesOptnbbo"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesOptnbbo"
                }
              }
            }
          }
        }
      }
    },
    "/futures/eod/ivx": {
      "get": {
        "tags": [
          "ㅤEOD Futures"
        ],
        "description": "Retrieves the Implied Volatility Index (averaged implied volatility) for the requested future's root symbol on the specified dates.\n<p>The IVIndex (IVX) was introduced by IVolatlity&copy; almost 10 years ago. Using raw IV data, the IVX is calculated with a proprietary weighting technique, factoring the Delta and Vega of each option. In total, 8 ATM options (4 calls and 4 puts) are used within each expiration to calculate the Call, Put and Mean Implied Volatility of each stock. The IVIndex is normalized to fixed tenors<sup>1</sup> (7, 14, 21, 30, 60, 90, 120, 150, 180, 270, 360, 720, 1080 days).\n\n<p><sup>1</sup> Note: 7, 14, 21 and 270-day tenors start from 10/10/2019\n\n| Example Request | http://restapi.ivolatility.com/futures/eod/ivx?username=your_IVol_username&password=your_IVol_password&symbol=ES&date=2021-12-16<br>OR<br>http://restapi.ivolatility.com/futures/eod/ivx?username=your_IVol_username&password=your_IVol_password&symbol=ES&from=2021-12-10&to=2021-12-17 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/futures/eod/ivx')\nmarketData = getMarketData(symbol='ES', date='2021-12-16')\n#OR:\nmarketData = getMarketData(symbol='ES', from_='2021-12-10', to='2021-12-17')\n```\n\n",
        "operationId": "EOD Futures IVX",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Future's ticker. Ex: ES",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Future's region",
            "required": false,
            "schema": {
              "type": "string",
              "default": "USA",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesIvx"
                },
                "example": {
                  "status": {
                    "executionTime": 5179,
                    "recordsFound": 1,
                    "code": "DONE",
                    "urlForDetails": null,
                    "queriesLeftEOD": 10,
                    "queriesLeftIntraday": 400
                  },
                  "query": {
                    "requestUUID": null
                  },
                  "data": [
                    {
                      "date": "2021-12-16 00:00:00",
                      "symbol": "ES",
                      "exchange": "CME",
                      "record_no": 1,
                      "30d_iv_call": "0.165966",
                      "30d_iv_put": "0.165966",
                      "30d_iv_mean": "0.165966",
                      "60d_iv_call": "0.176082",
                      "60d_iv_put": "0.176080",
                      "60d_iv_mean": "0.176081",
                      "90d_iv_call": "0.230102",
                      "90d_iv_put": "0.230650",
                      "90d_iv_mean": "0.230376",
                      "120d_iv_call": "0.190328",
                      "120d_iv_put": "0.190332",
                      "120d_iv_mean": "0.190330",
                      "150d_iv_call": "0.194756",
                      "150d_iv_put": "0.194761",
                      "150d_iv_mean": "0.194759",
                      "180d_iv_call": "0.196489",
                      "180d_iv_put": "0.196512",
                      "180d_iv_mean": "0.196501",
                      "270d_iv_call": "0.203128",
                      "270d_iv_put": "0.203141",
                      "270d_iv_mean": "0.203135",
                      "360d_iv_call": "0.204792",
                      "360d_iv_put": "0.204815",
                      "360d_iv_mean": "0.204803",
                      "720d_iv_call": "0.202891",
                      "720d_iv_put": "0.202913",
                      "720d_iv_mean": "0.202902",
                      "1080d_iv_call": "0.202891",
                      "1080d_iv_put": "0.202913",
                      "1080d_iv_mean": "0.202902"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesIvx"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesIvx"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesIvx"
                }
              }
            }
          }
        }
      }
    },
    "/futures/eod/ivs": {
      "get": {
        "tags": [
          "ㅤEOD Futures"
        ],
        "description": "Retrieves the Implied Volatility Surface (normalized by maturities and moneyness) for the requested future's root symbol on the specified dates.\n* Tenors<sup>1</sup>: 7, 14, 21, 30, 60, 90, 120, 150, 180, 270, 360, 720, 1080 days\n* Moneyness: -50% to 0% with 5% step (OTM puts), 0% to 50% with 5% step (OTM calls)\n* Only out-of-the-money options are used for building the Volatility Surface. I.e.:\n    * Puts for virtual strikes 50, 55, 60, ..., 100 % of the current underlying price\n    * Calls for virtual strikes 100, 105, 110, ..., 150 % of the current underlying price\n\n<p><sup>1</sup> Note: 7, 14, 21, 270, 360, 720, 1080-day tenors start from 10/10/2019\n\n| Example Request | http://restapi.ivolatility.com/futures/eod/ivs?username=your_IVol_username&password=your_IVol_password&symbol=ES&date=2021-12-16<br>OR<br>http://restapi.ivolatility.com/futures/eod/ivs?username=your_IVol_username&password=your_IVol_password&symbol=ES&from=2021-12-10&to=2021-12-17 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/futures/eod/ivs')\nmarketData = getMarketData(symbol='ES', date='2021-12-16')\n#OR:\nmarketData = getMarketData(symbol='ES', from_='2021-12-10', to='2021-12-17')\n```\n\n",
        "operationId": "EOD Futures IV Surface",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Future's ticker. Ex: ES",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Future's region",
            "required": false,
            "schema": {
              "type": "string",
              "default": "USA",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesIvs"
                },
                "example": {
                  "status": {
                    "executionTime": 8399,
                    "recordsFound": 234,
                    "code": "DONE",
                    "urlForDetails": null,
                    "queriesLeftEOD": 10,
                    "queriesLeftIntraday": 400
                  },
                  "query": {
                    "requestUUID": null
                  },
                  "data": [
                    {
                      "date": "2021-12-16 00:00:00",
                      "symbol": "ES",
                      "exchange": "CME",
                      "period": 30,
                      "iv": 0.165382,
                      "record_no": 1,
                      "out-of-the-money_%": 0,
                      "call/put": "C"
                    },
                    {
                      "date": "2021-12-16 00:00:00",
                      "symbol": "ES",
                      "exchange": "CME",
                      "period": 30,
                      "iv": 0.165382,
                      "record_no": 2,
                      "out-of-the-money_%": 0,
                      "call/put": "P"
                    },
                    {
                      "date": "2021-12-16 00:00:00",
                      "symbol": "ES",
                      "exchange": "CME",
                      "period": 60,
                      "iv": 0.175252,
                      "record_no": 3,
                      "out-of-the-money_%": 0,
                      "call/put": "C"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesIvs"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesIvs"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesIvs"
                }
              }
            }
          }
        }
      }
    },
    "/futures/eod/hv": {
      "get": {
        "tags": [
          "ㅤEOD Futures"
        ],
        "description": "Retrieves the historical volatility (HV) data for requested future's symbol on the specified dates.\n* Tenors: 5, 10, 20, 40, 60, 80, 100, 120, 180, 250 days\n\n| Example Request | http://restapi.ivolatility.com/futures/eod/hv?username=your_IVol_username&password=your_IVol_password&symbol=ES&date=2021-12-16<br>OR<br>http://restapi.ivolatility.com/futures/eod/hv?username=your_IVol_username&password=your_IVol_password&symbol=ES&from=2021-12-10&to=2021-12-17 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/futures/eod/hv')\nmarketData = getMarketData(symbol='ES', date='2021-12-16')\n#OR:\nmarketData = getMarketData(symbol='ES', from_='2021-12-10', to='2021-12-17')\n```\n\n",
        "operationId": "EOD Futures Historical Volatility",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Future's ticker. Ex: ES",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Future's region",
            "required": false,
            "schema": {
              "type": "string",
              "default": "USA",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesHv"
                },
                "example": {
                  "status": {
                    "executionTime": 350,
                    "recordsFound": 1,
                    "code": "DONE",
                    "urlForDetails": null,
                    "queriesLeftEOD": 10,
                    "queriesLeftIntraday": 400
                  },
                  "query": {
                    "requestUUID": null
                  },
                  "data": [
                    {
                      "date": "2021-12-16 00:00:00",
                      "symbol": "ES",
                      "exchange": "CME",
                      "price": 4659.25,
                      "record_no": 1,
                      "5d_hv": "0.1851",
                      "10d_hv": "0.1751",
                      "20d_hv": "0.1763",
                      "40d_hv": "0.1343",
                      "60d_hv": "0.1372",
                      "80d_hv": "0.1291",
                      "100d_hv": "0.1203",
                      "120d_hv": "0.1187",
                      "180d_hv": "0.1176",
                      "250d_hv": "0.1273"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesHv"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesHv"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesHv"
                }
              }
            }
          }
        }
      }
    },
    "/equities/yield": {
      "get": {
        "tags": [
          "ㅤEOD Equities"
        ],
        "description": "Retrieves 12-month average dividend yield of an equity index; also used in indexes' implied volatility calculations.\n\n| Example Request | http://restapi.ivolatility.com/equities/yield?username=your_IVol_username&password=your_IVol_password&symbol=SPX | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/equities/yield')\nmarketData = getMarketData(symbol='SPX')\n```\n\n",
        "operationId": "EOD Equity Index Dividend Yield",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Index ticker. Ex: SPX",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                },
                "example": {
                  "status": {
                    "executionTime": 105,
                    "recordsFound": 467,
                    "code": "DONE"
                  },
                  "query": {
                    "symbol": "SPX",
                    "token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxODg3ODYiLCJsb2dpbiI6ImR2b3JvbnRzb3YiLCJzdXVpZCI6IjY4Y2IzMjc1LWM4MGQtNDkyNy1iMjIzLTUwNTg0OWExNmIwMSIsImRhdGEiOiI0NT02XG42OT02XG4xMDIwPTdcbjEzMD02XG40NTA9NlxuNDUxPTZcbjExMD02XG4xMjc3PTZcbjc3Nz03XG4xMTc3PTZcbjEwMTI9NlxuOTE9NlxuNzA9NlxuOTI9NlxuOTM9NlxuNTA9N1xuNzE3PTZcbjc3PTZcbjEyPTZcbjEwMTE9NlxuMTA3Nz02XG4xMDEwPTZcbjE0MD02XG4xMjA9NlxuMTAwOD02XG4xMjE9NlxuMTAwPTZcbjEwMDc9NlxuMTEwNT02XG4xMDA2PTZcbjEwMDU9N1xuMTAwND02XG4xNDAwPTdcbjU9NlxuMTMwMD02XG4xMDAzPTZcbjY9N1xuMTAwMj02XG4zNjk9NlxuMTAwMT02XG45MDA9N1xuOT03XG45MDE9NlxuOTAyPTZcbjkwMz02XG40MD02XG4yMD02XG4xMDA5PTYiLCJpYXQiOjE2NDAzNTEzNTAsImV4cCI6MTY0MDM1MzE1MH0.VNdtQkVHUJE2k_wjGOb8LpmTCWLPK2TajXjz4JQnukQ"
                  },
                  "data": [
                    {
                      "calc_date": "2011-04-29",
                      "stock_id": 9327,
                      "t_date": "1989-12-29",
                      "yield": 0.031177
                    },
                    {
                      "calc_date": "2011-04-29",
                      "stock_id": 9327,
                      "t_date": "1990-01-31",
                      "yield": 0.033718
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/equities/underlying-info": {
      "get": {
        "tags": [
          "ㅤEOD Equities"
        ],
        "description": "Retrieves financial instrument's reference information.\n\n| Example Request | http://restapi.ivolatility.com/equities/underlying-info?username=your_IVol_username&password=your_IVol_password&symbol=AAPL | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/equities/underlying-info')\nmarketData = getMarketData(symbol='AAPL')\n```\n\n",
        "operationId": "EOD Equities Info",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity ticker. Ex: AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Equity region",
            "required": false,
            "schema": {
              "type": "string",
              "default": "USA",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                },
                "example": {
                  "status": {
                    "executionTime": 4137,
                    "recordsFound": 1,
                    "code": "DONE"
                  },
                  "query": {
                    "stock_ids": "799",
                    "token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxODg3ODYiLCJsb2dpbiI6ImR2b3JvbnRzb3YiLCJzdXVpZCI6ImM0NDEwY2VkLTRlZmItNDliYi04MDQ5LTg0MjhkZTM0MDcxYSIsImRhdGEiOiI0NT02XG42OT02XG4xMDIwPTdcbjEzMD02XG40NTA9NlxuNDUxPTZcbjExMD02XG4xMjc3PTZcbjc3Nz03XG4xMTc3PTZcbjEwMTI9NlxuOTE9NlxuNzA9NlxuOTI9NlxuOTM9NlxuNTA9N1xuNzE3PTZcbjc3PTZcbjEyPTZcbjEwMTE9NlxuMTA3Nz02XG4xMDEwPTZcbjE0MD02XG4xMjA9NlxuMTAwOD02XG4xMjE9NlxuMTAwPTZcbjEwMDc9NlxuMTEwNT02XG4xMDA2PTZcbjEwMDU9N1xuMTAwND02XG4xNDAwPTdcbjU9NlxuMTMwMD02XG4xMDAzPTZcbjY9N1xuMTAwMj02XG4zNjk9NlxuMTAwMT02XG45MDA9N1xuOT03XG45MDE9NlxuOTAyPTZcbjkwMz02XG40MD02XG4yMD02XG4xMDA5PTYiLCJpYXQiOjE2NDAyNDUyNDYsImV4cCI6MTY0MDI0NzA0Nn0.PhAWjibdNQmXgz5QHQbyIh7AJjNiI2fjasrGa2GizKk"
                  },
                  "data": [
                    {
                      "ccy": "USD",
                      "company_name": "Apple Inc",
                      "dividend_convention": "Discrete dividends",
                      "exchange_code": "NASDAQ",
                      "exchange_name": "NASDAQ Stocks Exchange",
                      "internal_stockid": 799,
                      "isin": "US0378331005",
                      "region": "USA",
                      "stock_ticker": "AAPL",
                      "type": "S"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/equities/rtdl/options-rawiv": {
      "get": {
        "tags": [
          "ㅤLive Equities"
        ],
        "description": "Retrieves equity options data, including National Best Bid and Offer (NBBO), open interest (OI), implied volatility (IV), and greeks. The NBBO is sourced from all exchanges.\n<br>Query filters include expiration dates and strikes. \n<p>The returned data includes all traded expirations and strikes for the following types of options:</p>\n\n* regular options expired on 3rd Friday/Saturday\n* weeklies\n* quarterlies\n* leaps\n\nNon-standard options, issued after corporate actions, are **not** included in the data.\n| Example Request | http://restapi.ivolatility.com/equities/rtdl/options-rawiv?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&strikeMin=100&strikeMax=300&expMin=2022-12-01&expMax=2022-12-31 |\n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/equities/rtdl/options-rawiv')\nmarketData = getMarketData(symbol='AAPL', strikeMin=100, strikeMax=300, expMin='2022-12-01', expMax='2022-12-31')\n```\n\n",
        "operationId": "RTDL Equity Options Extended Filters",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity ticker. Ex: AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "strikeMin",
            "in": "query",
            "description": "The minimum strike price of the options for the requested underlying.",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "strikeMax",
            "in": "query",
            "description": "The maximum strike price of the options for the requested underlying.",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "expMin",
            "in": "query",
            "description": "The minimum expiration date, specified in yyyy-mm-dd format, of the options for the requested underlying.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expMax",
            "in": "query",
            "description": "The maximum expiration date, specified in yyyy-mm-dd format, of the options for the requested underlying.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string"
                },
                "example": "symbol,underlyingPrice,openInterest,delta,forwardPrice,type,theta,cumulativeVolume,askExchange,theoPrice,lastExchange,bidExchange,askSize,expirationDate,lastDate,timestamp,askPrice,bidSize,strike,iv,bidPrice,preIv,impliedYield,volume,lastSize,stockId,rho,style,bidDate,askDate,vega,gamma,lastPrice\nAAPL  211231C00170000,172.99,64012,0.764849,0,C,-0.140682,96552,,0,,,2,\"2021-12-31T00:00:00.0000-0500\",18991230000000,\"2021-12-23T03:02:20.4120-0500\",6.9,22,170,0.297887,6.7,0.297887,,,,799,0.031408,A,20211222160000,20211222160000,0.08473,0.037441,0\nAAPL  211231P00170000,172.99,25599,-0.234188,0,P,-0.139344,30110,,0,,,31,\"2021-12-31T00:00:00.0000-0500\",18991230000000,\"2021-12-23T03:02:20.4120-0500\",1.19,12,170,0.296511,1.1,0.296511,,,,799,-0.010411,A,20211222160000,20211222160000,0.084538,0.03753,0\n"
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/equities/rt/stock-prices": {
      "get": {
        "tags": [
          "ㅤRT Equities"
        ],
        "description": "Retrieves realtime price and volume data for the requested financial instrument, i.e. stock, ETF, index.\n\n| Example Request | http://restapi.ivolatility.com/equities/rt/stock-prices?username=your_IVol_username&password=your_IVol_password&symbol=SPX,AAPL | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/equities/rt/stock-prices')\nmarketData = getMarketData(symbol='SPX,AAPL')\n```\n\n",
        "operationId": "RT Equity Prices",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Comma-separated list of equity tickers. Ex: SPX,AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                },
                "example": {
                  "status": {
                    "executionTime": 14,
                    "code": "DONE",
                    "queriesLeft": 4999969,
                    "recordsFound": 1
                  },
                  "query": {
                    "requestUUID": "fbd9c182-fbb0-40a1-bc92-8e7dd8c6b5e7",
                    "symbols": "AAPL"
                  },
                  "data": [
                    {
                      "symbol": "AAPL",
                      "askPrice": 176.15,
                      "bidSize": 1,
                      "openPrice": 0,
                      "bidPrice": 176.11,
                      "cumulativeVolume": 66512713,
                      "lowPrice": 0,
                      "stockId": 799,
                      "highPrice": 0,
                      "askSize": 5,
                      "dumpTimestamp": "2021-12-23T16:16:00.0000-0500",
                      "officialClose": 176.28,
                      "lastPrice": 176.28,
                      "timestamp": "2021-12-27T03:02:29.8700-0500"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/equities/rt/options-rawiv": {
      "get": {
        "tags": [
          "ㅤRT Equity Options"
        ],
        "description": "Retrieves realtime equity options data, including National Best Bid and Offer (NBBO), open interest (OI), implied volatility (IV), and greeks. The NBBO is sourced from all exchanges.\n\n* US data starts from November 2000, SPX - from 1990;\n* European data - from 4/19/2011;\n* Asian data, including ASX and HKEX – from 6/12/2013, NSX – from 4/24/2016, OSE/TSE – from 7/18/2016.\n\n| Example Request | http://restapi.ivolatility.com/equities/rt/options-rawiv?username=your_IVol_username&password=your_IVol_password&symbols=SPX%20%20%20251219C04100000,SPX%20%20%20251219P04100000 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/equities/rt/options-rawiv')\nmarketData = getMarketData(symbols='SPX   251219C04100000,SPX   251219P04100000')\n```\n\n",
        "operationId": "RT Single Options Contract Raw IV",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbols",
            "in": "query",
            "description": "Comma-separated list of options tickers. Ex: SPX   251219C04100000,SPX   251219P04100000",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                },
                "example": {
                  "status": {
                    "executionTime": 10,
                    "recordsFound": 1,
                    "code": "DONE"
                  },
                  "query": {
                    "requestUUID": "451e1db0-e2da-4d69-bf80-d430ca55223e",
                    "symbols": "SPXW 211223P03890000"
                  },
                  "data": [
                    {
                      "symbol": "SPXW 211223P03890000",
                      "stockId": 9327,
                      "expirationDate": "2021-12-23T00:00:00.0000-0500",
                      "strike": 3890.0,
                      "type": "P",
                      "style": "E",
                      "openInterest": 88,
                      "bidPrice": 0.0,
                      "askPrice": 0.0,
                      "lastPrice": 0.0,
                      "bidDate": "20211223000000",
                      "askDate": "20211223000000",
                      "lastDate": "20211227000000",
                      "bidSize": 0,
                      "askSize": 0,
                      "underlyingPrice": 4735.353,
                      "iv": 0.207512,
                      "delta": 0.0,
                      "vega": 0.0,
                      "gamma": 0.0,
                      "theta": -0.0,
                      "rho": 0.0,
                      "preIv": -1.0,
                      "theoPrice": 0.0,
                      "forwardPrice": 0.0,
                      "timestamp": "2021-12-27T05:27:49.2660-0500",
                      "sentToESTimestamp": "2021-12-27T05:28:02.1170-0500"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/equities/option-series": {
      "get": {
        "tags": [
          "ㅤEOD Equity Options"
        ],
        "description": "Retrieves options chain data for the provided equity ticker.\n\n| Example Request | http://restapi.ivolatility.com/equities/option-series?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&expFrom=2022-10-21&expTo=2022-10-21&strikeFrom=100&strikeTo=105&callPut=C | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/equities/option-series')\nmarketData = getMarketData(symbol='AAPL', expFrom='2022-10-21', expTo='2022-10-21', strikeFrom=100, strikeTo=105, callPut='C')\n```\n\n",
        "operationId": "EOD Option Series",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity ticker. Ex: AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expFrom",
            "in": "query",
            "description": "Date of equity option's expiration, expressed in yyyy-mm-dd format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expTo",
            "in": "query",
            "description": "Date of equity option's expiration, expressed in yyyy-mm-dd format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "strikeFrom",
            "in": "query",
            "description": "Equity option's strike price",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "strikeTo",
            "in": "query",
            "description": "Equity option's strike price",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "callPut",
            "in": "query",
            "description": "Call (C) or Put (P)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OptionSeries"
                },
                "example": {
                  "status": {
                    "code": "DONE",
                    "recordsFound": 2
                  },
                  "query": {
                    "requestUUID": null
                  },
                  "data": [
                    {
                      "callPut": "C",
                      "stockSymbol": "AAPL",
                      "optionSymbol": "AAPL 221021C00100000",
                      "strike": 100,
                      "expirationDate": "2022-10-21"
                    },
                    {
                      "callPut": "C",
                      "stockSymbol": "AAPL",
                      "optionSymbol": "AAPL 221021C00105000",
                      "strike": 105,
                      "expirationDate": "2022-10-21"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OptionSeries"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OptionSeries"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OptionSeries"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/equities/intraday/stock-prices": {
      "get": {
        "tags": [
          "ㅤIntraday Equities"
        ],
        "description": "Retrieves intraday historical prices of stocks, indexes, and ETFs for the requested frequency.\n<p>Prices are not adjusted for splits and dividends. Information about all corporate actions is available in a separate end of the day tables (Splits, CorpActions).\n\n| Example Request | http://restapi.ivolatility.com/equities/intraday/stock-prices?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&date=2021-12-16&minuteType=HOUR | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/equities/intraday/stock-prices')\nmarketData = getMarketData(symbol='AAPL', date='2021-12-16', minuteType='HOUR')\n```\n\n",
        "operationId": "INTRD Equity Prices",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity ticker. Ex: AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "minuteType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "MINUTE_1",
                "MINUTE_5",
                "MINUTE_15",
                "MINUTE_30",
                "HOUR",
                "CUSTOM"
              ]
            }
          },
          {
            "name": "minutes",
            "in": "query",
            "description": "Comma separated list of required minutes. Use it when minuteType is set to CUSTOM.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityPrices"
                },
                "example": {
                  "status": {
                    "executionTime": 2433,
                    "recordsFound": 7,
                    "code": "DONE",
                    "urlForDetails": null,
                    "queriesLeftEOD": 10,
                    "queriesLeftIntraday": 400
                  },
                  "query": {
                    "requestUUID": "175e8898-01f8-4f32-9c10-3aa1dd34b90a"
                  },
                  "data": [
                    {
                      "timestamp": "2021-12-16 10:00:00",
                      "stockId": 799,
                      "stockSymbol": "AAPL",
                      "type": "S",
                      "currency": "USD",
                      "bidPrice": 176.6,
                      "askPrice": 176.62,
                      "lastPrice": 176.6036,
                      "bidDateTime": "2021-12-16 09:59:43",
                      "askDateTime": "2021-12-16 09:59:43",
                      "lastDateTime": "2021-12-16 09:59:43",
                      "bidSize": 6,
                      "askSize": 3,
                      "lastSize": 400,
                      "bidExchange": "DX",
                      "askExchange": "BT",
                      "lastExchange": "QD",
                      "volume": 21854837,
                      "calcTimestamp": "2021-12-16 09:59:47"
                    },
                    {
                      "timestamp": "2021-12-16 11:00:00",
                      "stockId": 799,
                      "stockSymbol": "AAPL",
                      "type": "S",
                      "currency": "USD",
                      "bidPrice": 175.72,
                      "askPrice": 175.73,
                      "lastPrice": 175.73,
                      "bidDateTime": "2021-12-16 10:59:47",
                      "askDateTime": "2021-12-16 10:59:47",
                      "lastDateTime": "2021-12-16 10:59:47",
                      "bidSize": 4,
                      "askSize": 4,
                      "lastSize": 169,
                      "bidExchange": "Q",
                      "askExchange": "BT",
                      "lastExchange": "QD",
                      "volume": 48993703,
                      "calcTimestamp": "2021-12-16 10:59:49"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityPrices"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityPrices"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityPrices"
                }
              }
            }
          }
        }
      }
    },
    "/equities/intraday/single-equity-option-rawiv": {
      "get": {
        "tags": [
          "ㅤIntraday Equity Options"
        ],
        "description": "Retrieves single equity options contract intraday data for the requested asset, including National Best Bid and Offer (NBBO), open interest (OI), implied volatility (IV), and greeks. The NBBO is sourced from all exchanges.\n<p>The returned options contract may be any of the following types of options:</p>\n\n* regular options expired on 3rd Friday/Saturday\n* weeklies\n* quarterlies\n* leaps\n\nNon-standard options, issued after corporate actions, are **not** included in the data.\n| Example Request | http://restapi.ivolatility.com/equities/intraday/single-equity-option-rawiv?username=your_IVol_username&password=your_IVol_password&symbol=SPY&date=2021-09-20&expDate=2022-06-17&strike=450&optType=ALL&minuteType=MINUTE_15 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/equities/intraday/single-equity-option-rawiv')\nmarketData = getMarketData(symbol='SPY', date='2021-09-20', expDate='2022-06-17', strike='450', optType='CALL', minuteType='MINUTE_15')\n```\n\n",
        "operationId": "INTRD Single Equity Options Contract with Raw IV&Greeks",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity ticker. Ex: AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, expressed in yyyy-mm-dd format.  Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "expDate",
            "in": "query",
            "description": "Date of equity option's expiration, expressed in yyyy-mm-dd format.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "strike",
            "in": "query",
            "description": "Equity option's strike price",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "optType",
            "in": "query",
            "description": "Option type must either be CALL or PUT",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "CALL",
                "PUT",
                "ALL"
              ]
            }
          },
          {
            "name": "minuteType",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "MINUTE_1",
                "MINUTE_5",
                "MINUTE_15",
                "MINUTE_30",
                "HOUR",
                "CUSTOM"
              ]
            }
          },
          {
            "name": "minutes",
            "in": "query",
            "description": "Comma separated list of required minutes. Use it when minuteType is set to CUSTOM.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityOptions"
                },
                "example": "2021-12-20 10:00:00,627,SPY,2021-12-20,235,C,A,SPY   211220C00235000,2.186E2,2.192E2,2021-12-20 09:59:47,2021-12-20 09:59:47,20,20,C2,C2,0,6.379E-1,4.54E2,9.999E-1,0E0,0E0,0E0,1.68E-3,-1E0,1.548E-1,2021-12-20 09:59:52\n2021-12-20 10:00:00,627,SPY,2021-12-20,235,P,A,SPY   211220P00235000,0E0,1E-2,2021-12-20 09:59:38,2021-12-20 09:59:45,0,3515,YM,Y,0,5.157E-1,4.54E2,0E0,0E0,0E0,0E0,0E0,-1E0,1.548E-1,2021-12-20 09:59:52\n"
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityOptions"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityOptions"
                }
              }
            }
          }
        }
      }
    },
    "/equities/intraday/equity-options-rawiv": {
      "get": {
        "tags": [
          "ㅤIntraday Equity Options"
        ],
        "description": "Retrieves intraday equity options chain data for the requested asset, including National Best Bid and Offer (NBBO), open interest (OI), implied volatility (IV), and greeks. The NBBO is sourced from all exchanges.\n<p>The returned data includes all traded expirations and strikes for the following types of options:</p>\n\n* regular options expired on 3rd Friday/Saturday\n* weeklies\n* quarterlies\n* leaps\n\nNon-standard options, issued after corporate actions, are **not** included in the data.\n| Example Request | http://restapi.ivolatility.com/equities/intraday/equity-options-rawiv?username=your_IVol_username&password=your_IVol_password&symbol=SPY&date=2021-09-20&minuteType=MINUTE_15 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/equities/intraday/equity-options-rawiv')\nmarketData = getMarketData(symbol='SPY', date='2021-09-20', minuteType='MINUTE_15')\n```\n\n",
        "operationId": "INTRD Equity Options Data with Raw IV&Greeks",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity ticker. Ex: AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, expressed in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "expDate",
            "in": "query",
            "description": "Date of equity option's expiration, expressed in yyyy-mm-dd format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "strike",
            "in": "query",
            "description": "Equity option's strike price",
            "required": false,
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "optType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "CALL",
                "PUT",
                "ALL"
              ]
            }
          },
          {
            "name": "minuteType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "MINUTE_1",
                "MINUTE_5",
                "MINUTE_15",
                "MINUTE_30",
                "HOUR",
                "CUSTOM"
              ]
            }
          },
          {
            "name": "minutes",
            "in": "query",
            "description": "Comma separated list of required minutes. Use it when minuteType is set to CUSTOM.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityOptions"
                },
                "example": "2021-12-20 10:00:00,627,SPY,2021-12-20,235,C,A,SPY   211220C00235000,2.186E2,2.192E2,2021-12-20 09:59:47,2021-12-20 09:59:47,20,20,C2,C2,0,6.379E-1,4.54E2,9.999E-1,0E0,0E0,0E0,1.68E-3,-1E0,1.548E-1,2021-12-20 09:59:52\n2021-12-20 10:00:00,627,SPY,2021-12-20,235,P,A,SPY   211220P00235000,0E0,1E-2,2021-12-20 09:59:38,2021-12-20 09:59:45,0,3515,YM,Y,0,5.157E-1,4.54E2,0E0,0E0,0E0,0E0,0E0,-1E0,1.548E-1,2021-12-20 09:59:52\n"
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityOptions"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityOptions"
                }
              }
            }
          }
        }
      }
    },
    "/equities/interest-rates": {
      "get": {
        "tags": [
          "ㅤEOD Equities"
        ],
        "description": "Retrieves interpolated inter-bank offered rates, such as LIBORs, with a 1-day delay (until end of 2021);\n<br>ISDA Fallback rates, with a 1-day delay (starting 2022).\n\n| Example Request | http://restapi.ivolatility.com/equities/interest-rates?username=your_IVol_username&password=your_IVol_password&from=2021-12-24&till=2021-12-24 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/equities/interest-rates')\nmarketData = getMarketData(from_='2021-12-24', till='2021-12-24')\n```\n\n",
        "operationId": "EOD Interest Rates",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "till",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                },
                "example": {
                  "status": {
                    "executionTime": 10,
                    "recordsFound": 1800,
                    "code": "PENDING",
                    "urlForDetails": "https://cloud.ivolatility.com/api/rest/v2/results?ts=1663222825294&token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxODg3ODYiLCJsb2dpbiI6ImR2b3JvbnRzb3YiLCJzdXVpZCI6IjI5Y2UwZTA5LWIyM2QtNGZlMS1iYzE3LWZlOWZlZDkwMmRiYiIsImRhdGEiOiI0NT02XG42OT02XG4xMDIwPTdcbjEzMD02XG40NTE9NlxuMTEwPTZcbjc3Nz02XG43MD03XG45Mz02XG41MD03XG4xMj02XG4xMDEwPTZcbjE0MD02XG4xMjA9NlxuMTAwOD02XG4xMDA9NlxuMTEwNT02XG4xMDA1PTdcbjEwMDQ9NlxuMTQwMD03XG41PTdcbjY9NlxuMzY5PTZcbjkwMD03XG45PTdcbjkwMT03XG45MDI9NlxuOTAzPTdcbjQwPTZcbjIwPTdcbjEwMDk9NiIsImlhdCI6MTY2MzIyMjgwNywiZXhwIjoxNjYzMjI0NjA3fQ.Ja5WM8f4XqPpcVpZ0jmL2yUWpKzMUhyyfp8BShF0mME&path=/your_IVol_username/.6e5122f6-cd50-3632-a6b6-934c1e6b1575/"
                  },
                  "query": {
                    "till": "2021-12-24",
                    "requestUUID": "6e5122f6-cd50-3632-a6b6-934c1e6b1575",
                    "from": "2021-12-24",
                    "token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxODg3ODYiLCJsb2dpbiI6ImR2b3JvbnRzb3YiLCJzdXVpZCI6IjI5Y2UwZTA5LWIyM2QtNGZlMS1iYzE3LWZlOWZlZDkwMmRiYiIsImRhdGEiOiI0NT02XG42OT02XG4xMDIwPTdcbjEzMD02XG40NTE9NlxuMTEwPTZcbjc3Nz02XG43MD03XG45Mz02XG41MD03XG4xMj02XG4xMDEwPTZcbjE0MD02XG4xMjA9NlxuMTAwOD02XG4xMDA9NlxuMTEwNT02XG4xMDA1PTdcbjEwMDQ9NlxuMTQwMD03XG41PTdcbjY9NlxuMzY5PTZcbjkwMD03XG45PTdcbjkwMT03XG45MDI9NlxuOTAzPTdcbjQwPTZcbjIwPTdcbjEwMDk9NiIsImlhdCI6MTY2MzIyMjgwNywiZXhwIjoxNjYzMjI0NjA3fQ.Ja5WM8f4XqPpcVpZ0jmL2yUWpKzMUhyyfp8BShF0mME"
                  },
                  "data": [

                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/equities/eod/stock-prices": {
      "get": {
        "tags": [
          "ㅤEOD Equities"
        ],
        "description": "Retrieves historical EOD price and volume data for the requested financial instrument, i.e. stock, ETF, index.\n\n| Example Request | http://restapi.ivolatility.com/equities/eod/stock-prices?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&date=2021-12-16 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/equities/eod/stock-prices')\nmarketData = getMarketData(symbol='AAPL', from_='2021-12-10', to='2021-12-17')\n```\n\n",
        "operationId": "EOD Equity Prices",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity ticker. Ex: AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Equity region",
            "required": false,
            "schema": {
              "type": "string",
              "default": "USA",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityPrices"
                },
                "example": {
                  "status": {
                    "executionTime": 271,
                    "recordsFound": 1,
                    "code": "DONE",
                    "urlForDetails": null,
                    "queriesLeftEOD": 10,
                    "queriesLeftIntraday": 400
                  },
                  "query": {
                    "requestUUID": null
                  },
                  "data": [
                    {
                      "date": "2021-12-16 00:00:00",
                      "symbol": "AAPL",
                      "exchange": "NASDAQ",
                      "open": 179.28,
                      "high": 181.14,
                      "low": 170.75,
                      "close": 172.26,
                      "volume": 1.49421718E8,
                      "record_no": 1,
                      "unadjusted_close": 172.26
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityPrices"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityPrices"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityPrices"
                }
              }
            }
          }
        }
      }
    },
    "/equities/eod/single-stock-option": {
      "get": {
        "tags": [
          "ㅤEOD Equity Options"
        ],
        "description": "Retrieves EOD single equity option data, including National Best Bid and Offer (NBBO), volume, and open interest (OI). The NBBO is sourced from all exchanges.\n* US data starts from November 2000, SPX - from 1990;\n* European data - from 4/19/2011;\n* Asian data, including ASX and HKEX – from 6/12/2013, NSX – from 4/24/2016, OSE/TSE – from 7/18/2016.\n\n| Example Request | http://restapi.ivolatility.com/equities/eod/single-stock-option?username=your_IVol_username&password=your_IVol_password&symbol=SPX%20%20%20251219C04100000&from=2021-12-16&to=2021-12-17 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/equities/eod/single-stock-option')\nmarketData = getMarketData(symbol='SPX   251219C04100000', from_='2021-12-16', to='2021-12-17')\n```\n\n",
        "operationId": "EOD Single Options Contract",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity option's ticker. Ex: SPX   251219C04100000",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                },
                "example": {
                  "status": {
                    "executionTime": 1602,
                    "recordsFound": 2,
                    "code": null,
                    "urlForDetails": null,
                    "queriesLeftEOD": 999,
                    "queriesLeftIntraday": 1000
                  },
                  "query": {
                    "requestUUID": null
                  },
                  "data": [
                    {
                      "symbol": "SPX",
                      "exchange": "CBOE",
                      "date": "2021-12-15",
                      "Adjusted close": 4668.67,
                      "option symbol": "SPX   251219C04100000",
                      "expiration": "2025-12-18",
                      "strike": 4100.0,
                      "Call/Put": "C",
                      "style": "E",
                      "ask": 1243.9,
                      "bid": 943.9,
                      "volume": 0,
                      "open interest": 0,
                      "Unadjusted": 4668.67
                    },
                    {
                      "symbol": "SPX",
                      "exchange": "CBOE",
                      "date": "2021-12-16",
                      "Adjusted close": 4620.64,
                      "option symbol": "SPX   251219C04100000",
                      "expiration": "2025-12-18",
                      "strike": 4100.0,
                      "Call/Put": "C",
                      "style": "E",
                      "ask": 1190.2,
                      "bid": 930.5,
                      "volume": 0,
                      "open interest": 0,
                      "Unadjusted": 4620.64
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/equities/eod/single-stock-option-raw-iv": {
      "get": {
        "tags": [
          "ㅤEOD Equity Options"
        ],
        "description": "Retrieves EOD single equity option data, including National Best Bid and Offer (NBBO), volume, and open interest (OI), implied volatility (IV), and greeks. The NBBO is sourced from all exchanges.\n* US data starts from November 2000, SPX - from 1990;\n* European data - from 4/19/2011;\n* Asian data, including ASX and HKEX – from 6/12/2013, NSX – from 4/24/2016, OSE/TSE – from 7/18/2016.\n\n<p>Note: <code>optionId</code> takes precedence over <code>symbol</code>\n\n| Example Request | http://restapi.ivolatility.com/equities/eod/single-stock-option-raw-iv?username=your_IVol_username&password=your_IVol_password&optionId=117703987&symbol=SPX%20%20%20251219C04100000&from=2022-09-29&to=2022-10-30 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/equities/eod/single-stock-option-raw-iv')\nmarketData = getMarketData(optionId=117703987, symbol='SPX   251219C04100000', from_='2022-09-29', to='2022-10-30')\n```\n\n",
        "operationId": "EOD Single Options Contract Raw IV",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optionId",
            "in": "query",
            "description": "Option id. Ex: 117703987",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity option's ticker. Ex: SPX   251219C04100000",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                },
                "example": {
                  "status": {
                    "executionTime": 1973,
                    "recordsFound": 5,
                    "code": null,
                    "urlForDetails": null,
                    "queriesLeftEOD": 999,
                    "queriesLeftIntraday": 1000
                  },
                  "query": {
                    "requestUUID": null
                  },
                  "data": [
                    {
                      "symbol": "SPX",
                      "option_id": 117703987,
                      "exchange": "CBOE",
                      "date": "2022-09-28",
                      "option symbol": "SPX   251219C04100000",
                      "expiration": "2025-12-18",
                      "strike": 4100.0,
                      "Call/Put": "C",
                      "style": "E",
                      "ask": 557.8,
                      "bid": 486.0,
                      "Adjusted close": 3640.47,
                      "Unadjusted close": 3640.47,
                      "iv": 0.227893,
                      "preiv": 0.227893,
                      "delta": 0.551049,
                      "gamma": 2.77E-4,
                      "vega": 24.834436,
                      "theta": -0.183601,
                      "rho": 52.832546,
                      "volume": 0,
                      "open interest": 365
                    },
                    {
                      "symbol": "SPX",
                      "option_id": 117703987,
                      "exchange": "CBOE",
                      "date": "2022-10-02",
                      "option symbol": "SPX   251219C04100000",
                      "expiration": "2025-12-18",
                      "strike": 4100.0,
                      "Call/Put": "C",
                      "style": "E",
                      "ask": 566.3,
                      "bid": 504.8,
                      "Adjusted close": 3678.43,
                      "Unadjusted close": 3678.43,
                      "iv": 0.226185,
                      "preiv": 0.226185,
                      "delta": 0.559058,
                      "gamma": 2.75E-4,
                      "vega": 24.990276,
                      "theta": -0.183111,
                      "rho": 53.770817,
                      "volume": 0,
                      "open interest": 365
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/equities/eod/options-rawiv": {
      "get": {
        "tags": [
          "ㅤEOD Equity Options"
        ],
        "description": "Retrieves EOD equity options chain data for the requested asset, including National Best Bid and Offer (NBBO), open interest (OI), implied volatility (IV), and greeks. The NBBO is sourced from all exchanges.\n<p>The returned data includes all traded expirations and strikes for the following types of options:</p>\n\n* regular options expired on 3rd Friday/Saturday\n* weeklies\n* quarterlies\n* leaps\n\nNon-standard options, issued after corporate actions, are **not** included in the data.\n| Example Request | http://restapi.ivolatility.com/equities/eod/options-rawiv?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&date=2021-12-16<br>OR<br>http://restapi.ivolatility.com/equities/eod/options-rawiv?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&from=2021-12-10&to=2021-12-17 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/equities/eod/options-rawiv')\nmarketData = getMarketData(symbol='AAPL', date='2021-12-16')\n#OR:\nmarketData = getMarketData(symbol='AAPL', from_='2021-12-10', to='2021-12-17')\n```\n\n",
        "operationId": "EOD Equity Options Raw IV",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity ticker. Ex: AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Equity region",
            "required": false,
            "schema": {
              "type": "string",
              "default": "USA",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityRawIv"
                },
                "example": {
                  "status": {
                    "executionTime": 4492,
                    "recordsFound": 1812,
                    "code": "PENDING",
                    "urlForDetails": "https://cloud.ivolatility.com/api/rest/v2/results?ts=1663224101067&token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxODg3ODYiLCJsb2dpbiI6ImR2b3JvbnRzb3YiLCJzdXVpZCI6ImEyYTU5MjA0LTNiMDQtNGI2YS05MjdiLTdiMjdmOTBlN2NjZiIsImRhdGEiOiI0NT02XG42OT02XG4xMDIwPTdcbjEzMD02XG40NTE9NlxuMTEwPTZcbjc3Nz02XG43MD03XG45Mz02XG41MD03XG4xMj02XG4xMDEwPTZcbjE0MD02XG4xMjA9NlxuMTAwOD02XG4xMDA9NlxuMTEwNT02XG4xMDA1PTdcbjEwMDQ9NlxuMTQwMD03XG41PTdcbjY9NlxuMzY5PTZcbjkwMD03XG45PTdcbjkwMT03XG45MDI9NlxuOTAzPTdcbjQwPTZcbjIwPTdcbjEwMDk9NiIsImlhdCI6MTY2MzIyNDA2MCwiZXhwIjoxNjYzMjI1ODYwfQ.THSyaWkQqL7jdcbQ8JxP_lIVaiOY8qLpA9wUyM9mQfI&path=/your_IVol_username/.fc6c7cab-3f44-3241-9011-01d2dcb7703a/",
                    "queriesLeftEOD": 999,
                    "queriesLeftIntraday": 1000
                  },
                  "query": {
                    "requestUUID": "fc6c7cab-3f44-3241-9011-01d2dcb7703a"
                  },
                  "data": [

                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityRawIv"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityRawIv"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityRawIv"
                }
              }
            }
          }
        }
      }
    },
    "/equities/eod/options-nbbo": {
      "get": {
        "tags": [
          "ㅤEOD Equity Options"
        ],
        "description": "Retrieves EOD equity options chain data for the requested asset, including National Best Bid and Offer (NBBO), open interest (OI), and volume. The NBBO is sourced from all exchanges.\n\n* US data starts from November 2000, SPX - from 1990;\n* European data - from 4/19/2011;\n* Asian data, including ASX and HKEX – from 6/12/2013, NSX – from 4/24/2016, OSE/TSE – from 7/18/2016.\n\n| Example Request | http://restapi.ivolatility.com/equities/eod/options-nbbo?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&date=2021-12-16 <br>OR<br>http://restapi.ivolatility.com/equities/eod/options-nbbo?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&from=2021-12-10&to=2021-12-17 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/equities/eod/options-nbbo')\nmarketData = getMarketData(symbol='AAPL', date='2021-12-16')\n#OR:\nmarketData = getMarketData(symbol='AAPL', from_='2021-12-10', to='2021-12-17')\n```\n\n",
        "operationId": "EOD Equity Options NBBO",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity ticker. Ex: AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Equity region",
            "required": false,
            "schema": {
              "type": "string",
              "default": "USA",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityOptnbbo"
                },
                "example": "1,AAPL,NASDAQ,2021-12-16 00:00:00,172.26,AAPL  211217C00040000,2021-12-17 00:00:00,40,C,A,133.45,131.6,8,38,172.26\n2,AAPL,NASDAQ,2021-12-16 00:00:00,172.26,AAPL  211217P00040000,2021-12-17 00:00:00,40,P,A,0.01,0,9,76,172.26\n"
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityOptnbbo"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityOptnbbo"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityOptnbbo"
                }
              }
            }
          }
        }
      }
    },
    "/equities/eod/nearest-option-tickers": {
      "get": {
        "tags": [
          "ㅤEOD Equity Options"
        ],
        "description": "Retrieves two nearest options tickers for the provided equity ticker and days to expiration.\n* Moneyness: -50% to 0% with 5% step (OTM puts), 0% to 50% with 5% step (OTM calls)\n* <code>delta</code> must be positive when <code>callPut='C'</code>, or negative when <code>callPut='P'</code>\n\n<p>Note: <code>moneyness</code> takes precedence over <code>delta</code>\n\n| Example Request | http://restapi.ivolatility.com/equities/eod/nearest-option-tickers?username=your_IVol_username&password=your_IVol_password&symbol=TQQQ&dte=100&moneyness=5&callPut=C<br>OR<br>http://restapi.ivolatility.com/equities/eod/nearest-option-tickers?username=your_IVol_username&password=your_IVol_password&symbol=TQQQ&startingDate=2022-03-15&dte=100&delta=-.9&callPut=P | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/equities/eod/nearest-option-tickers')\nmarketData = getMarketData(symbol='TQQQ', startingDate='2022-03-15', dte=100, moneyness=5, callPut='C')\n#OR:\nmarketData = getMarketData(symbol='TQQQ', dte=100, delta=-.9, callPut='P')\n```\n\n",
        "operationId": "Equity Options Finder",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity ticker. Ex: AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startingDate",
            "in": "query",
            "description": "Starting date from which to calculate the days to expiration, specified in yyyy-mm-dd format. By default, starting date is the current date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "dte",
            "in": "query",
            "description": "Days to expiration, i.e. expiration_date - current_date.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "moneyness",
            "in": "query",
            "description": "Equity option's moneyness",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "delta",
            "in": "query",
            "description": "Equity option's delta",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "callPut",
            "in": "query",
            "description": "Call (C) or Put (P)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OptionSeries"
                },
                "example": {
                  "status": {
                    "code": "DONE",
                    "recordsFound": 2
                  },
                  "query": {
                    "requestUUID": null
                  },
                  "data": [
                    {
                      "callPut": "C",
                      "stockSymbol": "AAPL",
                      "optionSymbol": "AAPL 221021C00100000",
                      "strike": 100,
                      "expirationDate": "2022-10-21"
                    },
                    {
                      "callPut": "C",
                      "stockSymbol": "AAPL",
                      "optionSymbol": "AAPL 221021C00105000",
                      "strike": 105,
                      "expirationDate": "2022-10-21"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/equities/eod/ivx": {
      "get": {
        "tags": [
          "ㅤEOD Equities"
        ],
        "description": "Retrieves the Implied Volatility Index (averaged implied volatility) for the asset.\n<p>The IVIndex (IVX) was introduced by IVolatlity&copy; almost 10 years ago. Using raw IV data, the IVX is calculated with a proprietary weighting technique, factoring the Delta and Vega of each option. In total, 8 ATM options (4 calls and 4 puts) are used within each expiration to calculate the Call, Put and Mean Implied Volatility of each stock. The IVIndex is normalized to fixed tenors<sup>1</sup> (7, 14, 21, 30, 60, 90, 120, 150, 180, 270, 360, 720, 1080 days).\n\n<p><sup>1</sup> Note: 7, 14, 21 and 270-day tenors start from 10/10/2019\n\n| Example Request | http://restapi.ivolatility.com/equities/eod/ivx?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&date=2021-12-16<br>OR<br>http://restapi.ivolatility.com/equities/eod/ivx?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&from=2021-12-10&to=2021-12-17 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/equities/eod/ivx')\nmarketData = getMarketData(symbol='AAPL', date='2021-12-16')\n#OR:\nmarketData = getMarketData(symbol='AAPL', from_='2021-12-10', to='2021-12-17')\n```\n\n",
        "operationId": "EOD Equities IVX",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity ticker. Ex: AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Equity region",
            "required": false,
            "schema": {
              "type": "string",
              "default": "USA",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityIvx"
                },
                "example": {
                  "status": {
                    "executionTime": 365,
                    "recordsFound": 1,
                    "code": "DONE",
                    "urlForDetails": null,
                    "queriesLeftEOD": 10,
                    "queriesLeftIntraday": 400
                  },
                  "query": {
                    "requestUUID": null
                  },
                  "data": [
                    {
                      "symbol": "AAPL",
                      "exchange": "NASDAQ",
                      "date": "2021-12-16 00:00:00",
                      "price": 172.26,
                      "record_no": 1,
                      "30d_iv_call": 0.343842,
                      "30d_iv_put": 0.335386,
                      "30d_iv_mean": 0.339614,
                      "60d_iv_call": 0.345657,
                      "60d_iv_put": 0.336009,
                      "60d_iv_mean": 0.340833,
                      "90d_iv_call": 0.330783,
                      "90d_iv_put": 0.322115,
                      "90d_iv_mean": 0.326449,
                      "120d_iv_call": 0.323774,
                      "120d_iv_put": 0.314791,
                      "120d_iv_mean": 0.3192825,
                      "150d_iv_call": 0.327784,
                      "150d_iv_put": 0.316123,
                      "150d_iv_mean": 0.3219535,
                      "180d_iv_call": 0.322598,
                      "180d_iv_put": 0.314325,
                      "180d_iv_mean": 0.3184615,
                      "270d_iv_call": 0.320833,
                      "270d_iv_put": 0.308231,
                      "270d_iv_mean": 0.31453198,
                      "360d_iv_call": 0.32683,
                      "360d_iv_put": 0.303752,
                      "360d_iv_mean": 0.315291,
                      "720d_iv_call": 0.332633,
                      "720d_iv_put": 0.298923,
                      "720d_iv_mean": 0.315778,
                      "1080d_iv_call": 0.333244,
                      "1080d_iv_put": 0.29694,
                      "1080d_iv_mean": 0.315092
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityIvx"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityIvx"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityIvx"
                }
              }
            }
          }
        }
      }
    },
    "/equities/eod/ivs": {
      "get": {
        "tags": [
          "ㅤEOD Equities"
        ],
        "description": "Retrieves the Implied Volatility Surface (normalized by maturities and moneyness) for the asset.\n* Tenors<sup>1</sup>: 7, 14, 21, 30, 60, 90, 120, 150, 180, 270, 360, 720, 1080 days\n* Moneyness: -50% to 0% with 5% step (OTM puts), 0% to 50% with 5% step (OTM calls)\n* Only out-of-the-money options are used for building the Volatility Surface. I.e.:\n    * Puts for virtual strikes 50, 55, 60, ..., 100 % of the current underlying price\n    * Calls for virtual strikes 100, 105, 110, ..., 150 % of the current underlying price\n\n<p><sup>1</sup> Note: 7, 14, 21, 270, 360, 720, 1080-day tenors start from 10/10/2019\n\n| Example Request | http://restapi.ivolatility.com/equities/eod/ivs?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&date=2021-12-16<br>OR<br>http://restapi.ivolatility.com/equities/eod/ivs?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&from=2021-12-10&to=2021-12-17 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/equities/eod/ivs')\nmarketData = getMarketData(symbol='AAPL', date='2021-12-16')\n#OR:\nmarketData = getMarketData(symbol='AAPL', from_='2021-12-10', to='2021-12-17')\n```\n\n",
        "operationId": "EOD Equities IV Surface",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity ticker. Ex: AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Equity region",
            "required": false,
            "schema": {
              "type": "string",
              "default": "USA",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityIvs"
                },
                "example": {
                  "status": {
                    "executionTime": 1772,
                    "recordsFound": 234,
                    "code": "DONE",
                    "urlForDetails": null,
                    "queriesLeftEOD": 10,
                    "queriesLeftIntraday": 400
                  },
                  "query": {
                    "requestUUID": null
                  },
                  "data": [
                    {
                      "symbol": "AAPL",
                      "exchange": "NASDAQ",
                      "date": "2021-12-16 00:00:00",
                      "period": "30",
                      "strike": 172.26,
                      "iv": 0.347413,
                      "delta": 0.520221,
                      "record_no": 1,
                      "out-of-the-money_%": 0,
                      "call/put": "C"
                    },
                    {
                      "symbol": "AAPL",
                      "exchange": "NASDAQ",
                      "date": "2021-12-16 00:00:00",
                      "period": "30",
                      "strike": 172.26,
                      "iv": 0.333215,
                      "delta": -0.480637,
                      "record_no": 2,
                      "out-of-the-money_%": 0,
                      "call/put": "P"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityIvs"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityIvs"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityIvs"
                }
              }
            }
          }
        }
      }
    },
    "/equities/eod/hv": {
      "get": {
        "tags": [
          "ㅤEOD Equities"
        ],
        "description": "Retrieves the historical volatility (HV) data for requested equity's symbol on the specified dates.\n* Tenors: 10, 20, 30, 60, 90, 120, 150, 180 days\n\n| Example Request | http://restapi.ivolatility.com/equities/eod/hv?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&date=2021-12-16<br>OR<br>http://restapi.ivolatility.com/equities/eod/hv?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&from=2021-12-10&to=2021-12-17 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/equities/eod/hv')\nmarketData = getMarketData(symbol='AAPL', date='2021-12-16')\n#OR:\nmarketData = getMarketData(symbol='AAPL', from_='2021-12-10', to='2021-12-17')\n```\n\n",
        "operationId": "EOD Equities Historical Volatility",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity ticker. Ex: AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Equity region",
            "required": false,
            "schema": {
              "type": "string",
              "default": "USA",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityHv"
                },
                "example": {
                  "status": {
                    "executionTime": 391,
                    "recordsFound": 1,
                    "code": "DONE",
                    "urlForDetails": null,
                    "queriesLeftEOD": 10,
                    "queriesLeftIntraday": 400
                  },
                  "query": {
                    "requestUUID": null
                  },
                  "data": [
                    {
                      "symbol": "AAPL",
                      "exchange": "NASDAQ",
                      "date": "2021-12-16 00:00:00",
                      "price": 172.26,
                      "record_no": 1,
                      "10d_hv": 0.400359,
                      "20d_hv": 0.344236,
                      "30d_hv": 0.294668,
                      "60d_hv": 0.245196,
                      "90d_hv": 0.236368,
                      "120d_hv": 0.225542,
                      "150d_hv": 0.215056,
                      "180d_hv": 0.22135
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityHv"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityHv"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityHv"
                }
              }
            }
          }
        }
      }
    },
    "/equities/dl/stock-prices": {
      "get": {
        "tags": [
          "ㅤDelayed Equities"
        ],
        "description": "Retrieves 20-minute delayed price and volume data for the requested financial instrument, i.e. stock, ETF, index.\n\n| Example Request | http://restapi.ivolatility.com/equities/dl/stock-prices?username=your_IVol_username&password=your_IVol_password&symbol=SPX,AAPL | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/equities/dl/stock-prices')\nmarketData = getMarketData(symbol='SPX,AAPL')\n```\n\n",
        "operationId": "DL Equity Prices",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Comma-separated list of equity tickers. Ex: SPX,AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                },
                "example": {
                  "status": {
                    "executionTime": 13,
                    "code": "DONE",
                    "queriesLeft": 99180,
                    "recordsFound": 1
                  },
                  "query": {
                    "requestUUID": "e6c58169-e798-4d67-b090-694bf753abe8",
                    "symbols": "SPX"
                  },
                  "data": [
                    {
                      "symbol": "SPX",
                      "askPrice": 4819.03,
                      "bidSize": 0,
                      "openPrice": 4703.96,
                      "bidPrice": 4664.16,
                      "lowPrice": 4703.96,
                      "stockId": 9327,
                      "highPrice": 4740.74,
                      "askSize": 0,
                      "dumpTimestamp": "2021-12-23T16:12:32.0000-0500",
                      "officialClose": 4725.79,
                      "lastPrice": 4725.79,
                      "timestamp": "2021-12-23T16:10:41.1470-0500"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/equities/dl/options-rawiv": {
      "get": {
        "tags": [
          "ㅤDelayed Equity Options"
        ],
        "description": "Retrieves 20-minute delayed equity options data, including National Best Bid and Offer (NBBO), open interest (OI), implied volatility (IV), and greeks. The NBBO is sourced from all exchanges.\n<p>The returned data includes all traded expirations and strikes for the following types of options:</p>\n\n* regular options expired on 3rd Friday/Saturday\n* weeklies\n* quarterlies\n* leaps\n\nNon-standard options, issued after corporate actions, are **not** included in the data.\n| Example Request | http://restapi.ivolatility.com/equities/dl/options-rawiv?username=your_IVol_username&password=your_IVol_password&symbols=SPX%20%20%20251219C04100000,SPX%20%20%20251219P04100000 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/equities/dl/options-rawiv')\nmarketData = getMarketData(symbols='SPX   251219C04100000,SPX   251219P04100000')\n```\n\n",
        "operationId": "DL Single Options Contract Raw IV",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbols",
            "in": "query",
            "description": "Comma-separated list of options tickers. Ex: SPX   251219C04100000,SPX   251219P04100000",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                },
                "example": {
                  "status": {
                    "executionTime": 12,
                    "recordsFound": 1,
                    "code": "DONE"
                  },
                  "query": {
                    "requestUUID": "1ebd88d1-5cea-4111-8461-774ec8bdb024",
                    "symbols": "SPXW 220103C04725000"
                  },
                  "data": [
                    {
                      "symbol": "SPXW 220103C04725000",
                      "stockId": 9327,
                      "expirationDate": "2022-01-03T00:00:00.0000-0500",
                      "strike": 4725.0,
                      "type": "C",
                      "style": "E",
                      "openInterest": 925,
                      "bidPrice": 36.0,
                      "askPrice": 36.7,
                      "lastPrice": 37.38,
                      "bidDate": "20211223161448",
                      "askDate": "20211223161448",
                      "lastDate": "20211223160247",
                      "bidSize": 15,
                      "askSize": 16,
                      "cumulativeVolume": 795,
                      "underlyingPrice": 4728.838,
                      "iv": 0.107974,
                      "delta": 0.512717,
                      "vega": 3.270273,
                      "gamma": 0.004499,
                      "theta": -1.522691,
                      "rho": 0.718981,
                      "preIv": 0.107974,
                      "theoPrice": 36.35,
                      "forwardPrice": 4705.5376,
                      "timestamp": "2021-12-23T16:16:35.7400-0500",
                      "sentToESTimestamp": "2021-12-23T16:16:41.8210-0500"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/dd/single/single-stock-option": {
      "get": {
        "tags": [
          "End-Of-Day"
        ],
        "description": "Retrieves EOD single equity option data, including National Best Bid and Offer (NBBO), volume, and open interest (OI). The NBBO is sourced from all exchanges.\n* US data starts from November 2000, SPX - from 1990;\n* European data - from 4/19/2011;\n* Asian data, including ASX and HKEX – from 6/12/2013, NSX – from 4/24/2016, OSE/TSE – from 7/18/2016.\n\n| Example Request | http://restapi.ivolatility.com/dd/single/single-stock-option?username=your_IVol_username&password=your_IVol_password&symbol=SPX%20%20%20251219C04100000&from=2021-12-16&to=2021-12-17 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/dd/single/single-stock-option')\nmarketData = getMarketData(symbol='SPX   251219C04100000', from_='2021-12-16', to='2021-12-17')\n```\n\n",
        "operationId": "Single Options Contract",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity ticker. Ex: AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                },
                "example": {
                  "status": {
                    "executionTime": 1602,
                    "recordsFound": 2,
                    "code": null,
                    "urlForDetails": null,
                    "queriesLeftEOD": 999,
                    "queriesLeftIntraday": 1000
                  },
                  "query": {
                    "requestUUID": null
                  },
                  "data": [
                    {
                      "symbol": "SPX",
                      "exchange": "CBOE",
                      "date": "2021-12-15",
                      "Adjusted close": 4668.67,
                      "option symbol": "SPX   251219C04100000",
                      "expiration": "2025-12-18",
                      "strike": 4100.0,
                      "Call/Put": "C",
                      "style": "E",
                      "ask": 1243.9,
                      "bid": 943.9,
                      "volume": 0,
                      "open interest": 0,
                      "Unadjusted": 4668.67
                    },
                    {
                      "symbol": "SPX",
                      "exchange": "CBOE",
                      "date": "2021-12-16",
                      "Adjusted close": 4620.64,
                      "option symbol": "SPX   251219C04100000",
                      "expiration": "2025-12-18",
                      "strike": 4100.0,
                      "Call/Put": "C",
                      "style": "E",
                      "ask": 1190.2,
                      "bid": 930.5,
                      "volume": 0,
                      "open interest": 0,
                      "Unadjusted": 4620.64
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/dd/single/single-futures": {
      "get": {
        "tags": [
          "End-Of-Day"
        ],
        "description": "Retrieves EOD single future data, including National Best Bid and Offer (NBBO), OHLC, open interest (OI), volume, and expiration date. The NBBO is sourced from all exchanges. \n<br>Futures data for the Canadian market is **not** available.\n| Example Request | http://restapi.ivolatility.com/dd/single/single-futures?username=your_IVol_username&password=your_IVol_password&symbol=ES/22H.CM&from=2022-01-01&to=2022-03-31 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/dd/single/single-futures')\nmarketData = getMarketData(symbol='ES/22H.CM', from_='2022-01-01', to='2022-03-31')\n```\n\n",
        "operationId": "Single Futures Contract",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Full future's ticker. Ex: ES/22H.CM",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                },
                "example": {
                  "status": {
                    "executionTime": null,
                    "recordsFound": 1,
                    "code": null,
                    "urlForDetails": null,
                    "queriesLeftEOD": 10,
                    "queriesLeftIntraday": 400
                  },
                  "query": null,
                  "data": [
                    {
                      "date": "2021-12-20",
                      "symbol": "ES",
                      "Future symbol": "ES/22H.CM",
                      "exchange": "CME",
                      "Future expiration": "2022-03-18",
                      "bid": 4569.25,
                      "ask": 4569.5,
                      "Open price": 4612.0,
                      "High price": 4621.5,
                      "Low price": 4520.25,
                      "Close price": 4558.5,
                      "volume": 2027645,
                      "Open interest": 2246488
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/dd/single/single-future-option": {
      "get": {
        "tags": [
          "End-Of-Day"
        ],
        "description": "Retrieves EOD single futures option data, including National Best Bid and Offer (NBBO), OHLC, open interest (OI), volume, and expiration date. The NBBO is sourced from all exchanges.\n\n* Bid/ask prices<sup>1</sup> for US data start from 5/22/2014\n* European data - from 4/19/2011;\n* Asian data, including ASX and HKEX – from 6/12/2013, NSX – from 4/24/2016, OSE/TSE – from 7/18/2016.\n\nFutures options data for the Canadian market is **not** available.\n<p><sup>1</sup> The most recent bid/ask prices just before market close. If there were no updates to bid/ask prices before the close, these prices are not recorded and cleared by the exchange.\n\n| Example Request | http://restapi.ivolatility.com/dd/single/single-future-option?username=your_IVol_username&password=your_IVol_password&symbol=E2A/22M/39250000P.CMG&from=2022-05-10&to=2022-05-10 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/dd/single/single-future-option')\nmarketData = getMarketData(symbol='E2A/22M/39250000P.CMG', from_='2022-05-10', to='2022-05-10')\n```\n\n",
        "operationId": "Single Futures Option",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Futures option ticker. Ex: E2A/22M/39250000P.CMG",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                },
                "example": {
                  "status": {
                    "executionTime": null,
                    "recordsFound": 1,
                    "code": null,
                    "urlForDetails": null,
                    "queriesLeftEOD": 10,
                    "queriesLeftIntraday": 400
                  },
                  "query": null,
                  "data": [
                    {
                      "date": "2021-12-22",
                      "symbol": "ES",
                      "option root symbol": "E5C",
                      "Future symbol": "ES/22H.CM",
                      "exchange": "CME",
                      "Future expiration": "2022-03-18",
                      "Adjusted close": 4686.0,
                      "expiration": "12/29/2021",
                      "strike": 4555.0,
                      "Call/Put": "P",
                      "style": "E",
                      "ask": 4.05,
                      "bid": 3.75,
                      "Settlement price": 3.85,
                      "volume": 284,
                      "Open interest": 248
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/dd/intraday/single/equity/option": {
      "get": {
        "tags": [
          "Intraday"
        ],
        "description": "Retrieves single equity options contract intraday data for the requested asset, including National Best Bid and Offer (NBBO), open interest (OI), implied volatility (IV), and greeks. The NBBO is sourced from all exchanges.\n<p>The returned options contract may be any of the following types of options:</p>\n\n* regular options expired on 3rd Friday/Saturday\n* weeklies\n* quarterlies\n* leaps\n\nNon-standard options, issued after corporate actions, are **not** included in the data.\n| Example Request | http://restapi.ivolatility.com/dd/intraday/single/equity/option?username=your_IVol_username&password=your_IVol_password&symbol=SPY&date=2021-09-20&expDate=2022-06-17&strike=450&optType=ALL&minuteType=MINUTE_15 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/dd/intraday/single/equity/option')\nmarketData = getMarketData(symbol='SPY', date='2021-09-20', expDate='2022-06-17', strike='450', optType='CALL', minuteType='MINUTE_15')\n```\n\n",
        "operationId": "INTRD Single Equity Options Contract with Raw IV&Greeks_1",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity ticker. Ex: AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "expDate",
            "in": "query",
            "description": "Date of equity option's expiration, expressed in yyyy-mm-dd format.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "strike",
            "in": "query",
            "description": "Equity option's strike price",
            "required": true,
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "optType",
            "in": "query",
            "description": "Option type must either be CALL or PUT",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "CALL",
                "PUT",
                "ALL"
              ]
            }
          },
          {
            "name": "minuteType",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "MINUTE_1",
                "MINUTE_5",
                "MINUTE_15",
                "MINUTE_30",
                "HOUR",
                "CUSTOM"
              ]
            }
          },
          {
            "name": "minutes",
            "in": "query",
            "description": "Comma separated list of required minutes. Use it when minuteType is set to CUSTOM.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityOptions"
                },
                "example": "2021-12-20 10:00:00,627,SPY,2021-12-20,235,C,A,SPY   211220C00235000,2.186E2,2.192E2,2021-12-20 09:59:47,2021-12-20 09:59:47,20,20,C2,C2,0,6.379E-1,4.54E2,9.999E-1,0E0,0E0,0E0,1.68E-3,-1E0,1.548E-1,2021-12-20 09:59:52\n2021-12-20 10:00:00,627,SPY,2021-12-20,235,P,A,SPY   211220P00235000,0E0,1E-2,2021-12-20 09:59:38,2021-12-20 09:59:45,0,3515,YM,Y,0,5.157E-1,4.54E2,0E0,0E0,0E0,0E0,0E0,-1E0,1.548E-1,2021-12-20 09:59:52\n"
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityOptions"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityOptions"
                }
              }
            }
          }
        }
      }
    },
    "/dd/intraday/single-equity-optionsymbol-rawiv": {
      "get": {
        "tags": [
          "ㅤIntraday Equity Options"
        ],
        "description": "Retrieves intraday data for the specified equity options contract. Data includes National Best Bid and Offer (NBBO), open interest (OI), implied volatility (IV), and greeks. The NBBO is sourced from all exchanges.\n<p>The specified options contract may be any of the following types of options:</p>\n\n* regular options expired on 3rd Friday/Saturday\n* weeklies\n* quarterlies\n* leaps\n\nNon-standard options, issued after corporate actions, are **not** included in the data.\n| Example Request | [http://restapi.ivolatility.com/equities/intraday/single-equity-optionsymbol-raw-iv?username=your_IVol_username&password=your_IVol_password&optionSymbol=SPY%20%20%20211220P00235000&date=2021-12-20&minuteType=MINUTE_15]<br>OR<br>[http://restapi.ivolatility.com/equities/intraday/single-equity-optionsymbol-raw-iv?username=your_IVol_username&password=your_IVol_password&optionSymbol=SPY%20%20%20211220P00235000&from=2021-11-20&from=2021-12-20&minuteType=MINUTE_15] | \n|-----------------| — |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/equities/intraday/single-equity-optionsymbol-raw-iv')\nmarketData = getMarketData(optionSymbol='SPY 211220P00235000', date='2021-12-20', minuteType='MINUTE_15')\n#OR:\nmarketData = getMarketData(optionSymbol='SPY 211220P00235000', from='2021-11-20', to='2021-12-20', minuteType='MINUTE_15')\n```\n\n",
        "operationId": "INTRD Single Equity Option Symbol with Raw IV&Greeks",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optionSymbol",
            "in": "query",
            "description": "Option symbol. Ex: SPY 211220P00235000",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, expressed in yyyy-mm-dd format.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, expressed in yyyy-mm-dd format.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, expressed in yyyy-mm-dd format.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "minuteType",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "MINUTE_1",
                "MINUTE_5",
                "MINUTE_15",
                "MINUTE_30",
                "HOUR",
                "CUSTOM"
              ]
            }
          },
          {
            "name": "minutes",
            "in": "query",
            "description": "Comma separated list of required minutes. Use it when minuteType is set to CUSTOM.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityOptions"
                },
                "example": "2021-12-20 10:00:00,627,SPY,2021-12-20,235,C,A,SPY 211220C00235000,2.186E2,2.192E2,2021-12-20 09:59:47,2021-12-20 09:59:47,20,20,C2,C2,0,6.379E-1,4.54E2,9.999E-1,0E0,0E0,0E0,1.68E-3,-1E0,1.548E-1,2021-12-20 09:59:52\n2021-12-20 10:00:00,627,SPY,2021-12-20,235,P,A,SPY 211220P00235000,0E0,1E-2,2021-12-20 09:59:38,2021-12-20 09:59:45,0,3515,YM,Y,0,5.157E-1,4.54E2,0E0,0E0,0E0,0E0,0E0,-1E0,1.548E-1,2021-12-20 09:59:52\n"
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityOptions"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityOptions"
                }
              }
            }
          }
        }
      }
    },
    "/dd/intraday/equity/prices": {
      "get": {
        "tags": [
          "Intraday"
        ],
        "description": "Retrieves intraday historical prices of stocks, indexes, and ETFs for the requested frequency.\n<p>Prices are not adjusted for splits and dividends. Information about all corporate actions is available in a separate end of the day tables (Splits, CorpActions).\n\n| Example Request | http://restapi.ivolatility.com/dd/intraday/equity/prices?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&date=2021-12-16&minuteType=HOUR | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/dd/intraday/equity/prices')\nmarketData = getMarketData(symbol='AAPL', date='2021-12-16', minuteType='HOUR')\n```\n\n",
        "operationId": "INTRD Equity Quotes",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity ticker. Ex: AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "minuteType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "MINUTE_1",
                "MINUTE_5",
                "MINUTE_15",
                "MINUTE_30",
                "HOUR",
                "CUSTOM"
              ]
            }
          },
          {
            "name": "minutes",
            "in": "query",
            "description": "Comma separated list of required minutes. Use it when minuteType is set to CUSTOM.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityPrices"
                },
                "example": {
                  "status": {
                    "executionTime": 2433,
                    "recordsFound": 7,
                    "code": "DONE",
                    "urlForDetails": null,
                    "queriesLeftEOD": 10,
                    "queriesLeftIntraday": 400
                  },
                  "query": {
                    "requestUUID": "175e8898-01f8-4f32-9c10-3aa1dd34b90a"
                  },
                  "data": [
                    {
                      "timestamp": "2021-12-16 10:00:00",
                      "stockId": 799,
                      "stockSymbol": "AAPL",
                      "type": "S",
                      "currency": "USD",
                      "bidPrice": 176.6,
                      "askPrice": 176.62,
                      "lastPrice": 176.6036,
                      "bidDateTime": "2021-12-16 09:59:43",
                      "askDateTime": "2021-12-16 09:59:43",
                      "lastDateTime": "2021-12-16 09:59:43",
                      "bidSize": 6,
                      "askSize": 3,
                      "lastSize": 400,
                      "bidExchange": "DX",
                      "askExchange": "BT",
                      "lastExchange": "QD",
                      "volume": 21854837,
                      "calcTimestamp": "2021-12-16 09:59:47"
                    },
                    {
                      "timestamp": "2021-12-16 11:00:00",
                      "stockId": 799,
                      "stockSymbol": "AAPL",
                      "type": "S",
                      "currency": "USD",
                      "bidPrice": 175.72,
                      "askPrice": 175.73,
                      "lastPrice": 175.73,
                      "bidDateTime": "2021-12-16 10:59:47",
                      "askDateTime": "2021-12-16 10:59:47",
                      "lastDateTime": "2021-12-16 10:59:47",
                      "bidSize": 4,
                      "askSize": 4,
                      "lastSize": 169,
                      "bidExchange": "Q",
                      "askExchange": "BT",
                      "lastExchange": "QD",
                      "volume": 48993703,
                      "calcTimestamp": "2021-12-16 10:59:49"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityPrices"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityPrices"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityPrices"
                }
              }
            }
          }
        }
      }
    },
    "/dd/intraday/equity/options": {
      "get": {
        "tags": [
          "Intraday"
        ],
        "description": "Retrieves intraday equity options chain data for the requested asset, including National Best Bid and Offer (NBBO), open interest (OI), implied volatility (IV), and greeks. The NBBO is sourced from all exchanges.\n<p>The returned data includes all traded expirations and strikes for the following types of options:</p>\n\n* regular options expired on 3rd Friday/Saturday\n* weeklies\n* quarterlies\n* leaps\n\nNon-standard options, issued after corporate actions, are **not** included in the data.\n| Example Request | http://restapi.ivolatility.com/dd/intraday/equity/options?username=your_IVol_username&password=your_IVol_password&symbol=SPY&date=2021-09-20&minuteType=MINUTE_15 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/dd/intraday/equity/options')\nmarketData = getMarketData(symbol='SPY', date='2021-09-20', minuteType='MINUTE_15')\n```\n\n",
        "operationId": "INTRD Equity Options Data with Raw IV&Greeks_1",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity ticker. Ex: AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "expDate",
            "in": "query",
            "description": "Date of equity option's expiration, expressed in yyyy-mm-dd format.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "strike",
            "in": "query",
            "description": "Equity option's strike price",
            "required": false,
            "schema": {
              "type": "number",
              "format": "float"
            }
          },
          {
            "name": "optType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "CALL",
                "PUT",
                "ALL"
              ]
            }
          },
          {
            "name": "minuteType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "MINUTE_1",
                "MINUTE_5",
                "MINUTE_15",
                "MINUTE_30",
                "HOUR",
                "CUSTOM"
              ]
            }
          },
          {
            "name": "minutes",
            "in": "query",
            "description": "Comma separated list of required minutes. Use it when minuteType is set to CUSTOM.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityOptions"
                },
                "example": "2021-12-20 10:00:00,627,SPY,2021-12-20,235,C,A,SPY   211220C00235000,2.186E2,2.192E2,2021-12-20 09:59:47,2021-12-20 09:59:47,20,20,C2,C2,0,6.379E-1,4.54E2,9.999E-1,0E0,0E0,0E0,1.68E-3,-1E0,1.548E-1,2021-12-20 09:59:52\n2021-12-20 10:00:00,627,SPY,2021-12-20,235,P,A,SPY   211220P00235000,0E0,1E-2,2021-12-20 09:59:38,2021-12-20 09:59:45,0,3515,YM,Y,0,5.157E-1,4.54E2,0E0,0E0,0E0,0E0,0E0,-1E0,1.548E-1,2021-12-20 09:59:52\n"
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityOptions"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityOptions"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseIntradayEquityOptions"
                }
              }
            }
          }
        }
      }
    },
    "/dd/eod/single-stock-option-raw-iv": {
      "get": {
        "tags": [
          "End-Of-Day"
        ],
        "description": "Retrieves EOD single equity option data, including National Best Bid and Offer (NBBO), volume, and open interest (OI), implied volatility (IV), and greeks. The NBBO is sourced from all exchanges.\n* US data starts from November 2000, SPX - from 1990;\n* European data - from 4/19/2011;\n* Asian data, including ASX and HKEX – from 6/12/2013, NSX – from 4/24/2016, OSE/TSE – from 7/18/2016.\n\n| Example Request | http://restapi.ivolatility.com/dd/eod/single-stock-option-raw-iv?username=your_IVol_username&password=your_IVol_password&option_id=117703987&symbol=SPX%20%20%251219C04100000&from=2022-09-29&to=2022-10-30 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/dd/eod/single-stock-option-raw-iv')\nmarketData = getMarketData(option_id=117703987, symbol='SPX   251219C04100000', from_='2022-09-29', to='2022-10-30')\n```\n\n",
        "operationId": "Single Options Contract Raw IV",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "option_id",
            "in": "query",
            "description": "Option id. Ex: 117703987",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity option ticker. Ex: SPX   251219C04100000",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                },
                "example": {
                  "status": {
                    "executionTime": 1602,
                    "recordsFound": 2,
                    "code": null,
                    "urlForDetails": null,
                    "queriesLeftEOD": 999,
                    "queriesLeftIntraday": 1000
                  },
                  "query": {
                    "requestUUID": null
                  },
                  "data": [
                    {
                      "symbol": "SPX",
                      "exchange": "CBOE",
                      "date": "2021-12-15",
                      "Adjusted close": 4668.67,
                      "option symbol": "SPX   251219C04100000",
                      "expiration": "2025-12-18",
                      "strike": 4100.0,
                      "Call/Put": "C",
                      "style": "E",
                      "ask": 1243.9,
                      "bid": 943.9,
                      "volume": 0,
                      "open interest": 0,
                      "Unadjusted": 4668.67
                    },
                    {
                      "symbol": "SPX",
                      "exchange": "CBOE",
                      "date": "2021-12-16",
                      "Adjusted close": 4620.64,
                      "option symbol": "SPX   251219C04100000",
                      "expiration": "2025-12-18",
                      "strike": 4100.0,
                      "Call/Put": "C",
                      "style": "E",
                      "ask": 1190.2,
                      "bid": 930.5,
                      "volume": 0,
                      "open interest": 0,
                      "Unadjusted": 4620.64
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseMapStringObject"
                }
              }
            }
          }
        }
      }
    },
    "/dd/eod/nearest-option-tickers": {
      "get": {
        "tags": [
          "End-Of-Day"
        ],
        "description": "Retrieves two nearest options tickers for the provided equity ticker and days to expiration.\n* Moneyness: -50% to 0% with 5% step (OTM puts), 0% to 50% with 5% step (OTM calls)\n* <code>delta</code> must be positive when <code>callPut='C'</code>, or negative when <code>callPut='P'</code>\n\n<p>Note: <code>moneyness</code> takes precedence over <code>delta</code>\n\n| Example Request | http://restapi.ivolatility.com/dd/eod/nearest-option-tickers?username=your_IVol_username&password=your_IVol_password&symbol=TQQQ&dte=100&moneyness=5&callPut=C<br>OR<br>http://restapi.ivolatility.com/dd/eod/nearest-option-tickers?username=your_IVol_username&password=your_IVol_password&symbol=TQQQ&startingDate=2022-03-15&dte=100&delta=-.9&callPut=P | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/dd/eod/nearest-option-tickers')\nmarketData = getMarketData(symbol='TQQQ', startingDate='2022-03-15', dte=100, moneyness=5, callPut='C')\n#OR:\nmarketData = getMarketData(symbol='TQQQ', dte=100, delta=-.9, callPut='P')\n```\n\n",
        "operationId": "Equity Options Finder_1",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity ticker. Ex: AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startingDate",
            "in": "query",
            "description": "Starting date from which to calculate the days to expiration, specified in yyyy-mm-dd format. By default, starting date is the current date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "dte",
            "in": "query",
            "description": "Days to expiration, i.e. expiration_date - current_date.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "moneyness",
            "in": "query",
            "description": "Equity option's moneyness",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "delta",
            "in": "query",
            "description": "Equity option's delta",
            "required": false,
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "callPut",
            "in": "query",
            "description": "Call (C) or Put (P)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OptionSeries"
                },
                "example": {
                  "status": {
                    "code": "DONE",
                    "recordsFound": 2
                  },
                  "query": {
                    "requestUUID": null
                  },
                  "data": [
                    {
                      "callPut": "C",
                      "stockSymbol": "AAPL",
                      "optionSymbol": "AAPL 221021C00100000",
                      "strike": 100,
                      "expirationDate": "2022-10-21"
                    },
                    {
                      "callPut": "C",
                      "stockSymbol": "AAPL",
                      "optionSymbol": "AAPL 221021C00105000",
                      "strike": 105,
                      "expirationDate": "2022-10-21"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/dd/eod/futures/rawiv": {
      "get": {
        "tags": [
          "End-Of-Day"
        ],
        "description": "Retrieves EOD implied volatilities for the requested underlying future's entire options chain on the specified dates. Data also includes the National Best Bid and Offer (NBBO), open interest (OI), implied volatility (IV), and greeks. The NBBO is sourced from all exchanges. \n\n<p>The returned data includes all traded expirations and strikes for the following types of options:</p>\n\n* regular options expired on 3rd Friday/Saturday\n* weeklies\n* quarterlies\n* leaps\n\nNon-standard options, issued after corporate actions, are **not** included in the data.\n\n* Bid/ask prices<sup>1</sup> for US data start from 5/22/2014\n* European data - from 4/19/2011;\n* Asian data, including ASX and HKEX – from 6/12/2013, NSX – from 4/24/2016, OSE/TSE – from 7/18/2016.\n\nFutures options data for the Canadian market is **not** available.\n<p><sup>1</sup> The most recent bid/ask prices just before market close. If there were no updates to bid/ask prices before the close, these prices are not recorded and cleared by the exchange.\n\n| Example Request | http://restapi.ivolatility.com/dd/eod/futures/rawiv?username=your_IVol_username&password=your_IVol_password&symbol=ES&date=2021-12-16<br>OR<br>http://restapi.ivolatility.com/dd/eod/futures/rawiv?username=your_IVol_username&password=your_IVol_password&symbol=ES&from=2021-12-10&to=2021-12-17 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/dd/eod/futures/rawiv')\nmarketData = getMarketData(symbol='ES', date='2021-12-16')\n#OR:\nmarketData = getMarketData(symbol='ES', from_='2021-12-10', to='2021-12-17')\n```\n\n",
        "operationId": "Futures Options Raw IV",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Future's ticker. Ex: ES",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Future's region",
            "required": false,
            "schema": {
              "type": "string",
              "default": "USA",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesRawIv"
                },
                "example": "1,2021-12-16 00:00:00,ES,ES,ES/21Z.CM,CME,2021-12-17 00:00:00,4668.75,12/17/2021,700,C,A,0,0,3968.75,-1,0.5,0,5,1,0,0,0\n2,2021-12-16 00:00:00,ES,ES,ES/21Z.CM,CME,2021-12-17 00:00:00,4668.75,12/17/2021,700,P,A,0.05,0,0.05,-1,0.5,0,11188,0,0,0,0\n"
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesRawIv"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesRawIv"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesRawIv"
                }
              }
            }
          }
        }
      }
    },
    "/dd/eod/futures/prices": {
      "get": {
        "tags": [
          "End-Of-Day"
        ],
        "description": "Retrieves historical EOD futures chain data for the requested future's root symbol on the specified dates. Data includes the National Best Bid and Offer (NBBO), OHLC, open interest (OI), volume, and expiration date. The NBBO is sourced from all exchanges.\n<br>Futures data for the Canadian market is **not** available.\n\n| Example Request | http://restapi.ivolatility.com/dd/eod/futures/prices?username=your_IVol_username&password=your_IVol_password&symbol=ES&date=2021-12-16<br>OR<br>http://restapi.ivolatility.com/dd/eod/futures/prices?username=your_IVol_username&password=your_IVol_password&symbol=ES&from=2021-12-10&to=2021-12-17 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/dd/eod/futures/prices')\nmarketData = getMarketData(symbol='AAPL', date='2021-12-16')\n#OR:\nmarketData = getMarketData(symbol='ES', from_='2021-12-10', to='2021-12-17')\n```\n\n",
        "operationId": "Futures Prices",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Future's ticker. Ex: ES",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Future's region",
            "required": false,
            "schema": {
              "type": "string",
              "default": "USA",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesPrices"
                },
                "example": {
                  "status": {
                    "executionTime": 4884,
                    "recordsFound": 13,
                    "code": "DONE",
                    "urlForDetails": null,
                    "queriesLeftEOD": 10,
                    "queriesLeftIntraday": 400
                  },
                  "query": {
                    "requestUUID": null
                  },
                  "data": [
                    {
                      "date": "2021-12-16 00:00:00",
                      "symbol": "ES",
                      "exchange": "CME",
                      "bid": 4674.25,
                      "ask": 4675.25,
                      "volume": 435986,
                      "record_no": 1,
                      "future_symbol": "ES/21Z.CM",
                      "future_expiration": "2021-12-17 00:00:00",
                      "open_price": 4711.5,
                      "high_price": 4715.25,
                      "low_price": 4651.25,
                      "close_price": 4668.75,
                      "open_interest": 398267
                    },
                    {
                      "date": "2021-12-16 00:00:00",
                      "symbol": "ES",
                      "exchange": "CME",
                      "bid": 4665.0,
                      "ask": 4665.25,
                      "volume": 2151049,
                      "record_no": 2,
                      "future_symbol": "ES/22H.CM",
                      "future_expiration": "2022-03-18 00:00:00",
                      "open_price": 4702.75,
                      "highPrice": null,
                      "low_price": 4642.0,
                      "close_price": 4659.25,
                      "open_interest": 2227532
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesPrices"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesPrices"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesPrices"
                }
              }
            }
          }
        }
      }
    },
    "/dd/eod/futures/optnbbo": {
      "get": {
        "tags": [
          "End-Of-Day"
        ],
        "description": "Retrieves EOD National Best Bid and Offer (NBBO) for the requested underlying future's entire options chain for the specified dates. The NBBO is sourced from all exchanges. \n\n* Bid/ask prices<sup>1</sup> for US data start from 5/22/2014\n* European data - from 4/19/2011;\n* Asian data, including ASX and HKEX – from 6/12/2013, NSX – from 4/24/2016, OSE/TSE – from 7/18/2016.\n\nFutures options data for the Canadian market is **not** available.\n<p><sup>1</sup> The most recent bid/ask prices just before market close. If there were no updates to bid/ask prices before the close, these prices are not recorded and cleared by the exchange.\n\n| Example Request | http://restapi.ivolatility.com/dd/eod/futures/optnbbo?username=your_IVol_username&password=your_IVol_password&symbol=ES&date=2021-12-16<br>OR<br>http://restapi.ivolatility.com/dd/eod/futures/optnbbo?username=your_IVol_username&password=your_IVol_password&symbol=ES&from=2021-12-10&to=2021-12-17 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/dd/eod/futures/optnbbo')\nmarketData = getMarketData(symbol='ES', date='2021-12-16')\n#OR:\nmarketData = getMarketData(symbol='ES', from_='2021-12-10', to='2021-12-17')\n```\n\n",
        "operationId": "Futures Options NBBO",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Future's ticker. Ex: ES",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Future's region",
            "required": false,
            "schema": {
              "type": "string",
              "default": "USA",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesOptnbbo"
                },
                "example": "1,2021-12-16 00:00:00,ES,ES,ES/21Z.CM,CME,2021-12-17 00:00:00,4668.75,12/17/2021,700,C,A,0,0,3968.75,0,5\n2,2021-12-16 00:00:00,ES,ES,ES/21Z.CM,CME,2021-12-17 00:00:00,4668.75,12/17/2021,700,P,A,0.05,0,0.05,0,11188\n"
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesOptnbbo"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesOptnbbo"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesOptnbbo"
                }
              }
            }
          }
        }
      }
    },
    "/dd/eod/futures/ivx": {
      "get": {
        "tags": [
          "End-Of-Day"
        ],
        "description": "Retrieves the Implied Volatility Index (averaged implied volatility) for the requested future's root symbol on the specified dates.\n<p>The IVIndex (IVX) was introduced by IVolatlity&copy; almost 10 years ago. Using raw IV data, the IVX is calculated with a proprietary weighting technique, factoring the Delta and Vega of each option. In total, 8 ATM options (4 calls and 4 puts) are used within each expiration to calculate the Call, Put and Mean Implied Volatility of each stock. The IVIndex is normalized to fixed tenors<sup>1</sup> (7, 14, 21, 30, 60, 90, 120, 150, 180, 270, 360, 720, 1080 days).\n\n<p><sup>1</sup> Note: 7, 14, 21 and 270-day tenors start from 10/10/2019\n\n| Example Request | http://restapi.ivolatility.com/dd/eod/futures/ivx?username=your_IVol_username&password=your_IVol_password&symbol=ES&date=2021-12-16<br>OR<br>http://restapi.ivolatility.com/dd/eod/futures/ivx?username=your_IVol_username&password=your_IVol_password&symbol=ES&from=2021-12-10&to=2021-12-17 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/dd/eod/futures/ivx')\nmarketData = getMarketData(symbol='ES', date='2021-12-16')\n#OR:\nmarketData = getMarketData(symbol='ES', from_='2021-12-10', to='2021-12-17')\n```\n\n",
        "operationId": "Futures IVX",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Future's ticker. Ex: ES",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Future's region",
            "required": false,
            "schema": {
              "type": "string",
              "default": "USA",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesIvx"
                },
                "example": {
                  "status": {
                    "executionTime": 5179,
                    "recordsFound": 1,
                    "code": "DONE",
                    "urlForDetails": null,
                    "queriesLeftEOD": 10,
                    "queriesLeftIntraday": 400
                  },
                  "query": {
                    "requestUUID": null
                  },
                  "data": [
                    {
                      "date": "2021-12-16 00:00:00",
                      "symbol": "ES",
                      "exchange": "CME",
                      "record_no": 1,
                      "30d_iv_call": "0.165966",
                      "30d_iv_put": "0.165966",
                      "30d_iv_mean": "0.165966",
                      "60d_iv_call": "0.176082",
                      "60d_iv_put": "0.176080",
                      "60d_iv_mean": "0.176081",
                      "90d_iv_call": "0.230102",
                      "90d_iv_put": "0.230650",
                      "90d_iv_mean": "0.230376",
                      "120d_iv_call": "0.190328",
                      "120d_iv_put": "0.190332",
                      "120d_iv_mean": "0.190330",
                      "150d_iv_call": "0.194756",
                      "150d_iv_put": "0.194761",
                      "150d_iv_mean": "0.194759",
                      "180d_iv_call": "0.196489",
                      "180d_iv_put": "0.196512",
                      "180d_iv_mean": "0.196501",
                      "270d_iv_call": "0.203128",
                      "270d_iv_put": "0.203141",
                      "270d_iv_mean": "0.203135",
                      "360d_iv_call": "0.204792",
                      "360d_iv_put": "0.204815",
                      "360d_iv_mean": "0.204803",
                      "720d_iv_call": "0.202891",
                      "720d_iv_put": "0.202913",
                      "720d_iv_mean": "0.202902",
                      "1080d_iv_call": "0.202891",
                      "1080d_iv_put": "0.202913",
                      "1080d_iv_mean": "0.202902"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesIvx"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesIvx"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesIvx"
                }
              }
            }
          }
        }
      }
    },
    "/dd/eod/futures/ivs": {
      "get": {
        "tags": [
          "End-Of-Day"
        ],
        "description": "Retrieves the Implied Volatility Surface (normalized by maturities and moneyness) for the requested future's root symbol on the specified dates.\n* Tenors<sup>1</sup>: 7, 14, 21, 30, 60, 90, 120, 150, 180, 270, 360, 720, 1080 days\n* Moneyness: -50% to 0% with 5% step (OTM puts), 0% to 50% with 5% step (OTM calls)\n* Only out-of-the-money options are used for building the Volatility Surface. I.e.:\n    * Puts for virtual strikes 50, 55, 60, ..., 100 % of the current underlying price\n    * Calls for virtual strikes 100, 105, 110, ..., 150 % of the current underlying price\n\n<p><sup>1</sup> Note: 7, 14, 21, 270, 360, 720, 1080-day tenors start from 10/10/2019\n\n| Example Request | http://restapi.ivolatility.com/dd/eod/futures/ivs?username=your_IVol_username&password=your_IVol_password&symbol=ES&date=2021-12-16<br>OR<br>http://restapi.ivolatility.com/dd/eod/futures/ivs?username=your_IVol_username&password=your_IVol_password&symbol=ES&from=2021-12-10&to=2021-12-17 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/dd/eod/futures/ivs')\nmarketData = getMarketData(symbol='ES', date='2021-12-16')\n#OR:\nmarketData = getMarketData(symbol='ES', from_='2021-12-10', to='2021-12-17')\n```\n\n",
        "operationId": "Futures IV Surface",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Future's ticker. Ex: ES",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Future's region",
            "required": false,
            "schema": {
              "type": "string",
              "default": "USA",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesIvs"
                },
                "example": {
                  "status": {
                    "executionTime": 8399,
                    "recordsFound": 234,
                    "code": "DONE",
                    "urlForDetails": null,
                    "queriesLeftEOD": 10,
                    "queriesLeftIntraday": 400
                  },
                  "query": {
                    "requestUUID": null
                  },
                  "data": [
                    {
                      "date": "2021-12-16 00:00:00",
                      "symbol": "ES",
                      "exchange": "CME",
                      "period": 30,
                      "iv": 0.165382,
                      "record_no": 1,
                      "out-of-the-money_%": 0,
                      "call/put": "C"
                    },
                    {
                      "date": "2021-12-16 00:00:00",
                      "symbol": "ES",
                      "exchange": "CME",
                      "period": 30,
                      "iv": 0.165382,
                      "record_no": 2,
                      "out-of-the-money_%": 0,
                      "call/put": "P"
                    },
                    {
                      "date": "2021-12-16 00:00:00",
                      "symbol": "ES",
                      "exchange": "CME",
                      "period": 60,
                      "iv": 0.175252,
                      "record_no": 3,
                      "out-of-the-money_%": 0,
                      "call/put": "C"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesIvs"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesIvs"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesIvs"
                }
              }
            }
          }
        }
      }
    },
    "/dd/eod/futures/hv": {
      "get": {
        "tags": [
          "End-Of-Day"
        ],
        "description": "Retrieves the historical volatility (HV) data for requested future's symbol on the specified dates.\n* Tenors: 5, 10, 20, 40, 60, 80, 100, 120, 180, 250 days\n\n| Example Request | http://restapi.ivolatility.com/dd/eod/futures/hv?username=your_IVol_username&password=your_IVol_password&symbol=ES&date=2021-12-16<br>OR<br>http://restapi.ivolatility.com/dd/eod/futures/hv?username=your_IVol_username&password=your_IVol_password&symbol=ES&from=2021-12-10&to=2021-12-17 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/dd/eod/futures/hv')\nmarketData = getMarketData(symbol='ES', date='2021-12-16')\n#OR:\nmarketData = getMarketData(symbol='ES', from_='2021-12-10', to='2021-12-17')\n```\n\n",
        "operationId": "Futures Historical Volatility",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Future's ticker. Ex: ES",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Future's region",
            "required": false,
            "schema": {
              "type": "string",
              "default": "USA",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesHv"
                },
                "example": {
                  "status": {
                    "executionTime": 350,
                    "recordsFound": 1,
                    "code": "DONE",
                    "urlForDetails": null,
                    "queriesLeftEOD": 10,
                    "queriesLeftIntraday": 400
                  },
                  "query": {
                    "requestUUID": null
                  },
                  "data": [
                    {
                      "date": "2021-12-16 00:00:00",
                      "symbol": "ES",
                      "exchange": "CME",
                      "price": 4659.25,
                      "record_no": 1,
                      "5d_hv": "0.1851",
                      "10d_hv": "0.1751",
                      "20d_hv": "0.1763",
                      "40d_hv": "0.1343",
                      "60d_hv": "0.1372",
                      "80d_hv": "0.1291",
                      "100d_hv": "0.1203",
                      "120d_hv": "0.1187",
                      "180d_hv": "0.1176",
                      "250d_hv": "0.1273"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesHv"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesHv"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodFuturesHv"
                }
              }
            }
          }
        }
      }
    },
    "/dd/eod/equity/rawiv": {
      "get": {
        "tags": [
          "End-Of-Day"
        ],
        "description": "Retrieves EOD equity options chain data for the requested asset, including National Best Bid and Offer (NBBO), open interest (OI), implied volatility (IV), and greeks. The NBBO is sourced from all exchanges.\n<p>The returned data includes all traded expirations and strikes for the following types of options:</p>\n\n* regular options expired on 3rd Friday/Saturday\n* weeklies\n* quarterlies\n* leaps\n\nNon-standard options, issued after corporate actions, are **not** included in the data.\n| Example Request | http://restapi.ivolatility.com/dd/eod/equity/rawiv?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&date=2021-12-16<br>OR<br>http://restapi.ivolatility.com/dd/eod/equity/rawiv?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&from=2021-12-10&to=2021-12-17 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/dd/eod/equity/rawiv')\nmarketData = getMarketData(symbol='AAPL', date='2021-12-16')\n#OR:\nmarketData = getMarketData(symbol='AAPL', from_='2021-12-10', to='2021-12-17')\n```\n\n",
        "operationId": "Equity Options Raw IV",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity ticker. Ex: AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Equity region",
            "required": false,
            "schema": {
              "type": "string",
              "default": "USA",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityRawIv"
                },
                "example": {
                  "status": {
                    "executionTime": 4492,
                    "recordsFound": 1812,
                    "code": "PENDING",
                    "urlForDetails": "https://cloud.ivolatility.com/api/rest/v2/results?ts=1663224101067&token=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxODg3ODYiLCJsb2dpbiI6ImR2b3JvbnRzb3YiLCJzdXVpZCI6ImEyYTU5MjA0LTNiMDQtNGI2YS05MjdiLTdiMjdmOTBlN2NjZiIsImRhdGEiOiI0NT02XG42OT02XG4xMDIwPTdcbjEzMD02XG40NTE9NlxuMTEwPTZcbjc3Nz02XG43MD03XG45Mz02XG41MD03XG4xMj02XG4xMDEwPTZcbjE0MD02XG4xMjA9NlxuMTAwOD02XG4xMDA9NlxuMTEwNT02XG4xMDA1PTdcbjEwMDQ9NlxuMTQwMD03XG41PTdcbjY9NlxuMzY5PTZcbjkwMD03XG45PTdcbjkwMT03XG45MDI9NlxuOTAzPTdcbjQwPTZcbjIwPTdcbjEwMDk9NiIsImlhdCI6MTY2MzIyNDA2MCwiZXhwIjoxNjYzMjI1ODYwfQ.THSyaWkQqL7jdcbQ8JxP_lIVaiOY8qLpA9wUyM9mQfI&path=/your_IVol_username/.fc6c7cab-3f44-3241-9011-01d2dcb7703a/",
                    "queriesLeftEOD": 999,
                    "queriesLeftIntraday": 1000
                  },
                  "query": {
                    "requestUUID": "fc6c7cab-3f44-3241-9011-01d2dcb7703a"
                  },
                  "data": [

                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityRawIv"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityRawIv"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityRawIv"
                }
              }
            }
          }
        }
      }
    },
    "/dd/eod/equity/prices": {
      "get": {
        "tags": [
          "End-Of-Day"
        ],
        "description": "Retrieves historical EOD price and volume data for the requested financial instrument, i.e. stock, ETF, index.\n\n| Example Request | http://restapi.ivolatility.com/dd/eod/equity/prices?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&date=2021-12-16 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/dd/eod/equity/prices')\nmarketData = getMarketData(symbol='AAPL', from_='2021-12-10', to='2021-12-17')\n```\n\n",
        "operationId": "Equity Prices",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity ticker. Ex: AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters from/to OR date are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters from/to OR date are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters from/to OR date are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Equity region",
            "required": false,
            "schema": {
              "type": "string",
              "default": "USA",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityPrices"
                },
                "example": {
                  "status": {
                    "executionTime": 271,
                    "recordsFound": 1,
                    "code": "DONE",
                    "urlForDetails": null,
                    "queriesLeftEOD": 10,
                    "queriesLeftIntraday": 400
                  },
                  "query": {
                    "requestUUID": null
                  },
                  "data": [
                    {
                      "date": "2021-12-16 00:00:00",
                      "symbol": "AAPL",
                      "exchange": "NASDAQ",
                      "open": 179.28,
                      "high": 181.14,
                      "low": 170.75,
                      "close": 172.26,
                      "volume": 1.49421718E8,
                      "record_no": 1,
                      "unadjusted_close": 172.26
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityPrices"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityPrices"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityPrices"
                }
              }
            }
          }
        }
      }
    },
    "/dd/eod/equity/optnbbo": {
      "get": {
        "tags": [
          "End-Of-Day"
        ],
        "description": "Retrieves EOD equity options chain data for the requested asset, including National Best Bid and Offer (NBBO), open interest (OI), and volume. The NBBO is sourced from all exchanges.\n\n* US data starts from November 2000, SPX - from 1990;\n* European data - from 4/19/2011;\n* Asian data, including ASX and HKEX – from 6/12/2013, NSX – from 4/24/2016, OSE/TSE – from 7/18/2016.\n\n| Example Request | http://restapi.ivolatility.com/dd/eod/equity/optnbbo?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&date=2021-12-16 <br>OR<br>http://restapi.ivolatility.com/dd/eod/equity/optnbbo?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&from=2021-12-10&to=2021-12-17 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/dd/eod/equity/optnbbo')\nmarketData = getMarketData(symbol='AAPL', date='2021-12-16')\n#OR:\nmarketData = getMarketData(symbol='AAPL', from_='2021-12-10', to='2021-12-17')\n```\n\n",
        "operationId": "Equity Options NBBO",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity ticker. Ex: AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Equity region",
            "required": false,
            "schema": {
              "type": "string",
              "default": "USA",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityOptnbbo"
                },
                "example": "1,AAPL,NASDAQ,2021-12-16 00:00:00,172.26,AAPL  211217C00040000,2021-12-17 00:00:00,40,C,A,133.45,131.6,8,38,172.26\n2,AAPL,NASDAQ,2021-12-16 00:00:00,172.26,AAPL  211217P00040000,2021-12-17 00:00:00,40,P,A,0.01,0,9,76,172.26\n"
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityOptnbbo"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityOptnbbo"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityOptnbbo"
                }
              }
            }
          }
        }
      }
    },
    "/dd/eod/equity/ivx": {
      "get": {
        "tags": [
          "End-Of-Day"
        ],
        "description": "Retrieves the Implied Volatility Index (averaged implied volatility) for the asset.\n<p>The IVIndex (IVX) was introduced by IVolatlity&copy; almost 10 years ago. Using raw IV data, the IVX is calculated with a proprietary weighting technique, factoring the Delta and Vega of each option. In total, 8 ATM options (4 calls and 4 puts) are used within each expiration to calculate the Call, Put and Mean Implied Volatility of each stock. The IVIndex is normalized to fixed tenors<sup>1</sup> (7, 14, 21, 30, 60, 90, 120, 150, 180, 270, 360, 720, 1080 days).\n\n<p><sup>1</sup> Note: 7, 14, 21 and 270-day tenors start from 10/10/2019\n\n| Example Request | http://restapi.ivolatility.com/dd/eod/equity/ivx?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&date=2021-12-16<br>OR<br>http://restapi.ivolatility.com/dd/eod/equity/ivx?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&from=2021-12-10&to=2021-12-17 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/dd/eod/equity/ivx')\nmarketData = getMarketData(symbol='AAPL', date='2021-12-16')\n#OR:\nmarketData = getMarketData(symbol='AAPL', from_='2021-12-10', to='2021-12-17')\n```\n\n",
        "operationId": "Equities IVX",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity ticker. Ex: AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Equity region",
            "required": false,
            "schema": {
              "type": "string",
              "default": "USA",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityIvx"
                },
                "example": {
                  "status": {
                    "executionTime": 365,
                    "recordsFound": 1,
                    "code": "DONE",
                    "urlForDetails": null,
                    "queriesLeftEOD": 10,
                    "queriesLeftIntraday": 400
                  },
                  "query": {
                    "requestUUID": null
                  },
                  "data": [
                    {
                      "symbol": "AAPL",
                      "exchange": "NASDAQ",
                      "date": "2021-12-16 00:00:00",
                      "price": 172.26,
                      "record_no": 1,
                      "30d_iv_call": 0.343842,
                      "30d_iv_put": 0.335386,
                      "30d_iv_mean": 0.339614,
                      "60d_iv_call": 0.345657,
                      "60d_iv_put": 0.336009,
                      "60d_iv_mean": 0.340833,
                      "90d_iv_call": 0.330783,
                      "90d_iv_put": 0.322115,
                      "90d_iv_mean": 0.326449,
                      "120d_iv_call": 0.323774,
                      "120d_iv_put": 0.314791,
                      "120d_iv_mean": 0.3192825,
                      "150d_iv_call": 0.327784,
                      "150d_iv_put": 0.316123,
                      "150d_iv_mean": 0.3219535,
                      "180d_iv_call": 0.322598,
                      "180d_iv_put": 0.314325,
                      "180d_iv_mean": 0.3184615,
                      "270d_iv_call": 0.320833,
                      "270d_iv_put": 0.308231,
                      "270d_iv_mean": 0.31453198,
                      "360d_iv_call": 0.32683,
                      "360d_iv_put": 0.303752,
                      "360d_iv_mean": 0.315291,
                      "720d_iv_call": 0.332633,
                      "720d_iv_put": 0.298923,
                      "720d_iv_mean": 0.315778,
                      "1080d_iv_call": 0.333244,
                      "1080d_iv_put": 0.29694,
                      "1080d_iv_mean": 0.315092
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityIvx"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityIvx"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityIvx"
                }
              }
            }
          }
        }
      }
    },
    "/dd/eod/equity/ivs": {
      "get": {
        "tags": [
          "End-Of-Day"
        ],
        "description": "Retrieves the Implied Volatility Surface (normalized by maturities and moneyness) for the asset.\n* Tenors<sup>1</sup>: 7, 14, 21, 30, 60, 90, 120, 150, 180, 270, 360, 720, 1080 days\n* Moneyness: -50% to 0% with 5% step (OTM puts), 0% to 50% with 5% step (OTM calls)\n* Only out-of-the-money options are used for building the Volatility Surface. I.e.:\n    * Puts for virtual strikes 50, 55, 60, ..., 100 % of the current underlying price\n    * Calls for virtual strikes 100, 105, 110, ..., 150 % of the current underlying price\n\n<p><sup>1</sup> Note: 7, 14, 21, 270, 360, 720, 1080-day tenors start from 10/10/2019\n\n| Example Request | http://restapi.ivolatility.com/dd/eod/equity/ivs?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&date=2021-12-16<br>OR<br>http://restapi.ivolatility.com/dd/eod/equity/ivs?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&from=2021-12-10&to=2021-12-17 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/dd/eod/equity/ivs')\nmarketData = getMarketData(symbol='AAPL', date='2021-12-16')\n#OR:\nmarketData = getMarketData(symbol='AAPL', from_='2021-12-10', to='2021-12-17')\n```\n\n",
        "operationId": "Equities IV Surface",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity ticker. Ex: AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Equity region",
            "required": false,
            "schema": {
              "type": "string",
              "default": "USA",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityIvs"
                },
                "example": {
                  "status": {
                    "executionTime": 1772,
                    "recordsFound": 234,
                    "code": "DONE",
                    "urlForDetails": null,
                    "queriesLeftEOD": 10,
                    "queriesLeftIntraday": 400
                  },
                  "query": {
                    "requestUUID": null
                  },
                  "data": [
                    {
                      "symbol": "AAPL",
                      "exchange": "NASDAQ",
                      "date": "2021-12-16 00:00:00",
                      "period": "30",
                      "strike": 172.26,
                      "iv": 0.347413,
                      "delta": 0.520221,
                      "record_no": 1,
                      "out-of-the-money_%": 0,
                      "call/put": "C"
                    },
                    {
                      "symbol": "AAPL",
                      "exchange": "NASDAQ",
                      "date": "2021-12-16 00:00:00",
                      "period": "30",
                      "strike": 172.26,
                      "iv": 0.333215,
                      "delta": -0.480637,
                      "record_no": 2,
                      "out-of-the-money_%": 0,
                      "call/put": "P"
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityIvs"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityIvs"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityIvs"
                }
              }
            }
          }
        }
      }
    },
    "/dd/eod/equity/hv": {
      "get": {
        "tags": [
          "End-Of-Day"
        ],
        "description": "Retrieves the historical volatility (HV) data for requested equity's symbol on the specified dates.\n* Tenors: 10, 20, 30, 60, 90, 120, 150, 180 days\n\n| Example Request | http://restapi.ivolatility.com/dd/eod/equity/hv?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&date=2021-12-16<br>OR<br>http://restapi.ivolatility.com/dd/eod/equity/hv?username=your_IVol_username&password=your_IVol_password&symbol=AAPL&from=2021-12-10&to=2021-12-17 | \n|-----------------| --- |\n\n| Python | \n|--------| \n\n```python\ngetMarketData = ivol.setMethod('/dd/eod/equity/hv')\nmarketData = getMarketData(symbol='AAPL', date='2021-12-16')\n#OR:\nmarketData = getMarketData(symbol='AAPL', from_='2021-12-10', to='2021-12-17')\n```\n\n",
        "operationId": "Equities Historical Volatility",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "User personal login. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "User personal password. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "description": "REST API session token. Parameters <code>username</code>/<code>password</code> OR <code>token</code> are required.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "symbol",
            "in": "query",
            "description": "Equity ticker. Ex: AAPL",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Trading date, specified in yyyy-mm-dd format. Parameters <code>from</code>/<code>to</code> OR <code>date</code> are required.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "region",
            "in": "query",
            "description": "Equity region",
            "required": false,
            "schema": {
              "type": "string",
              "default": "USA",
              "enum": [
                "USA",
                "EUROPE",
                "ASIA",
                "CANADA"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityHv"
                },
                "example": {
                  "status": {
                    "executionTime": 391,
                    "recordsFound": 1,
                    "code": "DONE",
                    "urlForDetails": null,
                    "queriesLeftEOD": 10,
                    "queriesLeftIntraday": 400
                  },
                  "query": {
                    "requestUUID": null
                  },
                  "data": [
                    {
                      "symbol": "AAPL",
                      "exchange": "NASDAQ",
                      "date": "2021-12-16 00:00:00",
                      "price": 172.26,
                      "record_no": 1,
                      "10d_hv": 0.400359,
                      "20d_hv": 0.344236,
                      "30d_hv": 0.294668,
                      "60d_hv": 0.245196,
                      "90d_hv": 0.236368,
                      "120d_hv": 0.225542,
                      "150d_hv": 0.215056,
                      "180d_hv": 0.22135
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "description": "No data found for requested date",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityHv"
                }
              }
            }
          },
          "400": {
            "description": "Parameters are not valid",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityHv"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RestApiResponseEodEquityHv"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Query": {
        "type": "object",
        "properties": {
          "requestUUID": {
            "type": "string"
          }
        }
      },
      "RestApiResponseMapStringObject": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "query": {
            "$ref": "#/components/schemas/Query"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      },
      "Status": {
        "type": "object",
        "properties": {
          "executionTime": {
            "type": "integer",
            "format": "int64"
          },
          "recordsFound": {
            "type": "integer",
            "format": "int64"
          },
          "code": {
            "type": "string"
          },
          "urlForDetails": {
            "type": "string"
          },
          "queriesLeftEOD": {
            "type": "integer",
            "format": "int64"
          },
          "queriesLeftIntraday": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "EodFuturesPrices": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "exchange": {
            "type": "string"
          },
          "bid": {
            "type": "number",
            "format": "double"
          },
          "ask": {
            "type": "number",
            "format": "double"
          },
          "volume": {
            "type": "integer",
            "format": "int64"
          },
          "record_no": {
            "type": "integer",
            "format": "int64"
          },
          "future_symbol": {
            "type": "string"
          },
          "future_expiration": {
            "type": "string"
          },
          "open_price": {
            "type": "number",
            "format": "double"
          },
          "high_price": {
            "type": "number",
            "format": "double"
          },
          "low_price": {
            "type": "number",
            "format": "double"
          },
          "close_price": {
            "type": "number",
            "format": "double"
          },
          "open_interest": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "RestApiResponseEodFuturesPrices": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "query": {
            "$ref": "#/components/schemas/Query"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EodFuturesPrices"
            }
          }
        }
      },
      "EodFuturesRawIv": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "exchange": {
            "type": "string"
          },
          "expiration": {
            "type": "string"
          },
          "strike": {
            "type": "number",
            "format": "double"
          },
          "style": {
            "type": "string"
          },
          "ask": {
            "type": "number",
            "format": "double"
          },
          "bid": {
            "type": "number",
            "format": "double"
          },
          "iv": {
            "type": "number",
            "format": "double"
          },
          "volume": {
            "type": "integer",
            "format": "int32"
          },
          "delta": {
            "type": "number",
            "format": "double"
          },
          "vega": {
            "type": "number",
            "format": "double"
          },
          "gamma": {
            "type": "number",
            "format": "double"
          },
          "theta": {
            "type": "number",
            "format": "double"
          },
          "record_no": {
            "type": "integer",
            "format": "int64"
          },
          "option_root_symbol": {
            "type": "string"
          },
          "future_symbol": {
            "type": "string"
          },
          "future_expiration": {
            "type": "string"
          },
          "adjusted_close": {
            "type": "number",
            "format": "double"
          },
          "call/put": {
            "type": "string"
          },
          "settlement_price": {
            "type": "number",
            "format": "double"
          },
          "iv_interpolated": {
            "type": "number",
            "format": "double"
          },
          "open_interest": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RestApiResponseEodFuturesRawIv": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "query": {
            "$ref": "#/components/schemas/Query"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EodFuturesRawIv"
            }
          }
        }
      },
      "EodFuturesOptnbbo": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "exchange": {
            "type": "string"
          },
          "expiration": {
            "type": "string"
          },
          "strike": {
            "type": "number",
            "format": "double"
          },
          "style": {
            "type": "string"
          },
          "ask": {
            "type": "number",
            "format": "double"
          },
          "bid": {
            "type": "number",
            "format": "double"
          },
          "volume": {
            "type": "number",
            "format": "double"
          },
          "record_no": {
            "type": "integer",
            "format": "int64"
          },
          "option_root_symbol": {
            "type": "string"
          },
          "future_symbol": {
            "type": "string"
          },
          "future_expiration": {
            "type": "string"
          },
          "adjusted_close": {
            "type": "number",
            "format": "double"
          },
          "call/put": {
            "type": "string"
          },
          "settlement_price": {
            "type": "number",
            "format": "double"
          },
          "open_interest": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "RestApiResponseEodFuturesOptnbbo": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "query": {
            "$ref": "#/components/schemas/Query"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EodFuturesOptnbbo"
            }
          }
        }
      },
      "EodFuturesIvx": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "exchange": {
            "type": "string"
          },
          "record_no": {
            "type": "integer",
            "format": "int64"
          },
          "30d_iv_call": {
            "type": "string"
          },
          "30d_iv_put": {
            "type": "string"
          },
          "30d_iv_mean": {
            "type": "string"
          },
          "60d_iv_call": {
            "type": "string"
          },
          "60d_iv_put": {
            "type": "string"
          },
          "60d_iv_mean": {
            "type": "string"
          },
          "90d_iv_call": {
            "type": "string"
          },
          "90d_iv_put": {
            "type": "string"
          },
          "90d_iv_mean": {
            "type": "string"
          },
          "120d_iv_call": {
            "type": "string"
          },
          "120d_iv_put": {
            "type": "string"
          },
          "120d_iv_mean": {
            "type": "string"
          },
          "150d_iv_call": {
            "type": "string"
          },
          "150d_iv_put": {
            "type": "string"
          },
          "150d_iv_mean": {
            "type": "string"
          },
          "180d_iv_call": {
            "type": "string"
          },
          "180d_iv_put": {
            "type": "string"
          },
          "180d_iv_mean": {
            "type": "string"
          },
          "270d_iv_call": {
            "type": "string"
          },
          "270d_iv_put": {
            "type": "string"
          },
          "270d_iv_mean": {
            "type": "string"
          },
          "360d_iv_call": {
            "type": "string"
          },
          "360d_iv_put": {
            "type": "string"
          },
          "360d_iv_mean": {
            "type": "string"
          },
          "720d_iv_call": {
            "type": "string"
          },
          "720d_iv_put": {
            "type": "string"
          },
          "720d_iv_mean": {
            "type": "string"
          },
          "1080d_iv_call": {
            "type": "string"
          },
          "1080d_iv_put": {
            "type": "string"
          },
          "1080d_iv_mean": {
            "type": "string"
          }
        }
      },
      "RestApiResponseEodFuturesIvx": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "query": {
            "$ref": "#/components/schemas/Query"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EodFuturesIvx"
            }
          }
        }
      },
      "EodFuturesIvs": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "exchange": {
            "type": "string"
          },
          "period": {
            "type": "integer",
            "format": "int32"
          },
          "iv": {
            "type": "number",
            "format": "double"
          },
          "record_no": {
            "type": "integer",
            "format": "int64"
          },
          "out-of-the-money_%": {
            "type": "integer",
            "format": "int32"
          },
          "call/put": {
            "type": "string"
          }
        }
      },
      "RestApiResponseEodFuturesIvs": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "query": {
            "$ref": "#/components/schemas/Query"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EodFuturesIvs"
            }
          }
        }
      },
      "EodFuturesHv": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "exchange": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "record_no": {
            "type": "integer",
            "format": "int64"
          },
          "5d_hv": {
            "type": "string"
          },
          "10d_hv": {
            "type": "string"
          },
          "20d_hv": {
            "type": "string"
          },
          "40d_hv": {
            "type": "string"
          },
          "60d_hv": {
            "type": "string"
          },
          "80d_hv": {
            "type": "string"
          },
          "100d_hv": {
            "type": "string"
          },
          "120d_hv": {
            "type": "string"
          },
          "180d_hv": {
            "type": "string"
          },
          "250d_hv": {
            "type": "string"
          }
        }
      },
      "RestApiResponseEodFuturesHv": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "query": {
            "$ref": "#/components/schemas/Query"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EodFuturesHv"
            }
          }
        }
      },
      "OptionSeries": {
        "type": "object",
        "properties": {
          "stockSymbol": {
            "type": "string"
          },
          "optionSymbol": {
            "type": "string"
          },
          "expirationDate": {
            "type": "string",
            "format": "date"
          },
          "strike": {
            "type": "number",
            "format": "double"
          },
          "callPut": {
            "type": "string"
          }
        }
      },
      "IntradayEquityPrices": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string"
          },
          "stockId": {
            "type": "integer",
            "format": "int64"
          },
          "stockSymbol": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "bidPrice": {
            "type": "number",
            "format": "double"
          },
          "askPrice": {
            "type": "number",
            "format": "double"
          },
          "lastPrice": {
            "type": "number",
            "format": "double"
          },
          "bidDateTime": {
            "type": "string"
          },
          "askDateTime": {
            "type": "string"
          },
          "lastDateTime": {
            "type": "string"
          },
          "bidSize": {
            "type": "integer",
            "format": "int32"
          },
          "askSize": {
            "type": "integer",
            "format": "int32"
          },
          "lastSize": {
            "type": "integer",
            "format": "int32"
          },
          "bidExchange": {
            "type": "string"
          },
          "askExchange": {
            "type": "string"
          },
          "lastExchange": {
            "type": "string"
          },
          "volume": {
            "type": "integer",
            "format": "int64"
          },
          "calcTimestamp": {
            "type": "string"
          }
        }
      },
      "RestApiResponseIntradayEquityPrices": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "query": {
            "$ref": "#/components/schemas/Query"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntradayEquityPrices"
            }
          }
        }
      },
      "IntradayEquityOptions": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string"
          },
          "stockId": {
            "type": "integer",
            "format": "int64"
          },
          "stockSymbol": {
            "type": "string"
          },
          "optionExpirationDate": {
            "type": "string"
          },
          "optionStrike": {
            "type": "number",
            "format": "double"
          },
          "optionType": {
            "type": "string"
          },
          "optionStyle": {
            "type": "string"
          },
          "optionSymbol": {
            "type": "string"
          },
          "optionBidPrice": {
            "type": "number",
            "format": "double"
          },
          "optionAskPrice": {
            "type": "number",
            "format": "double"
          },
          "optionBidDateTime": {
            "type": "string"
          },
          "optionAskDateTime": {
            "type": "string"
          },
          "optionBidSize": {
            "type": "integer",
            "format": "int32"
          },
          "optionAskSize": {
            "type": "integer",
            "format": "int32"
          },
          "optionBidExchange": {
            "type": "string"
          },
          "optionAskExchange": {
            "type": "string"
          },
          "optionVolume": {
            "type": "integer",
            "format": "int32"
          },
          "optionIv": {
            "type": "number",
            "format": "double"
          },
          "underlyingPrice": {
            "type": "number",
            "format": "double"
          },
          "optionDelta": {
            "type": "number",
            "format": "double"
          },
          "optionGamma": {
            "type": "number",
            "format": "double"
          },
          "optionTheta": {
            "type": "number",
            "format": "double"
          },
          "optionVega": {
            "type": "number",
            "format": "double"
          },
          "optionRho": {
            "type": "number",
            "format": "double"
          },
          "optionPreIv": {
            "type": "number",
            "format": "double"
          },
          "optionImpliedYield": {
            "type": "number",
            "format": "double"
          },
          "calcTimestamp": {
            "type": "string"
          }
        }
      },
      "RestApiResponseIntradayEquityOptions": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "query": {
            "$ref": "#/components/schemas/Query"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntradayEquityOptions"
            }
          }
        }
      },
      "EodEquityPrices": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "exchange": {
            "type": "string"
          },
          "open": {
            "type": "number",
            "format": "double"
          },
          "high": {
            "type": "number",
            "format": "double"
          },
          "low": {
            "type": "number",
            "format": "double"
          },
          "close": {
            "type": "number",
            "format": "double"
          },
          "volume": {
            "type": "number",
            "format": "double"
          },
          "record_no": {
            "type": "integer",
            "format": "int64"
          },
          "unadjusted_close": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "RestApiResponseEodEquityPrices": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "query": {
            "$ref": "#/components/schemas/Query"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EodEquityPrices"
            }
          }
        }
      },
      "EodEquityRawIv": {
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "exchange": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "expiration": {
            "type": "string"
          },
          "strike": {
            "type": "number",
            "format": "double"
          },
          "style": {
            "type": "string"
          },
          "ask": {
            "type": "number",
            "format": "double"
          },
          "bid": {
            "type": "number",
            "format": "double"
          },
          "iv": {
            "type": "number",
            "format": "double"
          },
          "volume": {
            "type": "integer",
            "format": "int32"
          },
          "delta": {
            "type": "number",
            "format": "double"
          },
          "vega": {
            "type": "number",
            "format": "double"
          },
          "gamma": {
            "type": "number",
            "format": "double"
          },
          "theta": {
            "type": "number",
            "format": "double"
          },
          "rho": {
            "type": "number",
            "format": "double"
          },
          "record_no": {
            "type": "integer",
            "format": "int64"
          },
          "adjusted_close": {
            "type": "number",
            "format": "double"
          },
          "option_symbol": {
            "type": "string"
          },
          "call/put": {
            "type": "string"
          },
          "mean_price": {
            "type": "number",
            "format": "double"
          },
          "open_interest": {
            "type": "integer",
            "format": "int32"
          },
          "stock_price_for_iv": {
            "type": "number",
            "format": "double"
          },
          "*": {
            "type": "string"
          }
        }
      },
      "RestApiResponseEodEquityRawIv": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "query": {
            "$ref": "#/components/schemas/Query"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EodEquityRawIv"
            }
          }
        }
      },
      "EodEquityOptnbbo": {
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "exchange": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "expiration": {
            "type": "string"
          },
          "strike": {
            "type": "number",
            "format": "double"
          },
          "style": {
            "type": "string"
          },
          "ask": {
            "type": "number",
            "format": "double"
          },
          "bid": {
            "type": "number",
            "format": "double"
          },
          "volume": {
            "type": "integer",
            "format": "int32"
          },
          "unadjusted": {
            "type": "number",
            "format": "double"
          },
          "record_no": {
            "type": "integer",
            "format": "int64"
          },
          "adjusted_close": {
            "type": "number",
            "format": "double"
          },
          "option_symbol": {
            "type": "string"
          },
          "call/put": {
            "type": "string"
          },
          "open_interest": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RestApiResponseEodEquityOptnbbo": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "query": {
            "$ref": "#/components/schemas/Query"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EodEquityOptnbbo"
            }
          }
        }
      },
      "EodEquityIvx": {
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "exchange": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "record_no": {
            "type": "integer",
            "format": "int64"
          },
          "30d_iv_call": {
            "type": "number",
            "format": "double"
          },
          "30d_iv_put": {
            "type": "number",
            "format": "double"
          },
          "30d_iv_mean": {
            "type": "number",
            "format": "double"
          },
          "60d_iv_call": {
            "type": "number",
            "format": "double"
          },
          "60d_iv_put": {
            "type": "number",
            "format": "double"
          },
          "60d_iv_mean": {
            "type": "number",
            "format": "double"
          },
          "90d_iv_call": {
            "type": "number",
            "format": "double"
          },
          "90d_iv_put": {
            "type": "number",
            "format": "double"
          },
          "90d_iv_mean": {
            "type": "number",
            "format": "double"
          },
          "120d_iv_call": {
            "type": "number",
            "format": "double"
          },
          "120d_iv_put": {
            "type": "number",
            "format": "double"
          },
          "120d_iv_mean": {
            "type": "number",
            "format": "double"
          },
          "150d_iv_call": {
            "type": "number",
            "format": "double"
          },
          "150d_iv_put": {
            "type": "number",
            "format": "double"
          },
          "150d_iv_mean": {
            "type": "number",
            "format": "double"
          },
          "180d_iv_call": {
            "type": "number",
            "format": "double"
          },
          "180d_iv_put": {
            "type": "number",
            "format": "double"
          },
          "180d_iv_mean": {
            "type": "number",
            "format": "double"
          },
          "270d_iv_call": {
            "type": "number",
            "format": "double"
          },
          "270d_iv_put": {
            "type": "number",
            "format": "double"
          },
          "270d_iv_mean": {
            "type": "number",
            "format": "double"
          },
          "360d_iv_call": {
            "type": "number",
            "format": "double"
          },
          "360d_iv_put": {
            "type": "number",
            "format": "double"
          },
          "360d_iv_mean": {
            "type": "number",
            "format": "double"
          },
          "720d_iv_call": {
            "type": "number",
            "format": "double"
          },
          "720d_iv_put": {
            "type": "number",
            "format": "double"
          },
          "720d_iv_mean": {
            "type": "number",
            "format": "double"
          },
          "1080d_iv_call": {
            "type": "number",
            "format": "double"
          },
          "1080d_iv_put": {
            "type": "number",
            "format": "double"
          },
          "1080d_iv_mean": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "RestApiResponseEodEquityIvx": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "query": {
            "$ref": "#/components/schemas/Query"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EodEquityIvx"
            }
          }
        }
      },
      "EodEquityIvs": {
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "exchange": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "period": {
            "type": "string"
          },
          "strike": {
            "type": "number",
            "format": "double"
          },
          "iv": {
            "type": "number",
            "format": "double"
          },
          "delta": {
            "type": "number",
            "format": "double"
          },
          "record_no": {
            "type": "integer",
            "format": "int64"
          },
          "out-of-the-money_%": {
            "type": "integer",
            "format": "int32"
          },
          "call/put": {
            "type": "string"
          }
        }
      },
      "RestApiResponseEodEquityIvs": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "query": {
            "$ref": "#/components/schemas/Query"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EodEquityIvs"
            }
          }
        }
      },
      "EodEquityHv": {
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "exchange": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "record_no": {
            "type": "integer",
            "format": "int64"
          },
          "10d_hv": {
            "type": "number",
            "format": "double"
          },
          "20d_hv": {
            "type": "number",
            "format": "double"
          },
          "30d_hv": {
            "type": "number",
            "format": "double"
          },
          "60d_hv": {
            "type": "number",
            "format": "double"
          },
          "90d_hv": {
            "type": "number",
            "format": "double"
          },
          "120d_hv": {
            "type": "number",
            "format": "double"
          },
          "150d_hv": {
            "type": "number",
            "format": "double"
          },
          "180d_hv": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "RestApiResponseEodEquityHv": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "query": {
            "$ref": "#/components/schemas/Query"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EodEquityHv"
            }
          }
        }
      }
    }
  },
  "x-tagGroups": [
    {
      "name": "Equities/Options",
      "tags": [
        "ㅤEOD Equities",
        "ㅤEOD Equity Options",
        "ㅤRT Equities",
        "ㅤRT Equity Options",
        "ㅤDelayed Equities",
        "ㅤDelayed Equity Options",
        "ㅤIntraday Equities",
        "ㅤIntraday Equity Options",
        "ㅤLive Equities"
      ]
    },
    {
      "name": "Futures/Options",
      "tags": [
        "ㅤEOD Futures",
        "ㅤEOD Futures Options",
        "ㅤRT Futures",
        "ㅤRT Futures Options"
      ]
    }
  ]
}